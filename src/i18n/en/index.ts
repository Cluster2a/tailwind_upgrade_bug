import type { BaseTranslation } from '../i18n-types'

const en: BaseTranslation = {
	language_de: 'Deutsch',
	language_en: 'English (GB)',
	language_en_us: 'English (US)',
	auth: {
		login: {
			/* general */
			general: {
				title: 'Login',
			},
			/* component specific */
			form: {
				title: 'Login',
				fields: {
					email: 'Email address',
					password: 'Password',
					forgotPassword: 'Forgot password?',
					stayLoggedIn: 'Stay logged in',
				},
				buttons: {
					signIn: 'Sign in',
				},
				links: {
					signUp: 'No account yet? <a data-sveltekit-preload-data="hover" href="/register" class="text-blue-400 hover:underline hover:text-blue-300" tabindex="6">Register now</a>.',
				}
			},
			/* messages */
			messages: {
				loginFailed: 'Error during login. Please check your email address and password.',
				loginFailedCSRF: 'Error logging in. Please reload the page and try again.',
				loginFailedEmailNotVerified: 'Your e-mail address is not yet verified. Click the link in the e-mail we have sent you.',
				loginFailedUserBlocked: 'Your account has been blocked. Please contact the support.',
				activationSuccessful: 'Your account has been activated. You can now login.',
				activationFailed: 'Error while activating your account. The activation link is invalid.',
				passwordResetSuccessful: 'Your password has been reset. You can now login.',
				activationLinkInvalid: 'The activation link is invalid.',
				activationLinkAlreadyUsed: 'The activation link has already been used.',
				ssoLoginFailed: 'An error occurred. Please contact a team superadmin.',
			},
			/* login via team slug / company login via sso */
			teamSlug: {
				title: 'Login',
				ssoMultiTenantDescription: 'Select your Identity Provider to sign in.',
				teamImage: 'Team logo',
				messages: {
					ssoLogoutSuccessful: 'You have been logged out.',
					ssoLoginFailed: 'An error occurred. Please contact a team superadmin.',
				},
				buttons: {
					login: 'Login with {name}',
				},
			}
		},
		register: {
			/* general */
			general: {
				title: 'Registration',
			},
			/* component specific */
			form: {
				title: 'Create a new account',
				fields: {
					firstName: 'First name',
					lastName: 'Last name',
					emailAddress: 'Email address',
					phoneNumber: 'Phone number',
					password: 'Password',
					passwordHint: 'Minimum 8 characters',
					passwordConfirm: 'Confirm password',
					acceptTerms: 'By registering you agree to our <a href="{linkTermsOfService}" target="_blank" class="text-blue-400 hover:underline hover:text-blue-300">Terms of Service</a>.',
				},
				buttons: {
					register: 'Register',
				},
				links: {
					signIn: 'Already signed up? <a data-sveltekit-preload-data="hover" href="/login" class="text-blue-400 hover:underline hover:text-blue-300">Log in here</a>.',
				}
			},
			/* messages */
			messages: {
				validationError: 'An error occurred. Please check your input.',
				followingInvite: '<span class="font-medium">Welcome!</span> You are following an invitation and will automatically join the corresponding team.',
				passwordConfirmationFailed: 'Passwords don\'t match.',
				passwordLengthFailed: 'Password is too short.',
				emailFailed: 'Please check your email address.',
				invitationRoleInvalid: 'The role for this invitation is invalid. Please contact the team administrator.',
			}
		},
		registerVerify: {
			/* general */
			general: {
				title: 'Registration complete',
			},
			/* component specific */
			title: 'Almost done!',
			description: 'Please check your email account and click on the activation link to activate your account.',
			wrongAddress: 'Wrong address? Start over and <a data-sveltekit-preload-data="hover" href="/register" class="text-blue-400 hover:underline hover:text-blue-300">register again</a>.',
			buttons: {
				resendEmail: 'Re-send confirmation link',
			},
			/* messages */
			messages: {
				resendSuccessful: 'The confirmation link has been re-sent to your email address.',
				resendFailed: 'Error while sending the confirmation link. Please try again later.',
			}
		},
		resetInit: {
			/* general */
			general: {
				title: 'Reset password',
			},
			/* component specific */
			form: {
				title: 'Reset your password',
				description: 'Forgot your password? Enter your email address and we will send you a reset link.',
				fields: {
					email: 'Email address',
				},
				buttons: {
					sendEmail: 'Reset password',
					back: 'Back',
				}
			},
			/* messages */
			messages: {
				resetFailure: 'Error while resetting your password. Please check your email address.',
				rateLimited: 'Too many requests. Please try again in a few minutes.',
				resetSuccess: 'Your password has been reset. Please check your email.',
			}
		},
		resetConfirm: {
			/* general */
			general: {
				title: 'Reset password',
			},
			/* component specific */
			form: {
				title: 'Reset your password',
				description: 'You can now set a new password.',
				fields: {
					email: 'Email address',
					password: 'New password',
					passwordHint: 'Minimum 8 characters',
					passwordConfirm: 'Confirm new password',
				},
				buttons: {
					changePassword: 'Change password',
					cancel: 'Cancel',
				}
			},
			/* messages */
			messages: {
				errorThrottled: 'The reset link is invalid. Please try again in a few minutes.',
				errorInvalidToken: 'The reset link for resetting the password is invalid or has been already used.',
				errorInvalidUser: 'The entered email address is invalid.',
			}
		}
	},
	meta: {
		title: {
			appName: 'freispace',
		},
		logoLink: {
			imageAlt: 'freispace',
			linkTitle: 'freispace home page',
		},
		claim: {
			loginSidebar: 'The future of post scheduling.',
		},
		footer: {
			contact: 'Contact',
			linkContact: 'https://freispace.com/contact',
			legal: 'Legal',
			linkLegal: 'https://freispace.com/legal',
			privacyPolicy: 'Privacy Policy',
			linkPrivacyPolicy: 'https://freispace.com/privacy-policy',
			termsOfService: 'Terms of Service',
			linkTermsOfService: 'https://freispace.com/terms',
		},
		legal: {
			linkToms: 'https://freispace.com/dl/gdpr/freispace-technical-and-organisational-measures.pdf',
		},
	},
	general: {
		cost_units: {
			minute: 'minute',
			hour: 'hour',
			day: 'day',
			week: 'week',
			month: 'month',
			usage: 'use',
		},
		carbon_units: {
			minute: 'minute',
			hour: 'hour',
			day: 'day',
			week: 'week',
			month: 'month',
			usage: 'use',
		},
		cost_per_unit: '{num} per {unit}',
		usage_per_unit: '{num} {{use|uses}}',
		countryList: {
			commonlyUsed: 'Commonly used',
			allCountries: 'All countries',
		},
		roleSuperAdmin: 'Superadmin',
		tags: {
			internal: 'internal',
			external: 'external',
		},
		errors: {
			generalFileSizeMax: 'The file is too large. Please choose a file with a maximum size of {maxSize} MB.',
			imageFileSizeMax: 'The file is too large. Please choose an image with a maximum size of {maxSize} MB.',
		},
		noResults: 'No results.',
		documents: {
			offer: 'Quote',
			invoice: 'Invoice',
		},
		confirmLeave: 'Are you sure you want to leave this page? Your changes will be lost.',
		optional: '(optional)',
		archived: '(archived)',
		weekDays: {
			monday: 'Monday',
			tuesday: 'Tuesday',
			wednesday: 'Wednesday',
			thursday: 'Thursday',
			friday: 'Friday',
			saturday: 'Saturday',
			sunday: 'Sunday',
		},
		weekDaysShort: {
			monday: 'Mon',
			tuesday: 'Tue',
			wednesday: 'Wed',
			thursday: 'Thu',
			friday: 'Fri',
			saturday: 'Sat',
			sunday: 'Sun',
		},
		archival: {
			buttonArchive: 'Archive',
			buttonUnarchive: 'Re-activate',
			showAll: 'all',
			showActive: 'active',
			showArchived: 'archived',
		},
		usageStatus: {
			available: 'available',
			booked: 'booked',
			overbooked: 'overbooked',
		},
		ariaLabels: {
			dropdown: 'Open and close menu',
			add: 'Create new',
			edit: 'Edit',
			delete: 'Delete',
			remove: 'Remove',
			removeColor: 'Remove colour',
			settings: 'Settings',
			copyToClipboard: 'Copy to clipboard',
			close: 'Close',
			show: 'Show',
			nextYear: 'Navigate to next year',
			previousYear: 'Navigate to previous year',
			previousMonth: 'Previous month',
			nextMonth: 'Next month',
			previousWeek: 'Previous week',
			nextWeek: 'Next week',
			deleteImage: 'Delete current image',
			zoomIn: 'Zoom in',
			zoomOut: 'Zoom out',
			switchLanguage: 'Switch language',
			download: 'Download',
			print: 'Print',
		}
	},
	wizard: {
		index: {
			title: 'First steps',
			general: {
				title: 'Welcome, {userName} 👋',
				worksWithTeams: 'freispace works with teams — to get started, please join a team by entering your personal invite code.',
			},
			joinTeam: {
				title: 'Join a team',
				askForInvite: '<p class="text-sm text-gray-200">If you don\'t have an invite code yet, ask a member of an existing team to invite you by adding <span class="px-2 py-0.5 rounded bg-gray-700/50 text-pink-200 mx-1">{userEmail}</span> to their team.</p>',
				inviteCode: 'Invite code',
				inviteCodePlaceholder: 'multiple-words-invite-code',
				alerts: {
					invalidCode: 'The invitation code is invalid.',
					teamJoined: 'You successfully joined the team.'
				},
				buttons: {
					joinTeam: 'Join team',
				}
			},
			createTeam: {
				title: 'Create a team',
				createNewTeam: '<p>If you are the first person of your company to register at freispace, create a new team here.</p><p>We recommend your company\'s name as team name.</p>',
				teamName: 'Team name',
				teamNamePlaceholder: 'Company name',
				testData: 'Fill team with test data',
				testDataDescription: 'Creates multiple suites, projects and bookings',
				alerts: {
					teamCreated: 'The new team <i>{teamName}</i> has been created.'
				},
				buttons: {
					createTeam: 'Create team',
				}
			},
		}
	},
	analytics: {
		costReport: {
			general: {
				title: 'Cost report',
				buttons: {
					export: 'Export',
				},
			},
			content: {
				dropdowns: {
					timeframe: {
						last30days: 'Last 30 days',
						lastMonth: 'Last month',
						last3months: 'Last 3 months',
						thisYear: 'This year',
						lastYear: 'Last year',
						customTimeframe: 'Custom timeframe',
					},
					displaySettings: {
						displaySettings: 'Display settings',
						showAccountNumbers: 'Account numbers',
						showAccountNumbersExplanation: 'Display account number status',
						showResourceTables: 'Resource usage',
						showResourceTablesExplanation: 'Show detailed resource usage list',
						showZeroRows: 'Display zero values',
						showZeroRowsExplanation: 'Show bookings with no attached costs',
					},
				},
				to: 'to',
				export: {
					title: 'Cost report',
					exportedOn: 'Generated {dateNow}',
					author: 'freispace',
					keywords: 'freispace, analytics, cost report',
					timeframe: 'Timeframe: {startDate} - {endDate}',
					filename: 'freispace-cost-report-{dateNow}',
				},
				stats: {
					cumulativeCosts: 'Cumulative costs',
					bookings: 'Bookings',
					projects: 'Projects',
					projectlessBookings: 'Overheads bookings',
					projectlessBookingsExplanation: 'Amount of bookings not associated with a project. These are usually counted as overheads.',
				},
				report: {
					title: 'Cost report',
					timeframe: 'for the timeframe {startDate} - {endDate}',
					noDataInTimeframe: 'No data for the selected timeframe.',
					bookingsWithoutProject: 'Bookings with no project',
					numBookings: '{{ No bookings | One booking | ?? bookings }}',
					numResources: '{{ No resources | One resource | ?? resources }}',
					noAccountNumber: 'Without account number',
					accountableBudget: 'Budget',
					accountableCosts: 'Costs',
					accountableBalance: 'Balance',
					sumtotal: 'Total:',
					subprojects: 'Subprojects',
					showSubprojects: 'show',
					hideSubprojects: 'hide',
				},
				charts: {
					titleCosts: 'Cost breakdown',
					labelCosts: 'Costs',
					titleBookings: 'Bookings breakdown',
					labelBookings: 'Bookings',
					titleResources: 'Resource usage',
					labelResources: 'Resources',
					noProject: 'Without project',
				},
			},
		},
		carbonReport: {
			general: {
				title: 'CO2e report',
				buttons: {
					export: 'Export',
				},
			},
			content: {
				dropdowns: {
					timeframe: {
						last30days: 'Last 30 days',
						lastMonth: 'Last month',
						last3months: 'Last 3 months',
						thisYear: 'This year',
						lastYear: 'Last year',
						customTimeframe: 'Custom timeframe',
					},
					displaySettings: {
						displaySettings: 'Display settings',
						showResourceTables: 'Resource consumption',
						showResourceTablesExplanation: 'Show detailed list',
					},
				},
				to: 'to',
				export: {
					title: 'Carbon emissions report',
					exportedOn: 'Generated {dateNow}',
					author: 'freispace',
					keywords: 'freispace, analytics, carbon report, carbon emissions, co2e',
					timeframe: 'Timeframe: {startDate} - {endDate}',
					filename: 'freispace-carbon-report-{dateNow}',
				},
				stats: {
					cumulativeCosts: 'Cumulative costs',
					bookings: 'Bookings',
					projects: 'Projects',
					projectlessBookings: 'Overheads bookings',
					projectlessBookingsExplanation: 'Amount of bookings not associated with a project. These are usually counted as overheads.',
				},
				report: {
					title: 'Report',
					timeframe: 'for the timeframe {startDate} - {endDate}',
					noDataInTimeframe: 'No data for the selected timeframe.',
					bookingsWithoutProject: 'Company bookings',
					numBookings: '{{ No bookings | One booking | ?? bookings }}',
					numResources: '{{ No resources | One resource | ?? resources }}',
					sumTotal: 'Total:',
					subprojects: 'Subprojects',
					showSubprojects: 'show',
					hideSubprojects: 'hide',
				},
				charts: {
					titleCosts: 'Distribution',
					labelCosts: 'CO2e in kg',
					titleBookings: 'Bookings breakdown',
					labelBookings: 'Bookings',
					titleResources: 'Resource usage',
					labelResources: 'Resources',
					noProject: 'Company',
				},
			},
		},
		timeRecords: {
			general: {
				title: 'Time tracking records',
			},
			content: {
				staff: 'Staff',
				total: 'Total',
				date: 'Date',
				dropdowns: {
					interval: {
						week: 'Week',
						month: 'Month',
					},
				},
				tooltips: {
					vacationDay: 'Holiday',
					vacationHalfDay: 'Half-day holiday ({daytime|{morning: morning, afternoon: afternoon}})',
					absenceHalfDay: 'Half-day, {daytime|{morning: morning, afternoon: afternoon}}',
					noDataYet: 'No times recorded yet',
					numberOfTimeEntries: '{num} {{record|records}}',
					numberOfBreakEntries: '{num} {{break|breaks}}',
				}
			},
		},
		utilization: {
			general: {
				title: 'Utilisation Analytics',
				dropdowns: {
					export: {
						export: 'Export...',
						createPDF: 'Create PDF',
						print: 'Print',
					},
				},
			},
			content: {
				dropdowns: {
					timeFrame: {
						last30days: 'Last 30 days',
						lastMonth: 'Last month',
						last3months: 'Last 3 months',
						thisYear: 'This year',
						lastYear: 'Last year',
						customTimeFrame: 'Custom timeframe',
					},
					displaySettings: {
						displaySettings: 'Display settings',
						showWeekends: 'Weekends',
						showWeekendsExplanation: 'Display weekends',
					},
				},
				filterByGroup: 'Filter by group...',
				to: 'to',
				chartUtilization: {
					title: 'Utilisation',
					timeFrame: 'in timeframe {startDate} - {endDate}',
					toggleFullscreen: 'Toggle fullscreen',
					projects: 'Projects',
					bookings: 'Bookings',
					date: 'Date',
				},
				chartBookingDays: {
					title: 'Booking days',
					timeFrame: 'in timeframe {startDate} - {endDate}',
					toggleFullscreen: 'Toggle fullscreen',
					suites: 'Rooms',
					staffs: 'Staff',
					resources: 'Resources',
					date: 'Date',
				},
				export: {
					title: 'Utilisation',
					exportedOn: 'Generated {dateNow}',
					author: 'freispace',
					keywords: 'freispace, analytics, utilisation',
					timeFrame: 'Timeframe: {startDate} - {endDate}',
					filename: 'freispace-utilisation-{dateNow}',
				},
				statistics: {
					title: 'Stats for selected timeframe',
					totalBookings: 'Total bookings',
					totalProjects: 'Total projects',
					averageLength: 'Avg. booking length',
				},
				bookingDaysSums: {
					title: 'Sum of days',
					totalDays: 'Booked days (total)',
					totalBookingsOnResources: 'Booked days per type',
					totalSuites: 'Rooms',
					totalStaffs: 'Staff',
					totalResources: 'Resources',
					totalDaySum: 'Days',
				},
			},
		},
		vacationOverview: {
			general: {
				title: 'Absences',
			},
			content: {
				banner: {
					infoText: 'This view only shows holidays and absences that do not require a time tracking entries. (E.g. home office is not shown)',
					buttonHide: 'Don\'t show again',
				},
				dropdowns: {
					displayStyle: {
						display: 'Display',
						width: 'Width',
						widthRegular: 'Regular',
						widthCompact: 'Narrow',
						lineHeight: 'Line height',
						lineHeightRegular: 'Regular',
						lineHeightCompact: 'Single line',
					},
				},
				buttons: {
					previousYear: 'Previous year',
					nextYear: 'Next year',
					today: 'Today',
				},
				week: 'Week {number}',
				vacationDays: 'Holiday<br>days',
			},
		},
	},
	clients: {
		client: {
			_layout: {
				dropdowns: {
					clientSettings: {
						clientCalendar: 'Client calendar',
						editClient: 'Edit client',
						deleteClient: 'Delete client',
					},
				},
				tabs: {
					overview: 'Overview',
					projects: 'Projects',
					prices: 'Client prices',
				}
			},
			address: {
				create: {
					general: {
						title: 'Create client address',
						shortTitle: 'new address',
						buttons: {
							cancel: 'Cancel'
						},
					},
				},
				edit: {
					general: {
						title: 'Edit client address',
						shortTitle: 'edit address',
						buttons: {
							cancel: 'Cancel'
						},
					},
				},
			},
			edit: {
				general: {
					title: 'Edit client',
					shortTitle: 'edit',
					buttons: {
						cancel: 'Cancel'
					},
				},
			},
			overview: {
				title: 'Overview',
				addresses: {
					title: 'Addresses',
					noAddressesYet: 'No addresses created yet.',
					noAddressesYetCreate: 'Add address',
					tooltips: {
						primary: 'Primary address',
						shipping: 'Shipping address',
						invoice: 'Invoice address',
					},
					dropdown: {
						edit: 'Edit',
						duplicate: 'Duplicate',
						delete: 'Delete',
					},
					buttons: {
						copyAddress: 'Copy',
						mapsLink: 'Google Maps',
					}
				},
				contacts: {
					title: 'Contacts',
					noContactsYet: 'No contacts created yet.',
					noContactsYetCreate: 'Add contact',
					tooltips: {
						importVCard: 'Import vCard',
					},
					dropdown: {
						show: 'Show contact',
						downloadVCard: 'Download vCard',
						qrCode: 'Show QR code',
						edit: 'Edit',
						duplicate: 'Duplicate',
						delete: 'Delete',
					},
				},
				clientDetails: {
					title: 'Additional information',
					nothingToShow: 'No client details.',
					comment: 'Comment / information',
					companyId: 'Company ID',
					companyVatId: 'VAT ID',
					dueDays: 'Payment terms',
					discount: 'Discount rule',
					paymentMethod: 'Payment method',
					offerEmails: 'Quotes to',
					invoiceEmails: 'Invoices to',
					reminderEmails: 'Reminders to',
				},
			},
			prices: {
				title: 'Prices',
			},
			contacts: {
				title: 'Contacts',
				create: {
					general: {
						title: 'Create client contact',
						shortTitle: 'new contact',
						buttons: {
							cancel: 'Cancel'
						},
					},
				},
				edit: {
					general: {
						title: 'Edit client contact',
						shortTitle: 'edit contact',
						buttons: {
							cancel: 'Cancel'
						},
					},
				},
			},
			projects: {
				title: 'Projects'
			},
		},
		create: {
			general: {
				title: 'Create client',
				shortTitle: 'new',
				buttons: {
					cancel: 'Cancel'
				},
			},
		},
		settings: {
			groups: {
				title: 'Client groups',
				description: 'Client groups primarily serve price lists.',
				labels: {
					name: 'Name',
					color: 'Colour',
				}
			},
			general: {
				title: 'Settings for clients',
				shortTitle: 'edit',
				titleGlobalFieldsClients: 'Custom fields for clients',
				titleGlobalFieldsAddresses: 'Custom fields for addresses',
				titleGlobalFieldsContacts: 'Custom fields for contacts',
				buttons: {
					back: 'Go back'
				},
			},
		},
		index: {
			title: 'Clients',
			buttons: {
				addClient: 'Add client',
				editClientSettings: 'Settings',
				filters: 'Filters',
			},
			dropdowns: {
				export: {
					export: 'Export',
					exportAsExcel: 'Export as Excel',
					exportAsCsv: 'Export as CSV',
				},
				client: {
					view: 'View',
					edit: 'Edit',
					delete: 'Delete',
				}
			},
			table: {
				image: 'Image',
				name: 'Name',
				number: 'Number',
				starred: 'Starred',
				groups: 'Groups',
				options: 'Options',
				placeholderFilter: 'Filter...',
				filterName: 'Filter by name',
				filterNumber: 'Filter by number',
				filterStarred: 'Filter by starred',
				filterStarredOff: '(not filtered)',
				filterStarredYes: 'Only starred',
				filterStarredNo: 'No starred',
			},
		},
	},
	dashboard: {
		general: {
			title: 'Dashboard',
			buttons: {
				addBooking: 'Add booking',
				showCalendarLink: 'Display calendar link',
			},
			messageJoinedTeam: {
				title: 'Welcome to team {teamName}!',
				description: 'You have successfully joined.'
			},
		},
		content: {
			freispaceNews: {
				title: 'June update',
				news: '<h2 class="text-base font-medium pb-1">Order numbers <span class="rounded bg-green-700 text-white text-xs px-2 ml-1">new</span></h2><p class="pb-2">Assemble quotes and invoices via orders, allowing for analysis of quotes vs. invoices and automated pre-filling of document data.</p><h2 class="text-base font-medium pb-1">Questions? Requests?</h2><p><a href="mailto:support@freispace.com" class="text-blue-600 dark:text-blue-400 hover:underline">Send us an e-mail!</a></p>',
			}
		}
	},
	groups: {
		group: {
			_layout: {
				dropdowns: {
					groupSettings: {
						groupCalendar: 'Group calendar',
						editGroup: 'Edit group',
						duplicateGroup: 'Duplicate',
						deleteGroup: 'Delete group',
					},
				},
				tabs: {
					groupContents: 'Group contents',
					bookings: 'Bookings',
					projects: 'Projects',
				}
			},
			bookings: {
				title: 'Bookings',
			},
			index: {
				title: 'Group contents',
				content: {
					loadingMessage: 'Loading group contents...',
					staffHeadline: 'Staff',
					staffButtonAdd: 'Add group member',
					resourceHeadline: 'Resources',
					resourceButtonAdd: 'Add resource',
					roomsHeadline: 'Rooms',
					roomsButtonAdd: 'Add room',
				}
			},
			projects: {
				title: 'Projects'
			},
		},
		settings: {
			general: {
				title: 'Settings for groups',
				shortTitle: 'Settings',
				buttons: {
					back: 'Go back'
				},
			},
		},
		index: {
			general: {
				title: 'Groups',
				buttons: {
					addGroup: 'Add group',
					editGroupSettings: 'Settings',
				},
			},
			content: {
				noResourcesAttached: 'Empty group',
				headers: {
					color: 'Colour',
					name: 'Name',
					number: 'Number',
					staff: 'Staff',
					resources: 'Resources',
					suites: 'Rooms',
					options: 'Options',
				},
				dropdowns: {
					viewMode: {
						tiles: 'Tile view',
						list: 'List view',
					},
					sorting: {
						name: 'Name',
						nameAscending: 'Name ascending',
						nameDescending: 'Name descending',
						number: 'Group #',
						numberAscending: 'Group # ascending',
						numberDescending: 'Group # descending',
					},
					groupSettings: {
						groupCalendar: 'Group calendar',
						editGroup: 'Edit group',
						duplicateGroup: 'Duplicate',
						deleteGroup: 'Delete group',
					},
				},
			},
			noGroups: {
				noGroups: 'No groups.',
				createNewGroup: 'Create new group',
			}
		},
	},
	inventoryItems: {
		item: {
			_layout: {
				dropdowns: {
					itemSettings: {
						editItem: 'Edit item',
						deleteItem: 'Delete item',
					},
				},
				tabs: {
					overview: 'Overview',
					invoices: 'Invoices',
					offers: 'Quotes',
					components: 'Components',
					clientPrices: 'Client prices',
					presences: 'Time tracking',
				}
			},
			clientPrices: {
				title: 'Client prices',
			},
			components: {
				title: 'Components',
				content: {
					description: 'Resources and activities required for this item.',
					descriptionExtended: 'Used when converting quotes to bookings and bookings to invoices.',
					addButton: 'Add component',
					noRows: 'No components defined.',
					edit: 'Edit',
					delete: 'Delete',
					typeNone: 'None',
					typeStaff: 'Staff',
					typeSuite: 'Room',
					typeResource: 'Resource',
					list: {
						anyResource: 'Any {num} {{resource|resources}}',
						selectedSuites: '{num} {{room|rooms}}',
						selectedStaffs: '{num} {{staff|staffs}}',
						selectedResources: '{num} {{resource|resources}}',
						withActivity: 'with the activity <span class="text-pink-700 dark:text-yellow-200">{activity}</span>',
						group: '<span class="text-pink-700 dark:text-yellow-200">{resource}</span> from the group <span class="text-pink-700 dark:text-yellow-200">{group}</span> {activity?:string}',
						specificSuite: 'Room <span class="text-pink-700 dark:text-yellow-200">{suite}</span> {activity?:string}',
						specificStaff: 'Staff <span class="text-pink-700 dark:text-yellow-200">{staff}</span> {activity?:string}',
						specificResource: 'Resource <span class="text-pink-700 dark:text-yellow-200">{resource}</span> {activity?:string}',
						entity: '<span class="text-pink-700 dark:text-yellow-200">{entity}</span> {activity?:string}',
					},
				},
				modal: {
					title: 'Edit component',
					description: 'Select what makes up the component of this goods or service. Examples:<br> - Any person that is part of a specific group.<br> - Any room with a specific activity.<br> - A specific resource.',
					selectPlaceholder: 'Select to restrict...',
					group: 'Group',
					entityType: 'Type',
					entityId: 'Resource',
					entityIdDescription: 'Restrict to specific resource (optional)',
					activity: 'Activity',
					activityDescription: 'Restrict to specific activity (optional)',
					entityAmount: 'Amount',
					entityAmountDescription: 'How many resources of the selected type are required',
					results: {
						empty: 'You need to at least select a group or entity type.',
						anyResource: 'any {num} {{resource|resources}}',
						selectedSuites: '{num} {{room|rooms}}',
						selectedStaffs: '{num} {{staff|staffs}}',
						selectedResources: '{num} {{resource|resources}}',
						withActivity: 'with the activity <span class="text-pink-700 dark:text-yellow-200">{activity}</span>',
						group: 'Fulfilled when any <span class="text-pink-700 dark:text-yellow-200">{resource}</span> from the group <span class="text-pink-700 dark:text-yellow-200">{group}</span> {activity?:string} {num:number|{1: is, *: are}} present.',
						specificSuite: 'Fulfilled if the room <span class="text-pink-700 dark:text-yellow-200">{suite}</span> {activity?:string} is present.',
						specificStaff: 'Fulfilled if the person <span class="text-pink-700 dark:text-yellow-200">{staff}</span> {activity?:string} is present.',
						specificResource: 'Fulfilled if the resource <span class="text-pink-700 dark:text-yellow-200">{resource}</span> {activity?:string} is present.',
						entity: 'Fulfilled when any <span class="text-pink-700 dark:text-yellow-200">{entity}</span> {activity?:string} {num:number|{1: is, *: are}} present.',
					},
					cancel: 'Cancel',
					save: 'Save',
				},
			},
			edit: {
				general: {
					title: 'Edit item',
					shortTitle: 'edit',
					buttons: {
						cancel: 'Cancel'
					},
				},
			},
			overview: {
				title: 'Overview',
				content: {
					title: 'Detailed information',
					nothingToShow: 'No details.',
					text: 'Item text',
					searchKeys: 'Search terms',
				},
			},
			presences: {
				title: 'Time tracking',
			},
		},
		create: {
			general: {
				title: 'Create item',
				shortTitle: 'new',
				buttons: {
					cancel: 'Cancel'
				},
			},
		},
		settings: {
			general: {
				title: 'Settings for goods & services',
				shortTitle: 'Settings',
				buttons: {
					back: 'Go back'
				},
			},
			groups: {
				title: 'Goods/Service groups',
				description: 'Groups are primarily used for pricing.',
				labels: {
					name: 'Name',
					color: 'Colour',
				}
			},
		},
		index: {
			title: 'Goods & Services',
			buttons: {
				addItem: 'Add item',
				editItemSettings: 'Settings',
				filters: 'Filter',
			},
			dropdowns: {
				export: {
					export: 'Export',
					exportAsExcel: 'Export as Excel',
					exportAsCsv: 'Export as CSV',
				},
				item: {
					view: 'View',
					edit: 'Edit',
					duplicate: 'Duplicate',
					delete: 'Delete',
				}
			},
			table: {
				number: 'Number',
				name: 'Name',
				type: 'Type',
				sku: 'SKU',
				groups: 'Groups',
				price: 'Price',
				purchasePrice: 'Purchase price',
				options: 'Options',
				placeholderFilter: 'Filter...',
				filterNumber: 'Filter by number',
				filterName: 'Filter by name',
				filterType: 'Filter by type',
				filterSku: 'Filter by SKU',
				pricePerUnit: 'per {unit}',
				typeAll: 'All',
				typeProduct: 'Goods',
				typeService: 'Service',
				selectableTimeTracking: 'Selectable in time tracking',
			},
		},
	},
	invoicing: {
		orders: {
			order: {
				edit: {
					general: {
						title: 'Edit order',
						shortTitle: 'edit',
						buttons: {
							cancel: 'Cancel',
						},
					},
				},
				view: {
					dropdowns: {
						order: {
							createOffer: 'Create quote',
							createInvoice: 'Create invoice',
							createRecurringInvoice: 'Create recurring invoice',
						},
					},
					content: {
						numberOffers: '{num} {{ quote | quotes }}',
						numberInvoices: '{num} {{ invoice | invoices }}',
						numberBookings: '{num} {{ booking | bookings }}',
						project: 'Project',
						noProject: 'No project linked',
						client: 'Client',
						noClient: 'No client linked',
						clientContact: 'Client contact',
						noClientContact: 'No client contact linked',
						clientAddress: 'Billing address',
						noClientAddress: 'No billing address linked',
						offers: 'Quotes',
						noOffers: 'No quotes yet.',
						invoices: 'Invoices',
						noInvoices: 'No invoices yet.',
						createOffer: 'New quote',
						createInvoice: 'New invoice',
						item: 'Item',
						quantity: 'Quantity',
						unitPrice: 'Unit price',
						purchasePrice: 'Purchase price',
						margin: 'Margin',
						sum: 'Sum',
					},
				},
			},
			create: {
				general: {
					title: 'Create new order',
					shortTitle: 'new',
					buttons: {
						cancel: 'Cancel',
					},
				},
			},
			settings: {
				general: {
					title: 'Settings for orders',
					shortTitle: 'Settings',
					buttons: {
						back: 'Go back'
					},
				},
			},
			index: {
				general: {
					title: 'Orders',
					buttons: {
						add: 'Add',
						addOrder: 'New order',
						addOffer: 'New quote',
						addInvoice: 'New invoice',
						addRecurringInvoice: 'New recurring invoice',
						editOrderSettings: 'Settings',
					},
				},
				buttons: {
					filters: 'Filter',
				},
				dropdowns: {
					export: {
						export: 'Export',
						exportAsExcel: 'Export as Excel',
						exportAsCsv: 'Export as CSV',
					},
					item: {
						view: 'View',
						edit: 'Edit',
						duplicate: 'Duplicate',
						createOffer: 'Create quote',
						createInvoice: 'Create invoice',
						createRecurringInvoice: 'Create recurring invoice',
						delete: 'Delete',
					}
				},
				table: {
					number: 'Number',
					client: 'Client',
					project: 'Project',
					linkedItems: 'Linked to',
					dateCreated: 'Created',
					options: 'Options',
					numberOffers: '{{ No quotes | One quote | ?? quotes }}',
					numberInvoices: '{{ No invoices | One invoice | ?? invoices }}',
					numberBookings: '{{ No bookings | One booking | ?? bookings }}',
					placeholderFilter: 'Filter...',
					placeholderMinValue: 'min',
					placeholderMaxValue: 'max',
					filterNumber: 'Filter by number',
					filterClient: 'Filter by client',
					filterProject: 'Filter by project',
					filterDateMin: 'Filter by min date',
					filterDateMax: 'Filter by max date',
				},
			},
		},
		invoices: {
			invoice: {
				edit: {
					general: {
						title: 'Edit invoice',
						shortTitle: 'edit',
						buttons: {
							preview: 'Preview',
							saveDraft: 'Save',
							saveDraftLong: 'Save draft',
							finalize: 'Finalize',
						},
					},
				},
				finalize: {
					general: {
						title: 'Finalize invoice',
						shortTitle: 'finalize',
						draft: 'Draft',
						buttons: {
							edit: 'edit',
						},
					},
					dropdowns: {
						invoice: {
							duplicate: 'Duplicate',
							delete: 'Delete',
						}
					},
					errors: {
						errorSavingTitle: 'Error creating invoice',
						errorCheckData: 'Attention, missing or incorrect information! The invoice may not be legally secure and compliant.',
						companyAddress: 'The issuer address may not be complete',
						items: 'The invoice does not contain any items',
						clientId: 'No customer was linked as a recipient, which means analytics will not be possible',
						negativeSum: 'The invoice amount is 0 or negative',
						companyLegal: 'The commercial register information is not complete',
						companyTax: 'A tax number or sales tax identification number (if available) is missing',
						companyDirector: 'Information about the management is missing',
						companyAccount: 'The bank account details are missing or incomplete',
					},
					finalize: {
						title: 'Finalize and commit',
						tooltipExplanation: 'By clicking one of the buttons, the invoice is committed and can no longer be edited.',
						buttonSend: 'Send',
						buttonDownload: 'Download PDF',
						buttonPrint: 'Print',
						buttonSave: 'Save (commit only)',
						titleDraft: 'Draft',
						buttonDownloadDraft: 'Download draft',
						buttonPrintDraft: 'Print draft',
						draftFilename: 'invoice-draft',
					},
					template: {
						title: 'Template',
						default: 'Default',
					},
					documentOptions: {
						title: 'Document options',
						toggleQRCode: 'EPC QR Code (GiroCode)',
						toggleLogo: 'Display logo',
						toggleItemTax: 'Display tax per item',
						toggleItemQuantity: 'Display quantity',
						toggleInventoryNumber: 'Inventory number',
						toggleItemDetails: 'Item details',
						toggleClientNumber: 'Client number',
						toggleContactPerson: 'Contact person',
						toggleFoldLines: 'Fold marks',
						togglePageNumbers: 'Page numbers',
						toggleIssuerAddress: 'Issuer address',
						toggleLetterhead: 'Letterhead',
						toggleFooter: 'Footer',
					},
				},
				send: {
					general: {
						title: 'Send invoice',
						shortTitle: 'send',
					},
					dropdowns: {
						invoice: {
							duplicate: 'Duplicate',
							cancel: 'Cancel invoice',
						}
					},
					send: {
						title: 'Send invoice',
						buttonSend: 'Send by e-mail',
						buttonDownload: 'Download PDF',
						buttonPrint: 'Print',
					},
				},
				view: {
					dropdowns: {
						invoice: {
							view: 'View',
							duplicate: 'Duplicate',
							addPayment: 'Add payment',
							cancel: 'Cancel invoice',
							send: 'Send',
						},
					},
					content: {
						cancellationInvoice: 'Cancellation Invoice',
						issuer: 'Issuer',
						client: 'Client',
						sum: 'Sum',
						gross: 'Gross:',
						order: 'Order',
						paymentDue: 'Payment due',
						dueDate: 'Due date',
						sentDate: 'Sent date',
						lockedDate: 'Locked',
						linkedDocuments: 'Linked documents',
						linkedBookings: 'Linked bookings',
					},
				},
			},
			create: {
				general: {
					title: 'Create new invoice',
					shortTitle: 'new',
					buttons: {
						preview: 'Preview',
						saveDraft: 'Save',
						saveDraftLong: 'Save draft',
						finalize: 'Finalize',
					},
				},
			},
			settings: {
				general: {
					title: 'Settings for billing',
					shortTitle: 'Settings',
					buttons: {
						back: 'Go back'
					},
				},
			},
			index: {
				general: {
					title: 'Invoices',
					buttons: {
						add: 'Add',
						addInvoice: 'New invoice',
						addRecurringInvoice: 'New recurring invoice',
						addOffer: 'New quote',
						editInvoicingSettings: 'Settings',
					},
				},
				buttons: {
					filters: 'Filter',
					statusAll: 'All',
					statusDraft: 'Draft',
					statusOpen: 'Open',
					statusOverdue: 'Overdue',
					statusPaid: 'Paid',
					statusPartiallyPaid: 'Partially paid',
					statusCanceled: 'Cancellation',
					statusLocked: 'Locked',
					filterStatus: 'Only show invoices with status',
				},
				dropdowns: {
					export: {
						export: 'Export',
						exportAsExcel: 'Export as Excel',
						exportAsCsv: 'Export as CSV',
						exportToXero: 'Export for Xero',
					},
					item: {
						view: 'View',
						send: 'Send',
						markPaid: 'Mark as paid',
						addPayment: 'Register payment',
						download: 'Download',
						edit: 'Edit',
						finalize: 'Finalize',
						duplicate: 'Duplicate',
						delete: 'Delete',
						cancel: 'Cancel invoice',
					}
				},
				table: {
					status: 'Status',
					dueDate: 'Due date',
					number: 'Number',
					clientAndSubject: 'Client / subject',
					order: 'Order',
					date: 'Date',
					sumNet: 'Subtotal (net)',
					sumOpen: 'Outstanding (gross)',
					options: 'Options',
					placeholderFilter: 'Filter...',
					placeholderMinValue: 'min',
					placeholderMaxValue: 'max',
					filterDueDateMin: 'Filter by min due date',
					filterDueDateMax: 'Filter by max due date',
					filterNumber: 'Filter by number',
					filterClient: 'Filter by client',
					filterOrder: 'Filter by order',
					filterDateMin: 'Filter by min date',
					filterDateMax: 'Filter by max date',
					filterSumMin: 'Filter by min sum',
					filterSumMax: 'Filter by max sum',
					filterOutstandingMin: 'Filter by min outstanding',
					filterOutstandingMax: 'Filter by max outstanding',
					pricePerUnit: 'per {unit}',
					typeAll: 'all',
					typeProduct: 'goods',
					typeService: 'service',
					linkedToOffer: 'Linked to quote',
				},
			},
		},
		offers: {
			offer: {
				edit: {
					general: {
						title: 'Edit quote',
						shortTitle: 'edit',
						buttons: {
							preview: 'Preview',
							saveDraft: 'Save',
							saveDraftLong: 'Save draft',
							finalize: 'Finalize',
						},
					},
				},
				finalize: {
					general: {
						title: 'Finalize quote',
						shortTitle: 'finalize',
						draft: 'Draft',
						buttons: {
							edit: 'edit',
						},
					},
					dropdowns: {
						offer: {
							duplicate: 'Duplicate',
							delete: 'Delete',
						}
					},
					errors: {
						errorSavingTitle: 'Error creating quote',
						errorCheckData: 'Attention, missing or incorrect information! The invoice may not be legally secure and compliant.',
						companyAddress: 'The issuer address may not be complete',
						items: 'The invoice does not contain any items',
						clientId: 'No customer was linked as a recipient, which means analytics will not be possible',
						negativeSum: 'The invoice amount is 0 or negative',
						companyLegal: 'The commercial register information is not complete',
						companyTax: 'A tax number or sales tax identification number (if available) is missing',
						companyDirector: 'Information about the management is missing',
						companyAccount: 'The bank account details are missing or incomplete',
					},
					finalize: {
						title: 'Finalize and commit',
						tooltipExplanation: 'By clicking one of the buttons, the invoice is committed and can no longer be edited.',
						buttonSend: 'Send',
						buttonDownload: 'Download PDF',
						buttonPrint: 'Print',
						buttonSave: 'Save (commit only)',
						titleDraft: 'Draft',
						buttonDownloadDraft: 'Download draft',
						buttonPrintDraft: 'Print draft',
						draftFilename: 'invoice-draft',
					},
					template: {
						title: 'Template',
						default: 'Default',
					},
					documentOptions: {
						title: 'Document options',
						toggleQRCode: 'EPC QR Code (GiroCode)',
						toggleLogo: 'Display logo',
						toggleItemTax: 'Display tax per item',
						toggleItemQuantity: 'Display quantity',
						toggleInventoryNumber: 'Inventory number',
						toggleItemDetails: 'Item details',
						toggleClientNumber: 'Client number',
						toggleContactPerson: 'Contact person',
						toggleFoldLines: 'Fold marks',
						togglePageNumbers: 'Page numbers',
						toggleIssuerAddress: 'Issuer address',
						toggleLetterhead: 'Letterhead',
						toggleFooter: 'Footer',
					},
				},
				send: {
					general: {
						title: 'Send quote',
						shortTitle: 'send',
					},
					dropdowns: {
						offer: {
							duplicate: 'Duplicate',
						}
					},
					send: {
						title: 'Send quote',
						buttonSend: 'Send by e-mail',
						buttonDownload: 'Download PDF',
						buttonPrint: 'Print',
					},
				},
				view: {
					dropdowns: {
						offer: {
							view: 'View',
							duplicate: 'Duplicate',
							createInvoice: 'Create invoice',
							markAccepted: 'Mark as accepted',
							markDeclined: 'Mark as declined',
							send: 'Send',
						},
					},
					content: {
						issuer: 'Issuer',
						client: 'Client',
						sum: 'Sum',
						gross: 'Gross:',
						paymentDue: 'Payment due',
						dueDate: 'Due date',
						sentDate: 'Sent date',
						order: 'Order',
						validUntilDate: 'Quote valid until',
						lockedDate: 'Locked',
						linkedDocuments: 'Linked documents',
						linkedBookings: 'Linked bookings',
					},
				},
			},
			create: {
				general: {
					title: 'Create new quote',
					shortTitle: 'new',
					buttons: {
						preview: 'Preview',
						saveDraft: 'Save',
						saveDraftLong: 'Save draft',
						finalize: 'Finalize',
					},
				},
			},
			settings: {
				general: {
					title: 'Settings for quotes',
					shortTitle: 'Settings',
					buttons: {
						back: 'Go back'
					},
				},
			},
			index: {
				general: {
					title: 'Quotes',
					buttons: {
						add: 'Add',
						addOffer: 'New quote',
						addInvoice: 'New invoice',
						addRecurringInvoice: 'New recurring invoice',
						editOfferSettings: 'Settings',
					},
				},
				buttons: {
					filters: 'Filter',
					statusAll: 'All',
					statusDraft: 'Draft',
					statusOpen: 'Open',
					statusAccepted: 'Accepted',
					statusDeclined: 'Declined',
					filterStatus: 'Only show quotes with status',
				},
				dropdowns: {
					export: {
						export: 'Export',
						exportAsExcel: 'Export as Excel',
						exportAsCsv: 'Export as CSV',
					},
					item: {
						view: 'View',
						send: 'Send',
						finalize: 'Finalize',
						markAs: 'Mark quote as',
						markAccepted: 'Accepted',
						markDeclined: 'Declined',
						removeMarkedStatus: 'Remove status',
						download: 'Download',
						edit: 'Edit',
						duplicate: 'Duplicate',
						delete: 'Delete',
						createInvoice: 'Create invoice',
					}
				},
				table: {
					status: 'Status',
					number: 'Number',
					clientAndSubject: 'Client / subject',
					order: 'Order',
					date: 'Date',
					sumNet: 'Subtotal (net)',
					options: 'Options',
					placeholderFilter: 'Filter...',
					placeholderMinValue: 'min',
					placeholderMaxValue: 'max',
					filterNumber: 'Filter by number',
					filterClient: 'Filter by client',
					filterOrder: 'Filter by order',
					filterDateMin: 'Filter by min date',
					filterDateMax: 'Filter by max date',
					filterSumMin: 'Filter by min sum',
					filterSumMax: 'Filter by max sum',
					linkedToInvoice: 'Linked to invoice',
				},
			},
		},
		recurring: {
			invoice: {
				edit: {
					general: {
						title: 'Edit recurring invoice',
						shortTitle: 'edit',
					},
				},
				schedule: {
					general: {
						title: 'Schedule invoice',
						shortTitle: 'schedule',
						edit: 'edit',
						buttons: {
							edit: 'edit',
						},
					},
					dropdowns: {
						invoice: {
							duplicate: 'Duplicate',
							delete: 'Delete',
						}
					},
					errors: {
						errorSavingTitle: 'Error creating invoice',
						errorCheckData: 'Attention, missing or incorrect information! The invoice may not be legally secure and compliant.',
						companyAddress: 'The issuer address may not be complete',
						items: 'The invoice does not contain any items',
						clientId: 'No customer was linked as a recipient, which means analytics will not be possible',
						negativeSum: 'The invoice amount is 0 or negative',
						companyLegal: 'The commercial register information is not complete',
						companyTax: 'A tax number or sales tax identification number (if available) is missing',
						companyDirector: 'Information about the management is missing',
						companyAccount: 'The bank account details are missing or incomplete',
					},
					schedule: {
						autoGenerate: 'Automatic generation',
						autoGenerateDisable: 'Disabled',
						autoGenerateEnableDraft: 'Enabled, create draft invoices',
						autoGenerateEnableFinalized: 'Enabled, create finalized invoices',
						nextInvoice: 'Next invoice: {date}',
						autoSend: 'Automatic sending',
						autoSendDisable: 'Disabled',
						autoSendEnable: 'Send e-mail',
						emailSettings: 'Settings',
						noRecipientsSet: 'No recipients set',
						titleDraft: 'Draft',
						buttonDownloadDraft: 'Download draft',
						buttonPrintDraft: 'Print draft',
						draftFilename: 'invoice-draft',
					},
				},
			},
			create: {
				general: {
					title: 'Create new recurring invoice',
					shortTitle: 'new',
					buttons: {
						preview: 'Preview',
						save: 'Save',
						schedule: 'Schedule',
					},
				},
			},
			general: {
				intervals: {
					weekly: '7 days',
					biWeekly: '14 days',
					monthly: 'monthly',
					biMonthly: '2 months',
					quarterly: 'quarterly',
					halfYearly: 'half-yearly',
					yearly: 'yearly',
					twoYears: '2 years',
				},
			},
			index: {
				general: {
					title: 'Recurring invoices',
					buttons: {
						add: 'New',
						addRecurring: 'New recurring invoice',
						addInvoice: 'New invoice',
						addOffer: 'New quote',
						editRecurringSettings: 'Settings',
					},
				},
				buttons: {
					filters: 'Filters',
					filterStatus: 'Filter by status',
					statusAll: 'All',
					statusActive: 'Active',
					statusInactive: 'Inactive',
				},
				dropdowns: {
					item: {
						edit: 'Edit contents',
						schedule: 'Edit schedule',
						duplicate: 'Duplicate',
						delete: 'Delete',
					}
				},
				table: {
					status: 'Status',
					client: 'Client',
					order: 'Order',
					dateUpdatedAt: 'Last change',
					recurringStart: 'Start',
					recurringEnd: 'End',
					interval: 'Interval',
					nextInvoice: 'Next invoice',
					sumNet: 'Sum (net)',
					options: 'Options',
					placeholderFilter: 'Filter...',
					placeholderMinValue: 'min',
					placeholderMaxValue: 'max',
					filterClient: 'Filter by client',
					filterOrder: 'Filter by order',
					filterDateMin: 'Filter by min date',
					filterDateMax: 'Filter by max date',
					filterStartDateMin: 'Filter by min start date',
					filterStartDateMax: 'Filter by max start date',
					filterEndDateMin: 'Filter by min end date',
					filterEndDateMax: 'Filter by max end date',
					filterInterval: 'Filter by interval',
					filterNextDateMin: 'Filter by min next date',
					filterNextDateMax: 'Filter by max next date',
					filterSumMin: 'Filter by min sum',
					filterSumMax: 'Filter by max sum',
				},
			},
		},
	},
	planning: {
		overview: {
			general: {
				title: 'Planner',
				dropdowns: {
					export: {
						export: 'Export...',
						createPDF: 'Create PDF',
						print: 'Print',
						sharedCalendar: 'Shared calendar',
					},
				},
			},
			content: {
				overview: 'Overview',
				months: 'Months',
				zoomFactor: 'Zoom factor',
				ariaLabelPlanner: 'Planner',
				ariaLabelNavigation: '3-month navigation',
				ganttNoProjectsSelected: 'Please select at least one project.',
				buttons: {
					addBooking: 'Add booking',
					today: 'Today',
					filter: 'Filter...',
					toggleFullscreen: 'Toggle fullscreen',
					hideMonths: 'Hide',
					showMonths: 'Months',
					showMonthsTooltip: 'Display 3-month navigator sidebar',
					previousDay: 'Previous day',
					nextDay: 'Next day',
					previousWeek: 'Previous week',
					nextWeek: 'Next week',
				},
				dropdowns: {
					viewModes: {
						viewScheduler: 'Planning',
						modeContinuous: 'Continuous',
						modeMonth: 'Month',
						modeWeek: 'Week',
						modeWorkWeek: 'Work week',
						modeDay: 'Day',
						viewDayplanner: 'Vertical',
						modeDayPlanner: 'Day (vertical)',
						viewGantt: 'Projects',
						modeGantt: 'Project Gantt',
						modeMilestones: 'Milestones',
					},
					displaySettings: {
						displaySettings: 'Display settings',
						condensedView: 'Condensed view',
						condensedViewExplanation: 'Reduce row height by hiding projects',
						weekdays: 'Weekdays',
						weekdaysExplanation: 'Display day of week',
						weekdaysExplanationScreenreader: 'Display a row containing the day of the week',
						weekNumbers: 'Week numbers',
						weekNumbersExplanation: 'Display week numbers',
						weekNumbersExplanationScreenreader: 'Display a row containing week numbers',
						monthOverview: 'Month overview',
						monthOverviewExplanation: 'Display 3-month navigator sidebar',
						monthOverviewExplanationScreenreader: 'Display a sidebar with a 3-month overview',
						collapseConcurrent: 'Collapse bookings',
						collapseConcurrentExplanation: 'Collapse concurrent bookings',
						showDragTime: 'Show times on drag',
						showDragTimeExplanation: 'Show time popups when dragging',
						cellDuration: 'Time scale',
						cellDurationExplanation: 'Duration of cells',
						cellDurationExplanationSchedulerDay: 'Grid stops when dragging',
						cellDurationValue: '{num} mins',
						toggleMinBookingWidth: 'Enforce minimum visual booking width',
						toggleMinBookingWidthOn: 'Currently enabled. Bookings may appear longer than actual duration.',
					},
					customViews: {
						defaultView: 'Default (all)',
						personalViews: 'Custom views',
						teamViews: 'Team views',
						teamViewByUser: 'by {userName}',
						createView: 'Create new...',
					},
					timezones: {
						filterLabel: 'Filter timezones',
						filterPlaceholder: 'Filter...',
						reset: 'Reset',
					},
					projects: {
						projects: 'Projects',
						noProjects: 'No project available.',
						noProjectsCreate: 'Create new project',
						filterLabel: 'Filter projects',
						filterPlaceholder: 'Filter...',
						filterNoResults: 'No projects found.',
						selectAll: 'Select all',
						deselectAll: 'Deselect all',
					}
				},
				forms: {
					addGanttEntry: {
						addItem: 'Add item',
						name: 'Name',
						namePlaceholder: 'Name',
						project: 'Project',
						type: 'Type',
						typeBooking: 'Item',
						typePhase: 'Phase',
						typeMilestone: 'Milestone',
						addButton: 'Add',
					}
				}
			},
			planner: {
				export: {
					title: 'Plan',
					exportedOn: 'Generated {dateNow}',
					author: 'freispace',
					keywords: 'freispace, rooms, bookings',
					filename: 'freispace-plan-{dateNow}',
				},
			},
		},
		projects: {
			project: {
				_layout: {
					dropdowns: {
						projectSettings: {
							projectCalendar: 'Project calendar',
							editProject: 'Edit project',
							activateProject: 'Activate project',
							archiveProject: 'Archive project',
							duplicateProject: 'Create copy',
							createSubproject: 'Create subproject',
							deleteProject: 'Delete project',
						},
					},
					tabs: {
						overview: 'Overview',
						planning: 'Planning',
						bookings: 'Bookings',
						costReport: 'Cost report',
						carbonReport: 'Carbon report',
						accountNumbers: 'Account numbers',
						timeTracking: 'Time tracking',
						timeTrackingInventoryItems: 'Tracked costs',
					},
					syncStatus: {
						syncing: 'Saving...',
						saved: 'Saved.',
						savedAtTime: 'Last save at {time}.',
						currentEditor: 'Being edited by {name}.',
						error: 'Sync error.',
					},
					carbon: {
						lastUpdated: 'Last updated: {date}',
						lastUpdatedEmpty: 'No value yet.',
						clickToUpdate: 'Click to recalculate',
					}
				},
				edit: {
					general: {
						title: 'Edit project',
						shortTitle: 'edit',
						buttons: {
							cancel: 'Cancel'
						},
					},
				},
				overview: {
					subprojects: {
						title: 'Subprojects',
						nothingToShow: 'No subprojects.',
						nothingToShowDescription: 'Subprojects help organise episodic productions and versions.',
						addSubproject: 'Add subproject',
						filter: {
							tooltip: 'Showing: {status}',
							allProjects: 'All',
							activeProjects: 'Active',
							archivedProjects: 'Archived',
						},
						dropdown: {
							projectCalendar: 'Calendar',
							editProject: 'Edit',
							activateProject: 'Activate',
							archiveProject: 'Archive',
							deleteProject: 'Delete',
						},
					},
					projectDetails: {
						title: 'Additional information',
						nothingToShow: 'No project details.',
						description: 'Project description',
					},
					milestones: {
						title: 'Milestones',
						milestone: 'Milestone',
						date: 'Date',
					},
				},
				planning: {
					general: {
						title: 'Planning',
					},
					content: {
						projectPlanning: 'Planning',
						zoomFactor: 'Zoom factor',
						months: 'Months',
						ariaLabelGantt: 'Gantt-style project plan',
						ariaLabelNavigation: '3-month navigation',
					},
					forms: {
						timeframe: {
							tooltip: 'Timeframe selection',
							name: 'Timeframe:',
							to: 'to',
						},
						addEntry: {
							namePlaceholder: 'Name',
							booking: 'Item',
							phase: 'Phase',
							milestone: 'Milestone',
							addButton: 'Add',
						}
					},
					buttons: {
						save: 'Save',
						addBooking: 'Add booking',
						today: 'Today',
						filter: 'Filter...',
						toggleFullscreen: 'Toggle fullscreen',
						hideMonths: 'Hide',
						showMonths: 'Months',
						showMonthsTooltip: 'Display 3-month navigator sidebar',
					},
					dropdowns: {
						export: {
							export: 'Export...',
							createPDF: 'Create PDF',
							createPNG: 'PNG',
							createSVG: 'SVG',
							print: 'Print',
							sharedCalendar: 'Shared calendar',
						},
						displaySettings: {
							displaySettings: 'Display settings',
							weekdays: 'Weekdays',
							weekdaysExplanation: 'Display day of week',
							weekdaysExplanationScreenreader: 'Display a row containing the day of the week',
							weekNumbers: 'Week numbers',
							weekNumbersExplanation: 'Display week numbers',
							weekNumbersExplanationScreenreader: 'Display a row containing week numbers',
							monthOverview: 'Month overview',
							monthOverviewExplanation: 'Display 3-month navigator sidebar',
							monthOverviewExplanationScreenreader: 'Display a sidebar with a 3-month overview',
						},
					},
					export: {
						title: 'Schedule for {project}',
						exportedOn: 'Generated {dateNow}',
						author: 'freispace',
						keywords: 'freispace, project, planning, schedule',
						filename: 'freispace-{project}-{dateNow}',
					},
				},
				costReport: {
					general: {
						title: 'Cost report',
					},
					messages: {
						noDataAvailable: 'No data available.',
					},
					content: {
						projectBudget: 'Project budget',
						cumulativeCosts: 'Cumulative costs',
						projectBalance: 'Project balance',
						bookings: 'Bookings',
						resources: 'Resources',
						noData: 'No data yet.',
						numBookings: '{{ No bookings | One booking | ?? bookings }}',
						numResources: '{{ No resources | One resource | ?? resources }}',
						noAccountNumber: 'Without account number',
						accountableBudget: 'Budget',
						accountableCosts: 'Costs',
						accountableBalance: 'Balance',
						sumtotal: 'Total:',
						subprojects: 'Subprojects',
						showSubprojects: 'show',
						hideSubprojects: 'hide',
					},
					dropdowns: {
						displaySettings: {
							displaySettings: 'Display settings',
							showResourceTables: 'Resource usage',
							showResourceTablesExplanation: 'Show detailed resource usage list',
							showZeroRows: 'Display zero values',
							showZeroRowsExplanation: 'Show bookings with no attached costs',
						},
					},
					buttons: {
						export: 'Export',
					},
				},
				carbonReport: {
					general: {
						title: 'Carbon report',
					},
					messages: {
						noDataAvailable: 'No data available.',
					},
					content: {
						cumulativeCosts: 'Cumulative costs',
						projectBalance: 'Project balance',
						bookings: 'Bookings',
						resources: 'Resources',
						noData: 'No data yet.',
						numBookings: '{{ No bookings | One booking | ?? bookings }}',
						numResources: '{{ No resources | One resource | ?? resources }}',
						sumTotal: 'Total:',
						subprojects: 'Subprojects',
						showSubprojects: 'show',
						hideSubprojects: 'hide',
					},
					dropdowns: {
						displaySettings: {
							displaySettings: 'Display settings',
							showResourceTables: 'Resource usage',
							showResourceTablesExplanation: 'Show detailed resource usage list',
							showZeroRows: 'Display zero values',
							showZeroRowsExplanation: 'Show bookings with no attached costs',
						},
					},
					buttons: {
						export: 'Export',
					},
				},
				index: {
					general: {
						title: 'Project',
					},
					content: {
						numSubprojects: '{num} {{subproject|subprojects}}',
						numBookings: '{num} {{booking|bookings}}',
						zeroDays: '0 days',
						earliestToLatestPeriod: '{date_earliest} to {date_latest}',
						customFieldEmpty: '(not set)',
					},
				},
			},
			create: {
				general: {
					title: 'Create project',
					shortTitle: 'new',
					buttons: {
						cancel: 'Cancel'
					},
				},
			},
			settings: {
				general: {
					title: 'Settings for projects',
					shortTitle: 'Settings',
					buttons: {
						back: 'Go back'
					},
				},
			},
			index: {
				general: {
					title: 'Projects',
					buttons: {
						addProject: 'Add project'
					},
					tooltips: {
						editProjectSettings: 'Settings',
					},
				},
			},
		},
	},
	sites: {
		site: {
			suites: {
				suite: {
					_layout: {
						title: 'Room at {site}',
						dropdowns: {
							suiteSettings: {
								suiteCalendar: 'Room calendar',
								editSuite: 'Edit room',
								duplicateSuite: 'Duplicate',
								deleteSuite: 'Delete room',
							}
						},
						tabs: {
							overview: 'Overview',
							bookings: 'Bookings',
						},
					},
					overview: {
						title: 'Overview',
						suiteDetails: {
							title: 'Additional information',
							nothingToShow: 'No suite details.',
							description: 'Suite description',
						},
					},
					bookings: {
						title: 'Bookings',
					},
					edit: {
						general: {
							title: 'Edit room',
							shortTitle: 'edit',
							buttons: {
								cancel: 'Cancel'
							},
						},
					},
				},
				create: {
					general: {
						title: 'Create room',
						shortTitle: 'new room',
						buttons: {
							cancel: 'Cancel'
						},
					},
				},
			},
			index: {
				general: {
					title: 'Site',
					dropdowns: {
						add: {
							add: 'Add...',
							addBooking: 'New booking',
							addRoom: 'New room',
						},
						siteSettings: {
							siteCalendar: 'Site calendar',
							editSite: 'Edit site',
							deleteSite: 'Delete site',
						}
					},
				},
			},
			edit: {
				general: {
					title: 'Edit site',
					shortTitle: 'edit',
					buttons: {
						cancel: 'Cancel'
					},
				},
			}
		},
		settings: {
			general: {
				title: 'Settings for rooms',
				shortTitle: 'Settings',
				buttons: {
					back: 'Go back'
				},
			},
		},
		index: {
			general: {
				title: 'Sites',
				dropdowns: {
					add: {
						add: 'Add...',
						addBooking: 'New booking',
						addSite: 'New site',
					},
					sitesSettings: {
						sharedCalendar: 'Shared calendar',
					}
				},
				buttons: {
					editSiteSettings: 'Settings',
				}
			},
			site: {
				dropdowns: {
					siteSettings: {
						siteCalendar: 'Site calendar',
						addRoom: 'Add new room',
						editSite: 'Edit site',
						deleteSite: 'Delete site',
					},
				},
			},
			noSites: {
				noSites: 'No sites.',
				createNewSite: 'Create new site',
			},
		},
		create: {
			general: {
				title: 'Create site',
				shortTitle: 'new',
				buttons: {
					cancel: 'Cancel'
				},
			},
		},
	},
	resources: {
		resource: {
			_layout: {
				dropdowns: {
					resourceSettings: {
						resourceCalendar: 'Resource calendar',
						editResource: 'Edit resource',
						deleteResource: 'Delete resource',
					},
				},
				tabs: {
					overview: 'Overview',
					bookings: 'Bookings',
					projects: 'Projects',
				}
			},
			edit: {
				general: {
					title: 'Edit resource',
					shortTitle: 'edit',
					buttons: {
						cancel: 'Cancel'
					},
				},
			},
			overview: {
				title: 'Overview',
				resourceDetails: {
					title: 'Additional information',
					nothingToShow: 'No resource details.',
					description: 'Resource description',
				},
			},
			bookings: {
				title: 'Bookings'
			},
			projects: {
				title: 'Projects'
			},
		},
		create: {
			general: {
				title: 'Create resource',
				shortTitle: 'new',
				buttons: {
					cancel: 'Cancel'
				},
			},
		},
		settings: {
			general: {
				title: 'Settings for resources',
				shortTitle: 'Settings',
				buttons: {
					back: 'Go back'
				},
			},
		},
		index: {
			title: 'Resources',
			buttons: {
				addResource: 'Add resource',
			}
		}
	},
	staff: {
		staff: {
			_layout: {
				dropdowns: {
					staffExport: {
						export: 'Export...',
						downloadVCard: 'Download vCard',
						showQRCode: 'Show QR code',
						staffCalendar: 'Staff calendar',
					},
					staffSettings: {
						editStaff: 'Edit staff',
						importVcard: 'Import vCard',
						deleteStaff: 'Delete staff',
					},
				},
				addGroupTag: 'Group',
				tabs: {
					contactDetails: 'Contact',
					projects: 'Projects',
					bookings: 'Bookings',
					presences: 'Time records',
					presenceItems: 'Tracked costs',
					workHours: 'Working hours',
				},
			},
			index: {
				general: {
					title: 'Contact',
				},
				undefined: '(undefined)',
				contactSection: {
					title: 'Contact details',
					email: 'E-mail',
					phone: 'Phone',
					noContactDetails: 'No contact details.',
				},
				addressSection: {
					title: 'Addresses',
					tooltipGoogleMaps: 'Open in Google Maps',
					noAddresses: 'No addresses.',
				},
				otherSection: {
					title: 'Other fields',
					noOtherFields: 'No data.',
				},
				internalSection: {
					title: 'Settings',
					internal: 'Type',
					teamMember: 'Linked team member',
					teamMemberNotLinked: 'No team member linked.',
					number: 'Number',
					timeTracking: 'Time tracking',
					timeTrackingEnabled: 'Enabled',
					timeTrackingDisabled: 'Disabled',
					internalCost: 'Internal cost',
					buttonLinkTeamMember: 'Link to team member',
				},
				commentSection: {
					title: 'Comment',
					noComment: 'No comment yet.',
				},
				additionalInformationSection: {
					title: 'Additional information',
				},
			},
			bookings: {
				title: 'Bookings',
			},
			projects: {
				title: 'Projects',
			},
			presences: {
				title: 'Time records',
			},
			presenceItems: {
				title: 'Tracked costs',
			},
			workingHours: {
				title: 'Working hours',
				weeklyDays: {
					title: 'Weekly working days',
					validFromTime: 'Starting {time}',
					validSinceTime: 'Since {time}',
					validSinceBeginning: 'Since beginning',
					validCurrently: '(currently active)',
					validUntil: 'Until {time}',
					total: 'Total:',
					totalPerWeek: '{count} / week',
					holidayRegion: 'Public holidays:',
					overtime: 'Overtime:',
					overtimeNone: 'No overtime',
					overtimeAll: 'Carried over monthly',
					overtimeCompensated: '{time} per month compensated',
					overtimeMaxTransfer: 'Max. {time} carried over monthly',
					overtimeMaximum: 'Limit to {time} at month start',
					setupTimes: 'Setup times:',
					buttons: {
						addEntry: 'Add entry',
						editEntry: 'Edit',
						deleteEntry: 'Delete',
					},
				},
				breakRegulations: {
					title: 'Break regulations',
					maxWorkTime: 'Max. working time per day:',
					noBreakTime: 'No minimum break',
					minBreakTime: 'Min. {time} break',
					moreThan: 'above {time}',
				},
			},
		},
		departments: {
			general: {
				title: 'Departments & workflows',
				shortTitle: 'Departments',
				noDepartments: 'No departments created yet.',
				noDepartmentsUsageDescription: 'Departments help organise staff and workflows into company units, and can be used set up time tracking workflows.',
				buttons: {
					addDepartment: 'Add department',
				},
			},
		},
		settings: {
			general: {
				title: 'Settings for staff',
				shortTitle: 'Settings',
				buttons: {
					back: 'Go back'
				},
			},
		},
		vacationDays: {
			general: {
				title: 'Holiday quotas',
				shortTitle: 'Holidays',
				buttons: {
					back: 'back'
				},
			},
			table: {
				name: 'Person',
				vacationDays: 'Holidays',
				vacationDaysDescription: 'regular days',
				additionalDays: 'Alteration',
				additionalDaysDescription: '+/- days',
				creditLastYear: 'Credit',
				creditLastYearDescription: 'from previous year',
				expiredDays: 'Forfeited',
				expiredDaysDescription: 'deducted',
				paidOutDays: 'Paid days',
				paidOutDaysDescription: 'deducted',
				balance: 'Holiday days',
				balanceDescription: 'calculated',
				options: 'options',
			},
			forms: {
				days: 'days',
				hours: 'h',
				saveTenYears: 'save for following 10 years',
				saveTenYearsShort: '10 years',
				addComment: 'Add comment / note',
				editComment: 'Edit comment / note',
				addEditCommentShort: 'comment',
				buttonSave: 'Save',
				buttonSaveAll: 'Save all',
			},
			commentModal: {
				header: 'Comment',
				comment: 'Comment / note',
				commentDescription: 'Visible to the user',
				commentPlaceholder: 'Enter an explanatory note...',
				buttonCancel: 'Cancel',
				buttonSave: 'Set comment',
			},
		},
		index: {
			title: 'Staff',
			loadingStaff: 'Loading staff list...',
			noStaffToShow: 'No staff created yet.',
			noStaffToShowCreateNew: 'Add staff',
			searchStaff: 'Search staff...',
			searchStaffClear: 'Clear search',
			buttons: {
				addStaff: 'Add staff',
				importStaff: 'Import',
				vacationDays: 'Set holiday quotas',
				departmentsWorkflows: 'Departments & workflows',
				editStaffSettings: 'Settings',
				filters: 'Filters',
			},
			dropdowns: {
				filter: {
					filter: 'Filter',
					attached: 'Attached to user',
					attachedPlaceholder: 'Select...',
				},
				export: {
					export: 'Export',
					exportAsExcel: 'Export as Excel',
					exportAsCsv: 'Export as CSV',
					exportvCard: 'Export as vCard',
				},
				staffMenu: {
					view: 'View',
					downloadVCard: 'Download vCard',
					showQRCode: 'Show QR code',
					edit: 'Edit',
					delete: 'Delete',
				}
			},
			exports: {
				filename: 'freispace_staff_export',
			},
			tableHeaderSelectAllVisible: 'Select all visible staff on this page',
			tableHeaderName: 'Name',
			tableHeaderExternal: 'External',
			tableHeaderStatus: 'Status',
			tableHeaderGroups: 'Groups',
			tableHeaderOptions: 'Options',
			optionalSelectAllRows: '<strong class="font-semibold">{numItems}</strong> staff selected. Select all <strong class="font-semibold">{numTotalItems}</strong>staff?',
			selectedRows: '<strong class="font-semibold">{numItems}</strong> staff selected.',
			selectAll: 'Select all',
			deselectAll: 'Deselect all',
			linkedToUser: 'Team member',
			view: 'View',
			filters: {
				attached: 'Filter by connection to team member',
				attachedAll: 'all',
				attachedYes: 'linked to team member',
				attachedNo: 'not linked',
				internal: 'Filter by internal/external',
				internalAll: 'all',
				internalYes: 'internal',
				internalNo: 'external',
				group: 'Filter by group',
			},
		},
	},
	team: {
		team: {
			activity: {
				title: 'Activity log',
				activityLog: {
					title: 'Team activity log',
					inTheLastWeek: 'of the last week',
					enterpriseUnlimitedLogs: 'Extended activity logs are available on our Enterprise plan.',
					timeframeOneWeek: 'Time frame: 1 week',
					searchPlaceholder: 'Search log...',
					searchPlaceholderClear: 'Clear search',
					loadingLog: 'Loading log...',
					noLogItemsToShow: 'Nothing to display.',
					deletedUser: '[deleted user]',
					deletedResource: '[deleted item]',
					dropdowns: {
						filter: {
							filter: 'Filter',
							date: 'Date',
							event: 'Action',
							eventAll: 'all',
							type: 'Type',
							typeAll: 'all',
							user: 'Team member',
							userAll: 'all',
						},
						export: {
							export: 'Export',
							exportAsExcel: 'Export as Excel',
							exportAsCsv: 'Export as CSV',
						}
					},
					buttons: {
						view: 'View details',
						undo: 'Undo',
					},
					events: {
						created: 'created',
						updated: 'updated',
						deleted: 'deleted',
						sync: 'sync',
						attach: 'attach',
						detach: 'detach',
						restored: 'restored',
						dpa: 'DPA generated',
					},
					types: {
						bookings: 'Bookings',
						sites: 'Sites',
						suites: 'Suites',
						projects: 'Projects',
						staffs: 'Staff',
						resources: 'Resources',
						groups: 'Groups',
						team: 'Team',
						memberships: 'Team memberships',
						invitations: 'Team invites',
						plannerView: 'Planner views',
						accountNumbers: 'Cost numbers',
						customFields: 'Custom fields',
						webhooks: 'Webhooks',
						clients: 'Clients',
						screens: 'Hallway screens',
						companies: 'Companies',
						inventoryItems: 'Goods/Service',
						inventoryItemPrices: 'Goods/Service prices',
						inventoryItemComponents: 'Goods/Service components',
						inventoryUnit: 'Units',
						teamSettings: 'Team settings',
						storages: 'Storages',
						tasks: 'To-dos',
						orders: 'Orders',
						workTime: 'Working hours',
					},
					tableColumns: {
						time: 'Timestamp',
						event: 'Action',
						type: 'Type',
						resource: 'Element',
						user: 'Team member',
						options: 'Options',
					},
					changedValues: {
						noChange: 'No changes.',
						oldValue: 'Old value:',
						newValue: 'New value:',
					},
					exports: {
						filename: 'freispace_team_log_export',
					},
				}
			},
			administration: {
				title: 'Administration',
				SSO: {
					title: 'SAML Single-Sign-On (SSO)',
					tagActive: 'Active',
					tagDisabled: 'Disabled',
					shortDescription: 'Company-wide user login with the SAML 2.0 protocol',
					longDescription: '<p>The SAML 2.0 protocol allows everyone in the company to register via a user directory. This can be a Google Workspace or Microsoft Azure Active Directory, for example.</p>',
					enterpriseOnlyFeature: 'Single-Sign-On is an Enterprise feature.',
					enterpriseOnlyFeatureTeaser: 'Want effortless authentication for your team, using your existing infrastructure? <a href="mailto:support@freispace.com" class="text-blue-500 dark:text-blue-300 underline hover:no-underline">Contact us</a> to enable SSO for your team.',
					content: {
						teamLoginUrl: 'Team Login URL',
						teamLoginUrlDescription: 'To enable team members to login via SSO, share this URL with your team members.',
						teamSlug: 'Team URL',
					},
					buttons: {
						editSlug: 'Edit URL',
						saveSlug: 'Save URL',
						resetSlug: 'Reset URL',
						addTenant: 'Add tenant',
					}
				},
				taskFailureEmails: {
					title: 'Error notifications',
					shortDescription: 'Admin notifications for critical errors',
					longDescription: 'freispace uses background tasks for some functions such as sending invoices. It is recommended that you enter at least one e-mail address that we can notify in the event of critical processing errors.',
					emails: 'E-mail addresses for error notifications',
					buttons: {
						save: 'Save',
					}
				},
				smtpServers: {
					title: 'SMTP servers',
					shortDescription: 'E-mail dispatch via your own SMTP server',
					longDescription: 'You can configure your own SMTP server to send e-mails from freispace. This is particularly useful if you want to send emails via your own domain.',
					testConnection: 'Test',
					addServer: 'Add SMTP server',
				},
				teamDeletion: {
					title: 'Team deletion',
					shortDescription: 'Permanently delete this team',
					longDescription: '<p>Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain.</p><p>If you have an active subscription, it will be cancelled to the earliest date. You will still be billed until your team\'s subscription ends.</p>',
					buttonDeleteTeam: 'Delete team',
				}
			},
			members: {
				title: 'Team members',
				teamMembersTable: {
					title: 'Team members',
					buttons: {
						inviteNewMembers: 'Invite new members',
						leaveTeam: 'Leave team',
						leaveTeamDisabledTooltip: 'You can\'t leave the team, as you are the only superadmin.',
						changeRole: 'Change role',
						editPermissions: 'Edit individual permissions',
						editPermissionEnterpriseOnly: 'Editing individual permissions on a per-user basis is only available in the Enterprise plan.', 
						removeMember: 'Remove',
					},
					tableColumns: {
						member: 'Member',
						role: 'Role',
						permissions: 'Permissions',
						dateJoined: 'Joined',
						options: 'Options',
					},
					teamMemberOneself: 'You',
				},
				teamInvitesTable: {
					title: 'Invited members',
					tableColumns: {
						member: 'Member',
						role: 'Role',
						dateInvited: 'Invited',
						options: 'Options',
					},
					buttons: {
						resendInvitation: 'Resend invite',
						displayInviteCode: 'Invite code',
						displayInviteLink: 'Invite link',
						changeRole: 'Change role',
						removeInvite: 'Cancel invite',
					},
					tooltips: {
						invalidRole: 'This member\'s role is invalid. Please assign a new role.',
					}
				}
			},
			privacy: {
				title: 'GDPR & Privacy',
				compliance: {
					title: 'GDPR compliance',
					compliantText: 'freispace is 100% GDPR compliant.',
					headerDataLocation: 'Data location',
					contentDataLocation: 'Germany',
					headerEncryption: 'Encryption',
					contentEncryption: 'SSL/TLS 1.2 with AES-256',
					headerServerCertification: 'Server certification',
					contentServerCertification: 'ISO/IEC 27001',
					headerLegalResources: 'Legal resources',
					headerLegalToms: 'Technical and Organisational Measures (TOMs)',
					downloadPdf: 'Download PDF',
				},
				dpa: {
					title: 'Data Processing Agreement (DPA)',
					shortDescription: 'A Data Processing Agreement (DPA) regulates the data processing of customer data',
					form: {
						description: 'Conclude a Data Processing Agreement (DPA) with freispace if you handle EU customer data. he Agreement is digitally signed.',
						accuracyWarning: 'Please ensure you enter the data exactly as you want to see it on the DPA.',
						companyAddress: 'Full company address',
						fullName: 'Your full name',
						concludedDPA: 'You successfully concluded a Data Processing Agreement (DPA) with freispace on {date}.',
					},
					buttons: {
						generateDPA: 'Generate and sign DPA',
						viewDPA: 'View signed DPA',
					}
				},
				export: {
					title: 'Data export',
					shortDescription: 'Export your team\'s data',
					longDescription: '<p>We can create a data export for all of your team\'s data on freispace. The data will be provided as XLSX.</p><p>If you want SQL dumps instead, we can generate them for a small fee. <a href="{linkContact}" target="_blank" class="text-blue-600 dark:text-blue-400 hover:underline">Please contact support</a> to obtain SQL dumps.</p>',
					buttonRequestExport: 'Request data export'
				}
			},
			settings: {
				title: 'Settings',
				navigation: {
					general: 'General',
					companies: 'Company entities',
					regional: 'Regional',
					timeTracking: 'Time tracking',
					bookings: 'Bookings',
					invoicing: 'Billing',
					customization: 'Customization',
				},
				teamInformation: {
					title: 'Team information',
					shortDescription: 'Update your team\'s name and logo',
					teamLogo: 'Team logo',
					buttonUploadNewImage: 'Upload new logo',
					buttonDeleteImage: 'Delete image',
					teamName: 'Team name',
					teamNamePlaceholder: 'Company name',
					buttonUpdateTeam: 'Update team',
				},
				businessSettings: {
					title: 'Base settings',
					shortDescription: 'Set up your base business settings. The internal work hours will be used for displaying working times in calendars accordingly.',
					headlineWorkHours: 'Work hours',
					workDayStartTime: 'Start of workday',
					workDayStartTimePlaceholder: 'e.g. 09:00',
					workDayEndTime: 'End of workday',
					workDayEndTimePlaceholder: 'e.g. 18:00',
					breakDuration: 'Included break time',
					breakDurationPlaceholder: 'e.g. 60',
					breakMinutes: 'min.',
					workdayCalculatedLength: 'The usual calculated workday is {length} hours long.',
					headlineRegional: 'Regional base settings',
					language: 'Primary language',
					languageDescription: 'The team\'s primary language, ideally the head office country language',
					country: 'Country',
					countryDescription: 'Head office country',
					currency: 'Currency',
					currencyPlaceholder: 'e.g. EUR',
					currencyNoOptions: 'No currencies found.',
					timezones: 'Preferred timezones',
					timezonesDescription: 'Optionally select the most used timezones',
					buttons: {
						save: 'Update settings',
					}
				},
				companies: {
					title: 'Legal entities',
					shortDescription: 'Set up your company\'s legal entities. The information will be used for invoicing.',
					noCompanies: 'Missing information! Please enter your company data.',
					noCompaniesInformation: 'Your company data is required for legally compliant invoicing.',
					primaryCompany: 'Primary / default company',
					noInformation: 'No information.',
					buttonAddNewCompany: 'Add new',
					buttonEditCompany: 'Edit',
					companyDeletionNotPermitted: 'Default companies<br>can not be deleted.',
				},
				publicHolidays: {
					title: 'Public holidays',
					shortDescription: 'Specify regions and create lists of public holidays for each year. Regions may then be assigned to sites, people and resources.',
					longDescription: '',
					buttons: {
						addHolidayRegion: 'Add region',
						save: 'Save',
					},
					tooltips: {
						regionDeletionNotPermitted: 'This region can not be deleted,<br>as it is set as default<br>or assigned to one or more resources.',
					},
				},
				bookings: {
					general: {
						title: 'Bookings',
						shortDescription: 'General settings for bookings.',
						headlineNewBookings: 'Creating new bookings',
						defaultToFullDay: 'Pre-select <em>all-day booking</em>',
						defaultSkipDays: 'Pre-select <em>skip days</em> on all-day bookings',
						requireProject: 'Make <em>project</em> a required field',
						headlineOptionalBookings: 'Optional bookings',
						optionalBookingsIgnoreCollisions: 'Ignore in collision checks by default',
						optionalBookingsIgnoreCostReport: 'Ignore in cost reports by default',
						buttons: {
							save: 'Save',
						}
					},
					plannerDisplaySettings: {
						title: 'Booking styling in the planner',
						shortDescription: 'Display settings for bookings in the planner. Determines the colouring and labelling of bookings. Can be overwritten by custom views.',
						buttons: {
							save: 'Save',
						}
					},
					templates: {
						title: 'Templates for printing',
						description: 'Generate PDFs from bookings, for example dispositions or edit note sheets.',
					}
				},
				invoicing: {
					templates: {
						title: 'Templates',
						description: 'Create custom layouts and designs for quotes, invoices and other billing-related documents.',
					},
					inventoryUnits: {
						title: 'Units',
						description: 'Units for use in quotes and invoices.',
						labels: {
							name: 'Name',
							symbol: 'Symbol',
							type: 'Type',
							null: 'None',
							minute: 'Minute',
							hour: 'Hour',
							halfDay: '1/2 Day(s)',
							day: 'Day(s)',
							week: 'Week(s)',
							month: 'Month(s)',
							year: 'Year(s)',
							usage: 'Per Use',
							unit: 'Unit',
							distance: 'Distance',
							lengths: 'Length',
							volume: 'Volume',
							weight: 'Weight',
							megabyte: 'Megabyte',
							gigabyte: 'Gigabyte',
							terabyte: 'Terabyte',
							episode: 'Episode',
						},
					},
					taxRates: {
						title: 'Tax rates',
						description: 'Tax rates to be used when creating quotes and invoices.',
						labels: {
							name: 'Name',
							rate: 'Tax rate',
						},
					},
					taxationSettings: {
						title: 'Taxation overrides',
						description: 'Relevant VAT rules that apply to quotes/invoices. These override the general tax rates, e.g. 0% for reverse charge.',
						labels: {
							name: 'Name',
							overrideTaxRate: 'Override tax rate',
							documentText: 'Text on documents',
							default: 'Default',
						},
					},
					paymentMethods: {
						title: 'Payment methods',
						description: 'Payment methods for use in quotes and invoices.',
						labels: {
							name: 'Name',
							description: 'Internal description',
							documentText: 'Text to display on documents',
						},
					},
					costCenters: {
						title: 'Cost centres',
						description: 'Cost centre numbers for tax reasons, to be displayed on quotes and invoices.',
						labels: {
							name: 'Name',
							number: 'Number',
						},
					},
					emailDelivery: {
						title: 'E-mail delivery',
						description: 'Settings for sending quotes and invoices by e-mail.',
						offers: 'Quotes',
						setCopyAddressesOffers: 'Set e-mail addresses to receive outgoing quotes in CC.',
						invoices: 'Invoices',
						setCopyAddressesInvoices: 'Set e-mail addresses to receive outgoing invoices in CC.',
						cc: 'CC',
						bcc: 'BCC',
						buttons: {
							save: 'Save',
						},
					},
					defaultSettings: {
						title: 'Default values',
						description: 'Default values for billing.',
						subjectOffer: 'Subject for quotes',
						subjectInvoice: 'Subject for invoices',
						subjectPartialInvoice: 'Subject for partial invoices',
						subjectFinalInvoice: 'Subject for final invoices',
						resetToDefault: 'Reset to default',
						buttons: {
							save: 'Save',
						},
					},
				},
				globalFieldsForm: {
					title: 'Custom fields',
					description: 'Custom fields add additional, structured information that is added upon editing by users.',
					resources: {
						bookings: 'Bookings',
						projects: 'Projects',
						suites: 'Rooms',
						staffs: 'Staff',
						resources: 'Resources',
						groups: 'Groups',
						clients: 'Clients',
						clientAddresses: 'Clients addresses',
						clientContacts: 'Client contacts',
					}
				}
			},
			integrations: {
				_layout: {
					title: 'Integrations',
					tabs: {
						overview: 'Overview',
						screens: 'Hallway screens',
						apiKeys: 'API keys',
						webhooks: 'Webhooks',
					}
				},
				overview: {
					title: 'Overview',
					titleContent: 'Integration options',
					description: '<p>We offer various options for connecting freispace with other applications. This makes it possible to compare data and automate processes.</p><p>Possible applications include:</p><ul class="list-disc list-inside"><li>Synchronize bookings with other services (e.g. Google Calendar and Microsoft365)</li><li>Notifications in other services (e.g. Microsoft Teams, Slack, Email)</li><li>Create custom dashboards and reports (e.g. PowerBI, Tableau)</li><li>Trigger automations on machines and servers (e.g. Helmut, Make, Zapier)</li></ul><p>In addition, we are currently building new, time-saving automations and workflows with our partners.</p>',
					hallwayScreens: 'Hallway screens',
					apiKeysCount: 'API keys',
					webhooksCount: 'Webhooks',
					buttons: {
						makeIntegration: 'Make integration',
						manageHallwayScreens: 'Manage screens',
						manageApiKeys: 'Manage API keys',
						manageWebhooks: 'Manage webhooks',
					}
				},
				screens: {
					title: 'Hallway screens',
					shortDescription: 'Create publicly accessible links for hallway screens to display the current occupancy and planning.',
					shortDescriptionDocumentation: 'Documentation',
					tagActive: 'Active',
					tagNoneActive: 'None active',
					buttons: {
						createNewScreen: 'Create new screen',
					},
				},
				api: {
					title: 'Public API',
					shortDescription: 'With our API, data can be exchanged between freispace and other applications. This makes it possible to synchronize information between applications and automate processes.',
					shortDescriptionDocumentation: 'API documentation',
					buttons: {
						generateNewApiKey: 'Create API key',
					},
				},
				webhooks: {
					title: 'Webhooks',
					tagActive: 'Active',
					tagNoneActive: 'None active',
					tagDisabled: 'Disabled',
					shortDescription: 'Webhooks allows you to notify third-party applications whenever something in your team changes. The third-party application receives the new information along with data, which can serve as a trigger for automations.',
					shortDescriptionDocumentation: 'Developer Documentation',
					noWebhooks: 'No webhook endpoints created.',
					tableColumns: {
						endpoint: 'Endpoint',
						information: 'Info',
						status: 'Status',
						options: 'Options',
					},
					dropdown: {
						edit: 'Edit',
						activate: 'Activate',
						deactivate: 'Deactivate',
						delete: 'Delete',
					},
					buttons: {
						addWebhook: 'Add webhook',
						view: 'Show details',
					},
				}
			},
		},
		_layout: {
			teamMemberAmountOne: 'one team member',
			teamMemberAmountMany: '{numMembers} team members',
			tabs: {
				teamMembers: 'Team Members',
				activity: 'Activity Log',
				settings: 'Settings',
				integrations: 'Integrations',
				privacy: 'GDPR & Privacy',
				administration: 'Administration',
			}
		},
	},
	timeTracking: {
		absence: {
			title: 'Absence',
			headerAbsenceTimes: 'Absences',
			countBox: {
				headerDate: 'Date',
				headerType: 'Type',
				headerLength: 'Length',
				headerOptions: 'Options',
				morning: 'Morning',
				afternoon: 'Afternoon',
				absenceDays: 'Total days:',
			},
			dropdown: {
				edit: 'Edit',
				duplicate: 'Duplicate',
				delete: 'Delete',
			},
			buttons: {
				save: 'Save',
				cancel: 'Cancel',
			},
		},
		overview: {
			title: 'Time records',
		},
		presence: {
			title: 'Time tracking',
			headerSchedulerTimes: 'Day plan',
			headerPlannerTimes: 'Tracked time',
			countBox: {
				workingTime: 'Working time:',
				breakTime: 'Break time:',
			},
			buttons: {
				listView: 'List view of tracked time',
				transferPlan: 'Transfer all times',
			},
		},
		vacation: {
			title: 'Holidays',
			date: 'Date',
			start: 'Start',
			halfDay: 'Half day',
			halfDayMorning: 'Morning',
			halfDayAfternoon: 'Afternoon',
			end: 'End',
			skipDays: 'Skip days',
			skipDaysSaturdays: 'Sat',
			skipDaysSundays: 'Sun',
			skipDaysPublicHolidays: 'Public Holidays',
			comment: 'Remark / comment',
			calculatedVacationTime: 'Calculated length',
			calculatedVacationTimeIncludesSkippedDays: '(incl. weekends and holidays)',
			headerVacationTimes: 'Holidays',
			countBox: {
				morning: 'Morning',
				afternoon: 'Afternoon',
				vacationDays: 'Total days:',
			},
			dropdown: {
				edit: 'Edit',
				duplicate: 'Duplicate',
				delete: 'Delete',
			},
			buttons: {
				save: 'Save',
				cancel: 'Cancel',
			},
		},
		_layout: {
			title: 'Time tracking',
			warnings: {
				warning: 'Warning',
				warningNoStaffLinked: 'Your account is not linked to a staff. This is however a requirement for time tracking.',
				howToLink: 'How to change?',
				howToLinkAdmin: 'Ask an admin to link your account to a staff member and activate <em>Time tracking</em> in the staff member settings.',
				warningTimeTrackingDisabledOnStaff: 'Time tracking is not enabled for you.',
				howToActivate: 'How to activate?',
				howToActivateAdmin: 'Ask an admin to activate <em>Time tracking</em> on your linked staff.',
				freispaceDocLinkSelf: 'Follow <a target="_blank" rel="nofollow noodp noopener" href="https://docs.freispace.com/docs/time-tracking" class="text-blue-600 dark:text-blue-400 underline hover:no-underline">this documentation</a>.',
				freispaceDocLinkAdmin: 'Instructions can be found in the <a target="_blank" rel="nofollow noodp noopener" href="https://docs.freispace.com/docs/time-tracking" class="text-blue-600 dark:text-blue-400 underline hover:no-underline">freispace docs</a>.'
			},
			buttons: {
				overview: 'Overview',
				presenceForm: 'Track time',
			}
		},
	},
	user: {
		_layout: {
			tabs: {
				profile: 'Profile',
				settings: 'Settings',
				notificationSettings: 'Notification settings',
				account: 'Account',
			}
		},
		account: {
			title: 'Account',
			passwordChange: {
				title: 'Change password',
				shortDescription: 'Ensure your account is using a long, random password to stay secure',
				currentPassword: 'Current password',
				newPassword: 'New password',
				newPasswordNotice: 'Minimum 8 characters',
				confirmPassword: 'Confirm new password',
				buttonUpdatePassword: 'Update password',
			},
			deleteAccount: {
				title: 'Account deletion',
				shortDescription: 'Permanently delete your account',
				description: 'Deleting an account has the following effects:',
				deletionEffects: {
					noAccess: 'Your account and account data will be irreversibly deleted.',
					deletedTeams: '{numTeams} {{team|teams}} will be removed and cannot be restored.',
					leftTeams: 'You leave {numTeams} {{team|teams}}. Team superadmins will get notified.',
					ghostUser: 'Certain user content will be moved to a system-wide "Ghost User" in order to maintain content for posterity.',
				},
				buttonDeleteAccount: 'Delete account',
				redirectUrl: 'https://freispace.com/de/app/goodbye',
			}
		},
		notificationSettings: {
			title: 'Notification settings',
			noTeams: 'You are not currently a member of any teams.',
			currentTeam: 'Current',
			shortDescription: 'Set up your notifications and channels for team <b class="font-medium">{teamName}</b>.',
			bookings: {
				header: 'Bookings',
				created: 'New bookings',
				createdDescription: 'Notification when a new booking is created',
				assigned: 'Booking assigned',
				assignedDescription: 'Notification when a booking is assigned to you',
				assignedChanged: 'Assigned booking changed',
				assignedChangedDescription: 'Notification when an assigned booking is changed',
				unassigned: 'Booking unassigned',
				unassignedDescription: 'Notification when a booking is unassigned from you',
				subscribedChanged: 'Subscribed bookings',
				subscribedChangedDescription: 'Notification when a booking you subscribed to is changed',
				ownChanged: 'Created booking changed',
				ownChangedDescription: 'Notification when a booking you created is changed',
			},
			todos: {
				header: 'To-dos',
				assigned: 'Task assigned',
				assignedDescription: 'Notification when a task is assigned to you',
				assignedChanged: 'Task status changed',
				assignedChangedDescription: 'Notification when a task assigned to you is marked as done, is being deleted, or the due date is changed',
				unassigned: 'Task unassigned',
				unassignedDescription: 'Notification when a task is unassigned from you',
				due: 'Task is due',
				dueDescription: 'Notification when a task is due',
				overdue: 'Task is overdue',
				overdueDescription: 'Notification when a task is overdue',
			},
			workflows: {
				header: 'Workflows',
				vacations: 'Holidays',
				absences: 'Absences',
				presences: 'Time tracking',
			},
			admin: {
				header: 'Admin notifications',
				memberJoined: 'Team member joined',
				memberLeft: 'Team member left',
			},
			typeApp: 'App',
			typePush: 'Push',
			typeEmail: 'E-mail',
			typeSms: 'SMS',
		},
		notifications: {
			title: 'Notifications',
			filters: {
				statusAll: 'All',
				statusUnread: 'Unread',
				statusRead: 'Read',
			},
			table: {
				date: 'Date',
				team: 'Team',
				notification: 'Notification',
				options: 'Options',
				changedBy: 'By {userName}'
			},
			actions: {
				markAsRead: 'Mark as read',
				markAllAsRead: 'Mark all as read',
			},
		},
		profile: {
			title: 'Profile',
			profileInformation: {
				title: 'Profile Information',
				shortDescription: 'Update your account\'s profile information and email address.',
				profileImage: 'Profile image',
				buttonUploadImage: 'Upload new image',
				buttonDeleteImage: 'Delete image',
				firstName: 'First name',
				lastName: 'Last name',
				emailAddress: 'Email address',
				phoneNumber: 'Phone number',
				buttonUpdateProfile: 'Update profile',
			}
		},
		settings: {
			title: 'Settings',
			languageSettings: {
				title: 'Language & display settings',
				shortDescription: 'Display settings for freispace',
				language: 'Language',
				locale: 'Locale',
			},
			regionalSettings: {
				title: 'Regional settings',
				shortDescription: 'Regional settings that affect the calculation and display of calendars and dates',
				timezone: 'Timezone',
				weekstart: 'Start week on',
				sunday: 'sunday',
				monday: 'monday',
				weekNumberingSystem: 'Week numbering system',
				weekNumberingSystemIso: 'European system (according to ISO 8601)',
				weekNumberingSystemIsoDescription: 'Week no 1 is the first week of the year that includes Thursday.',
				weekNumberingSystemUs: 'US numbering system',
				weekNumberingSystemUsDescription: 'Week no 1 is the week with January 1.',
				weekendsAsFree: 'Display weekends as free',
				yes: 'Yes',
				no: 'No',
			},
		},
	},
	components: {
		absences: {
			editNewModal: {
				title: 'Absences',
				buttons: {
					save: 'Save',
					cancel: 'Cancel',
				},
			},
			absenceForm: {
				tabAbsence: 'Absence',
				tabVacation: 'Holidays',
				type: 'Type of absence',
				date: 'Date',
				start: 'Start',
				halfDay: 'Half day',
				halfDayMorning: 'Morning',
				halfDayAfternoon: 'Afternoon',
				end: 'End',
				skipDays: 'Skip days',
				skipDaysPublicHolidays: 'Public holidays',
				skipNonWorkingDays: 'Work-free days',
				comment: 'Remark / comment',
				calculatedAbsenceTime: 'Calculated length',
				errorStartBefore2022: 'The start date is before 2022.',
				errorStartAfterEnd: 'The end date is before the start date.',
				errorDateRangeTooLarge: 'The selected date range is too large.',
				errorNoEntries: 'Not saved, as the entry falls completely on skipped days.',
				errorVacationInTimeframe: 'Not saved, as holidays already exists in the given time frame.',
				errorIdenticalAbsence: 'An identical absence entry already exists.',
				errorVacationAllowanceDepleted: 'Not enough holiday days left.',
				buttons: {
					save: 'Save',
					cancel: 'Cancel',
				},
			},
			vacationDaysOverview: {
				title: 'Holidays',
				buttonPreviousYear: 'Previous year',
				buttonNextYear: 'Next year',
				vacationDays: 'Holiday days',
				additionalDays: 'Alteration',
				creditLastYear: 'Credit from prev. year',
				expiredDays: 'Forfeited',
				paidOutDays: 'Paid out',
				totalAllowance: 'Total allowance',
				used: 'Used up',
				remainder: 'Remaining holidays',
				planned: 'Planned',
				plannedDescription: '(in process / applied for)',
			},
		},
		bookings: {
			bookingList: {
				index: {
					loadingBookings: 'Loading bookings...',
					noBookingsToShow: 'No bookings to show.',
					searchBookings: 'Search bookings...',
					searchBookingsClear: 'Reset search',
					dropdowns: {
						filter: {
							filter: 'Filter',
							timeFrame: 'Time frame',
							timeFrameAll: 'all bookings',
							timeFrameFuture: 'upcoming only',
							timeFramePast: 'past only',
							timeFrameCustom: 'custom',
							startDate: 'Start date',
							endDate: 'End date',
							status: 'Status',
							statusPlaceholder: 'Show all',
						},
						export: {
							export: 'Export',
							exportAsExcel: 'Export as Excel',
							exportAsCsv: 'Export as CSV',
						}
					},
					exports: {
						filename: 'freispace_bookings_export',
					},
					tableHeaderName: 'Name',
					tableHeaderProject: 'Project',
					tableHeaderRooms: 'Room(s)',
					tableHeaderStaffs: 'Staff(s)',
					tableHeaderResources: 'Resource(s)',
					tableHeaderStart: 'Start',
					tableHeaderEnd: 'End',
					tableHeaderLength: 'Length',
					tableHeaderOptions: 'Options',
					happeningNow: 'Happening now',
					optionalSelectAllRows: '<strong class="font-semibold">{numItems}</strong> {{row|rows}} selected. Select all <strong class="font-semibold">{numTotalItems}</strong> {{row|rows}}?',
					selectAll: 'Select all',
					deselectAll: 'Deselect all',
					view: 'View',
					edit: 'Edit',
					editMultiple: 'Edit selected',
					sendToInvoice: 'Create invoice',
					removeDays: 'Remove days...',
					delete: 'Delete',
					deleteMultiple: 'Delete selected',
					addBooking: 'Add booking',
				}
			},
			modal: {
				editNewModal: {
					title: {
						editBooking: 'Edit booking',
						newBooking: 'New booking',
					},
					tabs: {
						mainData: {
							mainData: 'Main data',
							name: 'Name',
							nameErrorEmpty: 'A name for the booking is required.',
							start: 'Start',
							startPlaceholder: 'Start date',
							end: 'End',
							endPlaceholder: 'End date',
							timezonesPreferred: 'Preferred timezones',
							timezonesAll: 'Other timezones',
							endDateBeforeStart: 'The start date is after the end date.',
							endTimeFrameTooShort: 'Booking must be at least 10 minutes long.',
							allDayBooking: 'All-day booking',
							skipDays: 'Skip days',
							skipDaysSaturdays: 'Sat',
							skipDaysSundays: 'Sun',
							skipDaysPublicHolidays: 'Public Holidays',
							skipNonWorkingDays: 'Non-working days',
							project: 'Project',
							projectPlaceholder: '(no project associated)',
							projectNoOptions: 'No projects found.',
							projectNoOptionsCreateNew: 'Create project',
							optional: 'Optional',
							optionalLabel: 'Mark as optional/draft',
							label: 'Suites, staff and resources',
							resourcesPlaceholder: '(search resources)',
							resourcesNoOptions: 'No resource found.',
							noResourcesSelected: 'You need to attach at least one resource.',
							activity: 'Activity',
						},
						details: {
							details: 'Details',
							color: 'Colour',
							byline: 'Byline',
							description: 'Description',
							status: 'Status',
							statusPlaceholder: '(no status specified)',
							statusNoOptions: 'No booking statuses available.',
						},
						files: {
							title: 'Files',
						},
						options: {
							title: 'Options',
							omitFrom: 'Omit booking',
							omitFromCollisions: 'Don\'t cause collisions',
							omitFromCostReport: 'Omit from cost reports',
						},
					},
					collisionAlerts: {
						collisionWarning: 'Collision warning',
						absenceWarning: 'Absence warning',
						showCollisions: 'Show collisions',
						detailDate: 'Time range (Booking time range)',
						detailBooking: 'Booking',
						detailResources: 'Affected resources',
						showAbsences: 'Show absences',
						detailAbsence: 'Absence',
						detailStaff: 'Affected staff',
						resourceAbsenceHoliday: 'Holiday',
						halfDayMorning: 'morning',
						halfDayAfternoon: 'afternoon',
					},
					buttons: {
						cancel: 'Cancel',
						saveBooking: 'Save booking',
						addBooking: 'Add booking',
					}
				},
				viewModal: {
					title: 'Booking',
					titleIndex: 'Booking #{number}',
					tooltips: {
						notificationsEnable: 'Subscribe to booking changes',
						notificationsDisable: 'Disable booking notifications',
						notificationsOwnBooking: 'Your booking<br>Notifications are always active',
					},
					content: {
						happeningNow: 'Happening now',
						project: 'Project',
						timeframe: 'Time frame',
						from: 'from',
						to: 'to',
						location: 'Location',
						locations: 'Locations',
						suite: 'Room:',
						site: 'Site:',
						files: 'Files',
						invoices: 'Invoices',
						staff: 'Staff',
						resources: 'Resources',
						changelog: {
							created: 'Created:',
							createdByOn: '<span class="font-mono">{date}</span> by {userName}',
							latestChange: 'Last change:',
							latestChangeByOn: '<span class="font-mono">{date}</span> by {userName}',
							buttonShowFullLog: 'Show entire history',
							buttonHideFullLog: 'Hide entire history',
						},
					},
					dropdowns: {
						export: {
							exportICalFile: 'Calendar export',
							exportPrintCallSheet: 'Call sheet (print)',
							exportPdfCallSheet: 'Call sheet (PDF)',
							sendToInvoice: 'Create invoice',
							deleteDocumentRelation: 'Delete relation',
						},
					},
					buttons: {
						editBooking: 'Edit booking',
						deleteBooking: 'Delete booking',
						close: 'Close',
					}
				},
			},
			multiModal: {
				booking: {
					bookingResourceAccordion: 'Booking #{num} from {start} - {end}',
					warningResourceRequired: 'Resource(s) required.',
				},
				index: {
					title: 'Editing {num} bookings',
					content: {
						unchangedPlaceholder: '(unchanged)',
						name: 'Name',
						project: 'Project',
						color: 'Colour',
						byline: 'Byline',
						allBookings: 'Apply to all bookings:',
						singleBookings: 'Single bookings:',
						resources: 'Suites, staff and resources',
						resourcesPlaceholder: 'Add...',
					},
					buttons: {
						cancel: 'Cancel',
						save: 'Save',
					}
				},
				entity: {
					activity: 'Activity',
				},
			},
		},
		changelog: {
			viewChangelog: {
				bookings: {
					noLogItems: 'No log available. This is likely a test booking without changes.',
					created: '<span class="font-medium">{name}</span> created the booking.',
					updated: '<span class="font-medium">{name}</span> edited the following data:',
					deleted: '<span class="font-medium">{name}</span> deleted the booking.',
					attach: '<span class="font-medium">{name}</span> added <span class="font-medium">{resource}</span>:',
					detach: '<span class="font-medium">{name}</span> removed <span class="font-medium">{resource}</span>:',
					sync: '<span class="font-medium">{name}</span> changed <span class="font-medium">{resource}</span>:',
					unknown: '<span class="font-medium">{name}</span> did the following action:',
				}
			}
		},
		clientAddresses: {
			editNewForm: {
				titleEdit: 'Edit client address',
				titleNew: 'Create client address',
				content: {
					name: 'Name',
					description: 'Description',
					descriptionDescription: 'Give your co-workers insights into the purpose of this address.',
					addressLine1: 'Address Line 1',
					addressLine1Placeholder: 'Street address, company name, c/o',
					addressLine2: 'Address Line 2',
					addressLine2Placeholder: 'Apartment, suite, unit, building, floor, etc.',
					addressLevel1: 'City',
					addressLevel2: 'State/Province/Region',
					postalCode: 'ZIP/Postal Code',
					country: 'Country',
					primary: 'Primary address',
					primaryDescription: 'Only one address can be marked as primary.',
					primaryLabel: 'Mark as primary address',
					shipping: 'Shipping address',
					shippingLabel: 'Mark as shipping address',
					invoice: 'Invoice address',
					invoiceLabel: 'Mark as invoice address',
					saveEdit: 'Save changes',
					saveNew: 'Create address',
				}
			}
		},
		clientContacts: {
			editNewForm: {
				titleEdit: 'Edit client contact',
				titleNew: 'New client contact',
				content: {
					saveEdit: 'Save',
					saveNew: 'Create contact',
				}
			},
			viewModal: {
				title: 'Client contact',
				email: 'E-mail',
				phone: 'Phone',
				addresses: 'Addresses',
				fields: 'Fields',
				comment: 'Comment',
				customFields: 'Custom fields',
				dropdown: {
					downloadVCard: 'Download vCard',
					edit: 'Edit',
					delete: 'Delete',
				},
				buttons: {
					close: 'Close',
				}
			},
		},
		clients: {
			clientSelectionModal: {
				title: 'Select client address',
				headerClient: 'Client',
				searchInputPlaceholder: 'Search...',
				searchInputClear: 'Clear search',
				clientsLoading: 'Loading clients...',
				clientsNoneFound: 'No clients found.',
				clientsNoneFoundCreateNew: 'Create client',
				headerClientAddress: 'Address',
				clientAddressesNoneFound: 'No addresses.',
				clientAddressesNoneFoundCreateNew: 'Add new address',
				headerClientContact: 'Contact',
				clientContactsNoneFound: 'No contacts.',
				clientContactsNoneFoundCreateNew: 'Add new contact person',
				buttonClose: 'Cancel',
				buttonSelect: 'Select',
			},
			editNewForm: {
				titleEdit: 'Edit client',
				titleNew: 'New client',
				content: {
					name: 'Name',
					byline: 'Byline',
					bylineDescription: 'e.g. description',
					number: 'Client number',
					numberDescription: 'Internal number',
					image: 'Image / logo',
					buttonSelectImage: 'Select image',
					buttonUploadNewImage: 'Upload image',
					buttonDeleteImage: 'Delete image',
					url: 'Website',
					urlDescription: 'Company website',
					language: 'Language',
					languageDescription: 'Primary company language',
					groups: 'Client groups',
					groupsDescription: 'e.g. for price grouping',
					starred: 'Starred',
					starredLabel: 'Mark as starred',
					comment: 'Comment / information',
					commentDescription: 'Add information or a comment about this client',
					companyId: 'Company ID',
					companyIdDescription: 'e.g. Company Registration Number',
					companyVatId: 'VAT ID',
					companyVatIdDescription: 'VAT identification number',
					companyVatIdPlaceholder: 'e.g. DE123456789',
					dueDays: 'Payment terms',
					discountForSwiftPayment: 'Discount for swift payment',
					discountForSwiftPaymentDescription: 'used for invoicing',
					days: 'days',
					currency: 'Currency',
					preferredPaymentMethod: 'Preferred payment method',
					offerEmailAddresses: 'E-mail addresses<br>for quotes',
					invoiceEmailAddresses: 'E-mail addresses<br>for invoices',
					reminderEmailAddresses: 'E-mail addresses<br>for reminders',
					saveEdit: 'Save',
					saveNew: 'Create',
				}
			}
		},
		costReports: {
			exportModal: {
				title: 'Download report',
				content: {
					format: 'Report format',
					formatFormatted: 'Formatted',
					formatFlat: 'Detailed & customized',
					timeFrame: 'Time frame',
					timeFrameSelection: {
						project: 'Project length',
						last30days: 'Last 30 days',
						lastMonth: 'Last month',
						last3months: 'Last 3 months',
						thisYear: 'This year',
						lastYear: 'Last year',
						custom: 'Custom timeframe',
					},
					from: 'From',
					to: 'To',
					dateInputError: 'Erroneous timeframe: length must be at least one day.',
					columns: 'Columns',
					columnsDefault: 'Default',
					columnsAll: 'All',
					columnsPrevious: 'Previous download',
					columnsCustom: 'Custom selection',
					columnHeaders: {
						project: 'Project',
						client: 'Client',
						parentProject: 'Parent project',
						costNumber: 'Cost number',
						resource: 'Resource (suite, staff, resource)',
						booking: 'Booking',
						cost: 'Internal costs',
					},
					columnNames: {
						name: 'Name',
						number: 'Number',
						byline: 'Byline',
						budget: 'Budget',
						resourceType: 'Type (suite/staff/resource)',
						staffInternal: 'Internal/external (staff only)',
						status: 'Status',
						activity: 'Activity',
						startDate: 'Start date (YYYY-mm-dd)',
						startTime: 'Start time (HH:ii)',
						startTimezone: 'Start timezone',
						endDate: 'End date (YYYY-mm-dd)',
						endTime: 'End time (HH:ii)',
						endTimezone: 'End timezone',
						startIso: 'Start (ISO timestamp)',
						endIso: 'End (ISO timestamp)',
						startIsoUtc: 'Start in UTC (ISO timestamp)',
						endIsoUtc: 'End in UTC (ISO timestamp)',
						amount: 'Amount',
						unit: 'Unit',
						unitPrice: 'Unit price',
						sum: 'Sum',
					},
					selectAll: 'Select all',
					deselectAll: 'Deselect all',
					fileFormat: 'File format',
					fileFormatExcel: 'Excel',
					fileFormatCsv: 'CSV',
					csvOptions: 'CSV options',
					csvDelimiter: 'Delimiter',
					csvDelimiterComma: 'Comma',
					csvDelimiterSemicolon: 'Semicolon',
					csvEncoding: 'Encoding',
				},
				buttons: {
					showColumns: 'Show columns',
					hideColumns: 'Hide columns',
					cancel: 'Cancel',
					download: 'Download',
				},
			},
		},
		carbonReports: {
			exportModal: {
				title: 'Download report',
				content: {
					format: 'Report format',
					formatFormatted: 'Formatted',
					formatFlat: 'Detailed & customized',
					timeFrame: 'Time frame',
					timeFrameSelection: {
						project: 'Project length',
						last30days: 'Last 30 days',
						lastMonth: 'Last month',
						last3months: 'Last 3 months',
						thisYear: 'This year',
						lastYear: 'Last year',
						custom: 'Custom timeframe',
					},
					from: 'From',
					to: 'To',
					dateInputError: 'Erroneous timeframe: length must be at least one day.',
					columns: 'Columns',
					columnsDefault: 'Default',
					columnsAll: 'All',
					columnsPrevious: 'Previous download',
					columnsCustom: 'Custom selection',
					columnHeaders: {
						project: 'Project',
						client: 'Client',
						parentProject: 'Parent project',
						resource: 'Resource (suite, staff, resource)',
						booking: 'Booking',
						carbon: 'Carbon emissions',
					},
					columnNames: {
						name: 'Name',
						number: 'Number',
						byline: 'Byline',
						resourceType: 'Type (suite/staff/resource)',
						staffInternal: 'Internal/external (staff only)',
						status: 'Status',
						activity: 'Activity',
						startDate: 'Start date (YYYY-mmm-dd)',
						startTime: 'Start time (HH:ii)',
						startTimezone: 'Start timezone',
						endDate: 'End date (YYYY-mm-dd)',
						endTime: 'End time (HH:ii)',
						endTimezone: 'End timezone',
						startIso: 'Start (ISO timestamp)',
						endIso: 'End (ISO timestamp)',
						startIsoUtc: 'Start in UTC (ISO timestamp)',
						endIsoUtc: 'End in UTC (ISO timestamp)',
						timeLength: 'Length',
						unit: 'Unit',
						amount: 'Amount',
						sum: 'Sum',
					},
					selectAll: 'Select all',
					deselectAll: 'Deselect all',
					fileFormat: 'File format',
					fileFormatExcel: 'Excel',
					fileFormatCsv: 'CSV',
					csvOptions: 'CSV options',
					csvDelimiter: 'Delimiter',
					csvDelimiterComma: 'Comma',
					csvDelimiterSemicolon: 'Semicolon',
					csvEncoding: 'Encoding',
				},
				buttons: {
					showColumns: 'Show columns',
					hideColumns: 'Hide columns',
					cancel: 'Cancel',
					download: 'Download',
				},
			},
		},
		customFields: {
			general: {
				validationRequired: 'Required field.',
			},
			customFieldsForm: {
				title: 'Add information',
				description: 'Include additional, structured project-specific information.',
				form: {
					name: 'Name',
					content: 'Content',
					buttons: {
						add: 'Add more',
					}
				},
			},
			globalFieldsForm: {
				title: 'Custom fields',
				description: 'Custom fields add additional, structured information that is added upon editing by users.',
				list: {
					title: 'Set up custom fields',
					noFields: '(No fields yet.)',
					addButton: 'Add new',
					types: {
						text: 'Text entry',
						textarea: 'Long text',
						color: 'Colour',
						date: 'Date',
						datetime: 'Date & time',
						time: 'Time',
						number: 'Number',
						url: 'Website URL',
						checkbox: 'Checkboxes',
						radio: 'Radio boxes',
						select: 'Dropdown',
						unknown: 'Field',
					},
				},
				form: {
					name: 'Field name',
					namePlaceholder: '',
					description: 'Description',
					descriptionPlaceholder: '(optional)',
					type: 'Type',
					types: {
						text: 'Short text',
						textarea: 'Multi-line text',
						color: 'Colour',
						date: 'Date',
						datetime: 'Date & time',
						time: 'Time',
						number: 'Number',
						url: 'Website URL',
						checkbox: 'Check boxes (multi-item selection)',
						radio: 'Radio boxes (single item selection)',
						select: 'Dropdown menu',
					},
					options: 'Selection choices',
					optionLabel: 'Choice {num}',
					optionName: 'Name',
					addOption: 'Add option',
					defaultValue: 'Default value',
					defaultValuePlaceholder: '(optional)',
					required: 'Required field',
					idForApi: 'Global field ID (for API and automations)',
					buttons: {
						cancel: 'Cancel',
						save: 'Save',
					}
				},
			},
		},
		dashboard: {
			chart: {
				utilization: 'Utilisation',
				link: {
					analytics: 'Analytics',
				}
			},
			dayPlan: {
				header: 'Your day',
				ariaLabelCalendar: 'Day calendar',
				link: {
					planner: 'Planner',
				}
			},
			invitation: {
				title: 'Team invitation',
				text: 'You have been invited to join the team {team}',
				buttons: {
					accept: 'Accept & join',
					deny: 'Reject',
				},
			},
			stats: {
				currently: 'Currently:',
				available: 'available',
				noneAvailable: 'None available',
				link: {
					planner: 'Planner',
				}
			},
			suiteOverview: {
				header: {
					overview: 'Overview',
					lastRefresh: 'Last Refresh:',
					refreshView: 'Refresh view',
				},
			},
		},
		display: {
			invoiceStatusDisplay: {
				paid: 'Paid',
				overdue: 'Overdue',
				partiallyOverdue: '{num} overdue',
				unpaid: 'Unpaid',
				partiallyUnpaid: '{num} unpaid',
				draft: 'Draft',
				cancelled: 'Cancelled',
			},
			offerStatusDisplay: {
				accepted: 'Accepted',
				declined: 'Declined',
				open: 'Open',
				draft: 'Draft',
			},
			orderDisplay: {
				view: 'view',
				project: 'Project',
				offers: 'Quotes',
				noOffers: 'No quotes.',
				invoices: 'Invoices',
				noInvoices: 'No invoices.',
			},
			staffDisplay: {
				linkedToUser: 'Team member',
			},
		},
		emailHandling: {
			emailLogModal: {
				title: 'E-mail logs',
				senderFrom: 'From:',
				noLogs: 'No logs available.',
				buttonClose: 'Close',
			},
		},
		forms: {
			emailAddressArray: {
				label: 'E-mail address',
				placeholder: 'name@company.com',
				delete: 'Remove',
			}
		},
		ganttItem: {
			modal: {
				editNewModal: {
					titlePhase: 'Edit phase',
					titleMilestone: 'Edit milestone',
					titleTask: 'Edit item',
					content: {
						name: 'Name',
						nameErrorEmpty: 'A name is required.',
						start: 'Start',
						startPlaceholder: 'Start date',
						date: 'Date',
						datePlaceholder: 'Milestone date',
						end: 'End',
						endPlaceholder: 'End date',
						allDay: 'All-day',
						weekends: 'Weekends',
						skipWeekends: 'Skip weekends',
						color: 'Colour',
						byline: 'Byline',
						description: 'Description',
						status: 'Status',
					},
					buttons: {
						convertToBooking: 'Convert to booking',
						cancel: 'Cancel',
						save: 'Save',
					},
				},
				taskStatusSelection: {
					statusPlaceholder: '(no status specified)',
					statusNoOptions: 'No statuses available.',
				},
				viewModal: {
					titlePhase: 'Phase',
					titleMilestone: 'Milestone',
					titleTask: 'Item',
					content: {
						timeframe: 'Time frame',
						date: 'Date',
						from: 'from:',
						to: 'to:',
						on: 'on:',
					},
					buttons: {
						edit: 'Edit',
						delete: 'Delete',
						close: 'Close',
					}
				}
			},
		},
		footer: {
			madeWith: 'Crafted with',
			inGermany: 'in Germany',
		},
		groups: {
			editNewGroupModal: {
				title: {
					editGroup: 'Edit group',
					newGroup: 'Create group',
				},
				content: {
					name: 'Name',
					byline: 'Byline',
					number: 'Group no.',
					numberDescription: 'Internal group number',
					color: 'Colour',
					email: 'Email address',
					emailDescription: 'Useful for automations',
					emailPlaceholder: 'name@domain.com',
				},
				buttons: {
					cancel: 'Cancel',
					saveGroup: 'Save',
					addGroup: 'Create',
				}
			}
		},
		header: {
			notifications: {
				index: {
					dropdowns: {
						notifications: {
							notifications: 'Notifications',
							markAllAsRead: 'Mark all as read',
							noNotifications: 'No new notifications.',
							notificationPage: 'Show all',
						},
					}
				},
			},
			demoPeriodWarning: {
				expired: {
					title: 'Demo expired',
					content: 'Demo expired {relativeTime} and is now in READ-ONLY mode. Please contact <a href="mailto:support@freispace.com" class="underline hover:no-underline">support@freispace.com</a>.',
				},
				active: {
					title: 'Demo account',
					content: 'This demo account expires {relativeTime}, after which it will be switched to read-only mode.',
				}
			},
			index: {
				search: {
					search: 'Search...',
					searchFreispace: 'Search freispace for...',
				},
				dropdowns: {
					team: {
						teams: 'Teams',
						manageTeam: 'Manage team',
						teamSettings: 'Team settings',
						showTeamMembers: 'Team members',
						inviteMembers: 'Invite team members',
						createTeam: 'Create new team',
						joinTeam: 'Join another team',
						switchTeam: 'Switch teams',
					},
					profile: {
						profile: 'Profile',
						account: 'Account',
						notificationSettings: 'Notification settings',
						settings: 'Settings',
						logOut: 'Log out',
					},
				},
			},
			pwaStatusNotification: {
				messages: {
					offline: 'You are offline.',
					backOnline: 'Back online!',
					unknownError: 'An unknown error occurred.',
				},
				buttons: {
					reload: 'Reload',
					close: 'Close',
				}
			},
			timeTracker: {
				title: 'Time tracking',
				content: {
					total: 'Total:',
					project: 'Project',
					activity: 'Activity',
					endTime: 'End time:',
					billable: 'Billable',
				},
				warning: {
					timerSuspended: 'Timer stopped automatically.',
					saveRequired: 'Recorded time must be saved or discarded.',
					minimumDurationRequired: 'A minimum duration<br>of 10 minutes is required.',
				},
				buttons: {
					start: 'Start',
					pause: 'Pause',
					resume: 'Resume',
					save: 'Save',
					cancelTracking: 'Cancel tracking',
					saveBack: 'Back',
					saveAbort: 'Abort & discard',
					viewList: 'List of entries',
				},
			},
		},
		inventoryItems: {
			editNewForm: {
				titleEdit: 'Edit item',
				titleNew: 'Create item',
				content: {
					type: 'Type',
					typeService: 'Service',
					typeProduct: 'Goods',
					number: 'Item number',
					sku: 'SKU',
					skuDescription: 'Stock keeping unit',
					taxRate: 'Tax rate',
					priceNet: 'Selling price (net)',
					priceConvertedGross: 'Gross:',
					priceNetDescription: 'incl. unit',
					purchasePrice: 'Purchase price (net)',
					defaultLanguage: '(default)',
					name: 'Name',
					description: 'Description',
					text: 'Item text',
					textDescription: 'Used as default line item text on invoices.',
					addTranslation: 'Add translation',
					deleteTranslation: 'Delete translation',
					language: 'Language',
					languagePlaceholder: 'Select translation language',
					timeTrackingEnabled: 'Enable for time tracking',
					timeTrackingEnabledLabel: 'Make selectable during time tracking',
					timeTrackingEnabledDescription: 'Allows to track additional costs when adding time entries',
					searchKeys: 'Search terms',
					searchKeysDescription: 'Search terms for internal use',
					groups: 'Groups',
					groupsDescription: 'e.g. for price grouping',
					saveEdit: 'Save',
					saveNew: 'Create item',
				},
			},
			itemSelectionModal: {
				title: 'Select goods or service',
				searchInputPlaceholder: 'Search...',
				searchInputClear: 'Clear search',
				itemsLoading: 'Loading items...',
				itemsNoneFound: 'No items found.',
				itemsNoneFoundCreateNew: 'Create item',
				buttonClose: 'Cancel',
				buttonSelect: 'Select',
			},
			priceList: {
				content: {
					headerItem: 'Item/group',
					headerCompany: 'Company',
					headerClient: 'Client/group',
					headerCurrency: 'Currency',
					headerPrice: 'Price (net)',
					headerUpdatedAt: 'Last updated',
					headerOptions: 'Options',
					filterItem: 'Filter by item/group',
					filterCompany: 'Filter by company',
					filterClient: 'Filter by client/group',
					filterCurrency: 'Filter by currency',
					filterPriceMin: 'Filter by minimum price',
					filterPriceMax: 'Filter by maximum price',
					filterUpdatedAt: 'Filter by updated date',
					selectCurrencyAll: 'all',
					placeholderFilter: 'Filter...',
					placeholderMinValue: 'min',
					placeholderMaxValue: 'max',
					buttonFilter: 'Filter',
					buttonCreate: 'Create new price',
					noRows: 'No prices found.',
					edit: 'Edit',
					delete: 'Delete',
				},
				modal: {
					titleCreate: 'Create price',
					titleUpdate: 'Edit price',
					item: 'Item type',
					typeItem: 'Goods/Service',
					typeItemGroup: 'Group',
					selectItemPlaceholder: 'Select item...',
					selectItemGroupPlaceholder: 'Select item group...',
					price: 'Price (net)',
					headerLimitAvailability: 'Limit price availability',
					company: 'Company',
					selectCompanyPlaceholder: 'Limit to company...',
					clientType: 'Client type',
					clientTypePlaceholder: 'Limit to client or client group...',
					typeClient: 'Client',
					typeClientGroup: 'Client group',
					selectClientPlaceholder: 'Select client...',
					selectClientGroupPlaceholder: 'Select client group...',
					cancel: 'Cancel',
					save: 'Save',
				},
			},
		},
		invoicing: {
			bookingToInvoiceModal: {
				title: 'Convert bookings to invoice',
				error: 'An error occurred.',
				noBookings: 'We couldn\'t determine any bookings.',
				content: {
					selectClient: 'Select client for the invoice.',
					selectItems: 'Select the goods or services that should be used to create a new invoice.',
					booking: 'Booking:',
					timeframe: 'Timeframe:',
					project: 'Project:',
					client: 'Client:',
					noItemsFound: 'No matching goods or services found.',
				},
				buttons: {
					cancel: 'Cancel',
					save: 'Transmit',
				}
			},
			editNewInvoice: {
				content: {
					errorSaving: 'Error saving invoice',
					issuer: 'Issuer',
					recipient: 'Recipient',
					recipientSelection: 'Select',
					recipientClientName: 'Client:',
					recipientClientContactName: 'Contact:',
					billingEmailAddresses: 'Send to:',
					invoiceNumber: 'Invoice number',
					invoiceNumberTemporary: 'Temporary number',
					invoiceNumberTemporaryExplanation: 'The number will only be finally assigned once the invoice has been finalized.',
					subject: 'Subject',
					invoiceDate: 'Invoice date',
					invoiceDateFirst: 'First invoice',
					dueDate: 'Due date',
					dueDateDays: 'days',
					dueDateSelection: 'Date',
					reference: 'Reference / order number',
					costCenter: 'Cost center',
					interval: 'Interval',
					intervalEnd: 'End date',
					servicePeriod: 'Service period',
					serviceDate: 'Service date',
					servicePeriodSwitchDate: 'Date',
					serviceDateSwitchPeriod: 'Period',
					servicePeriodCalculation: 'Service period',
					servicePeriodCalculationFuture: 'Future',
					servicePeriodCalculationFutureDescription: 'from invoice date',
					servicePeriodCalculationBackdated: 'Backdate',
					servicePeriodCalculationBackdatedDescription: 'before invoice date',
					addCustomField: 'Add custom field',
					customFields: 'Custom fields',
					customFieldLabel: 'Field name',
					customFieldValue: 'Field value',
					header: 'Header',
					lines: {
						number: '#',
						product: 'Line item',
						description: 'Description',
						quantity: 'Quantity',
						itemPrice: 'Single price',
						tax: 'Tax',
						discount: 'Discount',
						priceSum: 'Sum',
						priceSumNet: '(net)',
						priceSumGross: '(gross)',
						productPlaceholder: 'Enter item...',
						noProductFound: 'No item found.',
						deleteItem: 'Delete',
						discountNamePlaceholder: 'Description',
						discountTypeDiscount: 'Discount',
						discountTypeSurcharge: 'Surcharge',
					},
					purchasePrice: 'Purchase Price',
					addLineItem: 'Add line item',
					addInventoryItem: 'Add goods/service',
					addDiscountItem: 'Overall discount/surcharge',
					footer: 'Footer',
					additionalOptions: 'Additional options',
					currency: 'Currency',
					contactPerson: 'Contact person',
					language: 'Language',
					paymentMethod: 'Payment method',
					discountForSwiftPayment: 'Discount rule',
					discountForSwiftPaymentDays: 'days',
					taxCalculationScheme: 'Taxation',
					totalNet: 'Subtotal (net)',
					totalSurcharges: 'thereof surcharges',
					totalDiscounts: 'thereof discounts',
					vatName: 'Tax',
					totalGross: 'Total',
					loadingOrder: 'Loading order...',
				},
			},
			editNewOffer: {
				content: {
					errorSaving: 'Error saving quote',
					issuer: 'Issuer',
					recipient: 'Recipient',
					recipientSelection: 'Select',
					recipientClientName: 'Client:',
					recipientClientContactName: 'Contact:',
					billingEmailAddresses: 'Send to:',
					offerNumber: 'Quote number',
					offerNumberTemporary: 'Temporary number',
					offerNumberTemporaryExplanation: 'The number will only be finally assigned once the quote has been finalized.',
					subject: 'Subject',
					offerDate: 'Quote date',
					offerValidDate: 'Quote valid until',
					offerValidDateSelection: 'Date',
					reference: 'Reference / order number',
					costCenter: 'Cost center',
					servicePeriod: 'Service period',
					serviceDate: 'Service date',
					servicePeriodSwitchDate: 'Date',
					serviceDateSwitchPeriod: 'Period',
					addCustomField: 'Add custom field',
					customFields: 'Custom fields',
					customFieldLabel: 'Field name',
					customFieldValue: 'Field value',
					header: 'Header',
					lines: {
						number: '#',
						product: 'Line item',
						description: 'Description',
						quantity: 'Quantity',
						itemPrice: 'Single price',
						tax: 'Tax',
						discount: 'Discount',
						priceSum: 'Sum',
						priceSumNet: '(net)',
						priceSumGross: '(gross)',
						subtotal: 'Subtotal',
						headerPlaceholder: 'Enter header...',
						productPlaceholder: 'Enter item...',
						noProductFound: 'No item found.',
						deleteItem: 'Delete',
						discountNamePlaceholder: 'Description',
						discountTypeDiscount: 'Discount',
						discountTypeSurcharge: 'Surcharge',
						optionalToggle: 'Optional',
						alternativeToggle: 'Alternative',
						priceTextPlaceholder: 'Replace price with text...',
						switchMultiplesMode: 'Switch to multiples',
						switchSingleMode: 'Switch to regular mode',
					},
					purchasePrice: 'Purchase Price',
					addLineItem: 'Add line item',
					addInventoryItem: 'Add goods/service',
					addHeadingItem: 'Heading',
					addDividerItem: 'Divider',
					addBlockHeaderItem: 'Block header',
					addSubtotalItem: 'Subtotal',
					addDiscountItem: 'Overall discount/surcharge',
					footer: 'Footer',
					additionalOptions: 'Additional options',
					currency: 'Currency',
					contactPerson: 'Contact person',
					language: 'Language',
					taxCalculationScheme: 'Taxation',
					totalNet: 'Subtotal (net)',
					totalSurcharges: 'thereof surcharges',
					totalDiscounts: 'thereof discounts',
					vatName: 'Tax',
					totalGross: 'Total',
					loadingOrder: 'Loading order...',
				},
			},
			editNewOrder: {
				titleEdit: 'Edit order',
				titleNew: 'New order',
				content: {
					number: 'Order No.',
					name: 'Name',
					nameDescription: '(optional)',
					project: 'Project',
					company: 'Company',
					client: 'Client',
					clientAddress: 'Billing address',
					clientContact: 'Client Contact',
					changeClient: 'Change client...',
					selectClient: 'Select client...',
					removeClient: 'Remove client',
					removeAddress: 'Remove address',
					removeContact: 'Remove contact',
					status: 'Status',
					activeOrder: 'Active order',
					saveEdit: 'Save changes',
					saveNew: 'Create order',
				}
			},
			formOrderLinkHeader: {
				linkedOrder: 'Linked to order:',
				linkToOrder: 'Load & link order:',
				buttonChange: 'Change',
				buttonCancel: 'Cancel',
			},
			inlineLinkOrderModule: {
				linkToOrder: 'Link',
				buttonSave: 'Save',
			},
			modalCreateCompany: {
				title: 'Set up company',
				message: 'Please enter your company information. This is required to create quotes and invoices.',
				messageChanges: 'You may change the information at any time in the team settings.'
			},
			offerToInvoiceModal: {
				title: 'Convert quote to invoice',
				description: 'Select all positions to be transmitted to the new invoice.',
				noItems: 'No positions found in quote.',
				offer: 'Quote',
				invoice: 'Invoice',
				sumTotalNet: 'Total (net)',
				createSingleInvoice: 'Create single invoice',
				createSingleInvoiceDescription: 'including all positions',
				createMultipleInvoices: 'Split invoice amount',
				createMultipleInvoicesDescription: 'Create multiple partial invoices',
				numberOfInvoices: 'invoices',
				invoiceNumber: 'Invoice #{num}',
				invoiceFinal: 'Final invoice',
				divergenceDueToRounding: 'Notice: There\'s a rounding difference of {currency} 0.01 due to percentage-based discounts/surcharges.',
				buttons: {
					cancel: 'Cancel',
					save: 'Create invoice',
				},
			},
			pdfViewer: {
				buttonRefresh: 'refresh',
				errorTitle: 'Error loading',
				errorDescription: 'Please try again',
			},
			recurringInvoiceStatus: {
				active: 'Active',
				inactive: 'Inactive',
			},
			sendEmailSettingsModal: {
				title: 'Send invoice by e-mail',
				titleDocumentName: 'Send {documentName} by e-mail',
				content: {
					recipient: 'Recipient',
					cc: 'Copy (CC)',
					bcc: 'Blind copy (BCC)',
					attachments: 'Attachments',
				},
				buttons: {
					cancel: 'Cancel',
					send: 'Send',
					save: 'Save',
					addCCandBCC: 'Add CC',
					addFile: 'Add file',
				}
			},
			sendLog: {
				title: 'Send history',
				events: {
					unknownUser: 'Deleted user',
					emailText: '{userName} sent the document by e-mail.',
					downloadText: '{userName} downloaded the document.',
					printText: '{userName} printed the document.',
					email: 'E-mail',
					download: 'Download',
					print: 'Print',
				},
				emails: {
					to: 'To:',
					cc: 'CC:',
					bcc: 'BCC:',
				},
				noLogs: 'The document has not been sent yet.',
				buttonEmailLogs: 'E-mail logs',
				buttonShowAll: 'Show all',
			}
		},
		navigation: {
			groups: {
				personalArea: 'Your area',
				planning: 'Scheduling',
				resources: 'Resources',
				crm: 'CRM',
				invoicing: 'Billing',
				analytics: 'Analytics',
			},
			items: {
				dashboard: 'Dashboard',
				wizard: 'Setup Wizard',
				timeTracking: 'Time tracking',
				timeTrackingOverview: 'Overview',
				planningOverview: 'Planner',
				projects: 'Projects',
				sites: 'Sites & Rooms',
				staff: 'Staff',
				staffDepartments: 'Departments',
				staffVacationDays: 'Holiday quotas',
				resources: 'Resources',
				groups: 'Groups',
				clients: 'Clients',
				orders: 'Orders',
				offers: 'Quotes',
				offersDraft: 'Drafts',
				offersOpen: 'Open',
				offersAccepted: 'Accepted',
				offersDeclined: 'Declined',
				invoices: 'Invoices',
				invoicesDraft: 'Drafts',
				invoicesOpen: 'Open',
				invoicesOverdue: 'Overdue',
				invoicesRecurring: 'Recurring',
				inventoryItems: 'Goods & Services',
				utilization: 'Utilisation',
				costReport: 'Cost Reporting',
				carbonReport: 'CO<sub>2</sub>e Reporting',
				timeRecords: 'Time records',
				vacationOverview: 'Absences',
			},
			meta: {
				labels: {
					sidebar: 'Sidebar',
					openMenu: 'Open menu',
					expandMenu: 'Expand menu',
					toggleSubMenu: 'Toggle sub-menu',
					minimizeMenu: 'Minimize menu',
				},
				darkMode: {
					'dark': 'Dark mode',
					'light': 'Light mode',
					'auto': 'Auto mode',
				},
				helpMenu: {
					button: 'Help',
					buttonTooltip: 'We\'re here to help.',
					linkMessageUs: 'Write us a message',
					linkUserGuides: 'User Guides',
					linkDocumentation: 'Documentation',
					linkInEnglishOnly: '',
					linkServiceStatus: 'Service status',
					linkChangeLog: 'Changelog',
					linkLegal: 'Legal / Licenses',
				},
				tags: {
					new: 'New!',
					beta: 'BETA',
				},
			}
		},
		notifications: {
			notificationText: {
				teamInvitationAccepted: '{userName} has accepted your {teamName} team invite.',
				teamInvitationNew: '{userName} has invited you to join the {teamName} team.',
				teamInvitationDenied: '{userName} has rejected your {teamName} invite.',
				teamInvitationCancelled: '{userName} has cancelled your {teamName} invite.',
				teamMemberLeft: '{userName} has left the {teamName} team.',
				taskSchedulerFailed: 'A background task failed.',
				invoiceEmailSendFailed: 'An invoice e-mail could not be delivered.',
				invoiceEmailSendFailedInvoice: 'Invoice:',
				invoiceEmailSendFailedToAddress: 'Recipient:',
				bookingAssigned: 'Booking \'{bookingName}\' assigned to you by <b class="font-medium">{userName}</b>.',
				bookingUnassigned: 'You were removed from booking \'{bookingName}\' by <b class="font-medium">{userName}</b>.',
				bookingCreated: 'Booking \'{bookingName}\' created by <b class="font-medium">{userName}</b>.',
				bookingAssignedChanged: 'Assigned booking \'{bookingName}\' was changed by <b class="font-medium">{userName}</b>.',
				bookingSubscribedChanged: 'Subscribed booking \'{bookingName}\' was changed by <b class="font-medium">{userName}</b>.',
				bookingOwnChanged: 'Your booking \'{bookingName}\' was changed by <b class="font-medium">{userName}</b>.',
				bookingAssignedDeleted: 'Assigned booking \'{bookingName}\' was deleted by <b class="font-medium">{userName}</b>.',
				bookingSubscribedDeleted: 'Subscribed \'{bookingName}\' booking was deleted by <b class="font-medium">{userName}</b>.',
				bookingOwnDeleted: 'Your booking \'{bookingName}\' was deleted by <b class="font-medium">{userName}</b>.',
				buttonShowBooking: 'Show booking',
				todoAssigned: 'New to-do <b class="font-medium">{todoName}</b> assigned to you.',
				todoUnassigned: 'You have been removed from the to-do <b class="font-medium">{todoName}</b>.',
				todoDeleted: 'To-do <b class="font-medium">{todoName}</b> was deleted.',
				todoDue: 'To-do <b class="font-medium">{todoName}</b> is <b class="font-medium text-yellow-600 dark:text-yellow-400">due today</b>.',
				todoOverdue: 'To-do <b class="font-medium">{todoName}</b> was due on <b class="font-medium text-red-600 dark:text-red-400">{dueDate}</b>.',
				todoChangedChecked: 'To-do <b class="font-medium">{todoName}</b> was marked as <em>done</em>.',
				todoChangedUnchecked: 'To-do <b class="font-medium">{todoName}</b> was marked as <em>not done</em>.',
				todoChangedPriority: 'To-do <b class="font-medium">{todoName}</b> was marked <em>{priority} priority</em>.',
				todoChangedDueDate: 'To-do <b class="font-medium">{todoName}</b> is now due on <b class="font-medium">{dueDate}</b>.',
				todoChangedDeleted: 'To-do <b class="font-medium">{todoName}</b> was deleted.',
				todoChanged: 'To-do <b class="font-medium">{todoName}</b> was changed.',
				todoChangedPriorityHigh: 'hight',
				todoChangedPriorityMedium: 'medium',
				todoChangedPriorityLow: 'low',
				todoChangedPriorityNone: 'no',
				unknown: 'Unknown notification.',
				unknownUser: 'unknown user',
			},
		},
		payments: {
			paymentModal: {
				title: 'Record incoming payment',
				content: {
					invoiceNumber: 'Invoice no.',
					invoiceDate: 'Date',
					client: 'Client',
					invoiceSumGross: 'Invoice amount',
					amountDue: 'Outstanding balance',
					paymentHistory: 'Payment history',
					paymentDate: 'Payment date',
					paymentAmount: 'Amount',
					paymentMethod: 'Payment method',
					differenceReason: 'Reason for deviation',
				},
				form: {
					date: 'Date',
					amount: 'Amount',
					paymentMethod: 'Payment method',
					dateEqualsInvoiceDate: 'Date = invoice date',
					differencePositive: 'Results in an additional amount of {sum}.',
					differenceNegative: 'There is a difference of {sum}.',
					reason: 'Reason:',
					reasonCollectivePayment: 'Part of a collective payment',
					reasonReminderFees: 'Reminder fees',
					reasonDiscount: 'Discount',
					reasonPartPayment: 'Partial payment',
					reasonOther: 'Other',
					reasonProcessingFees: 'Payment transaction costs (tax-free)',
				},
				buttons: {
					cancel: 'Cancel',
					save: 'Save',
				},
			},
		},
		planner: {
			iCalModal: {
				title: 'Calendar Subscription',
				content: {
					bookingsCanBeSynced: 'Bookings in this overview can be imported and synced to your calendar automatically.',
					subscribeToSynch: 'Subscribe to the URL below in your preferred calendar application to sync bookings.',
					importGuides: 'Import guides:',
					links: {
						macOs: {
							name: 'macOS',
							url: 'https://support.apple.com/en-gb/guide/calendar/icl1022/mac',
						},
						iOs: {
							name: 'iOS',
							url: 'https://support.apple.com/en-gb/guide/iphone/iph3d1110d4/ios',
						},
						outlook: {
							name: 'Microsoft Outlook',
							url: 'https://docs.freispace.com/docs/calendars/guides/microsoft-outlook',
						},
						outlookOnline: {
							name: 'Outlook Online',
							url: 'https://docs.freispace.com/docs/calendars/guides/microsoft-outlook-for-web',
						},
						googleCalendar: {
							name: 'Google Calendar',
							url: 'https://docs.freispace.com/docs/calendars/guides/google-calendar',
						},
					}
				},
				form: {
					iCalUrl: 'iCal URL',
					copyUrl: 'Copy URL',
					enableReminders: 'Enable reminders',
					reminderTiming: 'Timing of reminders',
					reminderMinutes: 'min. before',
					enableRemindersFullDayBookings: 'Enable for full-day bookings',
				},
				buttons: {
					close: 'Close',
				}
			},
			plannerBookingDisplaySettings: {
				bookingColors: 'Booking colours',
				bookingColorsDescription: 'Individual colouring for bookings. The colours are assigned in the specified order. Specify as a comma-separated list.',
				bookingBackgroundColor: 'Background',
				bookingBackgroundColorPlaceholder: 'e.g. booking,project',
				bookingStripeColor: 'Left stripe',
				bookingStripeColorPlaceholder: 'e.g. project',
				colors: {
					booking: 'Booking',
					project: 'Project',
					status: 'Status',
					suite: 'Suite/Room (first suite if multiple)',
					resource: 'Resource (first resource if multiple)',
				},
				bookingLabels: 'Booking labels',
				bookingLabelsDescription: 'Definition of content to be displayed on the booking using placeholders. If available, the placeholders are replaced by the corresponding values. Custom planning views take precedence over the team settings.',
				labelOptions: 'Available options',
				bookingLabelOne: 'First line',
				bookingLabelOneDescription: 'with regular view',
				bookingLabelOnePlaceholder: 'e.g.',
				bookingLabelTwo: 'Second line',
				bookingLabelTwoDescription: 'with regular view',
				bookingLabelTwoPlaceholder: 'e.g.',
				bookingLabelCondensed: 'Condensed view',
				bookingLabelCondensedDescription: 'single line',
				bookingLabelCondensedPlaceholder: 'e.g.',
				variables: {
					bookingName: 'Booking name',
					bookingByline: 'Booking byline',
					bookingColor: 'Booking colour',
					statusIcon: 'Status icon',
					statusName: 'Status name',
					statusColor: 'Status colour',
					activityName: 'Activity',
					projectNumber: 'Project number',
					projectName: 'Project name',
					projectByline: 'Project byline',
					projectColor: 'Project colour',
					projectParentNumber: 'Parent project number',
					projectParentName: 'Parent project name',
					projectParentByline: 'Parent project byline',
					projectParentColor: 'Parent project colour',
					staffList: 'Staff (images & names)',
					staffNamesOnly: 'Staff (names only)',
					staffImagesOnly: 'Staff (images only)',
					suitesList: 'Suites/Rooms (colours & names)',
					suitesListByline: 'Suites/Rooms (colours, names, bylines)',
					suitesNamesOnly: 'Suite/Room names',
					suitesColorsOnly: 'Suite/Room colours',
					sitesNames: 'Sites',
					resourcesList: 'Resources (images & names)',
					resourcesListByline: 'Resources (images, names, bylines)',
					resourcesNamesOnly: 'Resources (names only)',
					resourcesImagesOnly: 'Resources (images only)',
				},
				setDefaultValue: 'Set default value',
			},
			plannerViewModal: {
				titleEdit: 'Edit view',
				titleCreate: 'Create custom view',
				content: {
					name: 'Name',
					condensed: 'Load collapsed',
					condensedDescription: 'Resource list should be closed by default',
					share: 'Share view',
					shareDescription: 'Make visible for all team members',
					selectedResources: 'Chosen elements',
					customization: 'Customisation',
					viewSettings: 'Display settings',
				},
				buttons: {
					cancel: 'Cancel',
					save: 'Update',
					create: 'Create',
				}
			}
		},
		presences: {
			elements: {
				switchYearList: {
					switchView: 'Change view',
					yearView: 'Year overview',
					overview: 'Overview',
					listView: 'List view',
				},
			},
			editNewModal: {
				title: 'Time tracking',
				buttons: {
					save: 'Save',
					cancel: 'Cancel',
				},
			},
			modifyTimeDataModal: {
				header: 'Adjust time total',
				adjustment: 'Adjustment',
				adjustmentDescription: '+/- in hours and minutes',
				comment: 'Comment / note',
				commentDescription: 'Visible to the user',
				commentPlaceholder: 'Enter an explanatory note...',
				buttonCancel: 'Cancel',
				buttonSave: 'Save',
			},
			presenceForm: {
				date: 'Date',
				dateYesterday: 'Yesterday',
				dateToday: 'Today',
				dateCustom: 'Select...',
				invalidDate: 'Invalid date',
				project: 'Project',
				activity: 'Activity',
				enterDuration: 'Duration',
				enterStartAndEnd: 'Start & end',
				workingTime: 'Working time',
				workingTimeDescription: '(without breaks)',
				descriptionFormat: 'Formatting:',
				descriptionFormatWorkTime: '“<span class="font-mono">7h30m</span>” or “<span class="font-mono">7.5</span>” or “<span class="font-mono">15m</span>”',
				workStart: 'Start time',
				workEnd: 'End time',
				descriptionFormatTime: '<span class="font-mono">h:mm</span>',
				breakTime: 'Break duration',
				descriptionFormatBreak: '“<span class="font-mono">1h10m</span>” or “<span class="font-mono">1.5</span>” or “<span class="font-mono">30m</span>”',
				comment: 'Remark / comment',
				billable: 'Billable',
				billableLabel: 'Mark as billable',
				calculatedWorkTime: 'Calculated work time',
				calculatedWorkTimeValid: 'Valid work time',
				calculatedWorkTimeInvalid: 'Invalid work time',
				calculatedWorkTimeInvalidMinLength: 'The minimum work time is 10 mins.',
				calculatedWorkTimeInvalidTotalLength: 'Work time plus break are too long.',
				tagInventoryItems: 'Additional services',
				inventoryItemsNoResults: 'No more results',
				buttons: {
					save: 'Save',
					cancel: 'Cancel',
				}
			},
			presenceItemsList: {
				exportName: 'Services',
				dropdowns: {
					months: {
						year: 'Year',
						entireProject: 'Project length',
						entireProjectShort: 'Project',
						entireYear: 'Entire year',
					},
					activity: {
						markAsBilled: 'Mark as billed',
						unmarkAsBilled: 'Mark as not billed',
						edit: 'Edit time entry',
						delete: 'Delete',
					},
					export: {
						export: 'Export',
						exportAsExcel: 'Export as Excel',
						exportAsCsv: 'Export as CSV',
					},
				},
				buttons: {
					filters: 'Filters',
				},
				table: {
					inventoryItem: 'Service',
					quantity: 'Quantity',
					inventoryItemPrice: 'Price',
					subtotal: 'Total',
					staff: 'Staff',
					project: 'Project',
					activity: 'Activity',
					comment: 'Comment',
					billed: 'Billed',
					date: 'Date',
					options: 'Options',
					filterInventoryItem: 'Filter by service',
					filterStaff: 'Filter by person',
					filterProject: 'Filter by project',
					filterActivity: 'Filter by activity',
					filterBillable: 'Filter by billed',
					filterDate: 'Filter by date',
					commentShowAll: 'Show all',
					commentShowLess: 'Show less',
				},
			},
			presenceList: {
				exportName: 'Time tracking',
				dropdowns: {
					months: {
						year: 'Year',
						entireProject: 'Project length',
						entireProjectShort: 'Project',
						entireYear: 'Entire year',
					},
					activity: {
						view: 'View',
						edit: 'Edit',
						duplicate: 'Duplicate',
						delete: 'Delete',
					},
					export: {
						export: 'Export',
						exportAsExcel: 'Export as Excel',
						exportAsCsv: 'Export as CSV',
					},
				},
				buttons: {
					filters: 'Filters',
				},
				table: {
					date: 'Date',
					staff: 'Staff',
					project: 'Project',
					activity: 'Activity',
					billable: 'Bill',
					start: 'Start',
					end: 'End',
					duration: 'Length',
					break: 'Break',
					comment: 'Comment',
					options: 'Options',
					placeholderMinValue: 'min',
					placeholderMaxValue: 'max',
					filterDate: 'Filter by date',
					filterStaff: 'Filter by person',
					filterProject: 'Filter by project',
					filterActivity: 'Filter by activity',
					filterBillable: 'Filter by billable status',
					filterBillableAll: 'All',
					filterBillableTrue: 'Yes',
					filterBillableFalse: 'No',
					filterLengthMin: 'Filter by minimal work duration (in minutes)',
					filterLengthMax: 'Filter by maximum work duration (in minutes)',
					filterBreakMin: 'Filter by minimal break duration (in minutes)',
					filterBreakMax: 'Filter by maximum break duration (in minutes)',
					commentShowAll: 'Show all',
					commentShowLess: 'Show less',
				},
				unitMinutes: 'min.',
				unitHours: 'h',
			},
			workingTimesYearOverview: {
				workTimeBalance: 'Time balance',
				workTimeBalanceAdjustment: 'Adjustment',
				workTimeBalanceTotal: 'Total',
				vacationDays: 'Holidays',
				workTimeChange: 'Change in working hours',
				balance: 'Monthly balance:',
				dropdowns: {
					xlView: {
						view: 'Style',
						rowsShort: 'Compact',
						monthsShort: 'Calendar',
						rows: 'Compact rows',
						months: 'Calendar-style months',
					},
				},
				buttons: {
					addTimeEntry: 'Add time entry',
					addAbsence: 'Add absence',
				},
				monthPopup: {
					workTimes: 'Recorded times:',
					subtotal: 'Subtotal:',
					monthBalance: 'Balance (month):',
					overallBalance: 'Balance (overall):',
					explanations: 'Explanations',
				},
				dayPopup: {
					absences: 'Absences',
					vacation: 'Holidays',
					workTimes: 'Recorded times',
					noPresenceEntries: 'No entries',
					subtotal: 'Subtotal',
					rounding: 'Rounding',
					setupTime: 'Setup time',
					sum: 'Sum',
					targetTime: 'Target time',
					balance: 'Balance',
					errorLoading: 'Error loading data.',
				},
			},
		},
		projects: {
			addSubprojectsModal: {
				title: 'Create subprojects',
				description: 'Subprojects help organise episodic productions and versions. Subprojects receive the same colour as their parent project, however colour and details may be changed after creation.',
				subprojectLabel: 'Subproject {num}',
				subprojectPlaceholder: 'e.g. E{num}',
				buttons: {
					addSubproject: 'Add subproject',
					create: 'Create',
					cancel: 'Cancel',
				}
			},
			editNewForm: {
				titleEdit: 'Edit project',
				titleNew: 'New project',
				content: {
					name: 'Name',
					number: 'Project No.',
					timeFrame: 'Project time frame',
					timeFrameDescription: 'Estimated start and end date of the project',
					clients: 'Client(s)',
					byline: 'Byline',
					bylineDescription: 'e.g. contractee, length',
					description: 'Description',
					descriptionDescription: 'A description might be interesting and helpful for co-workers.',
					color: 'Colour',
					status: 'Status',
					activeProject: 'Active project',
					subprojects: 'Subprojects',
					subprojectsDescription: 'A project can be devised into multiple subprojects to account for episodes or different versions.',
					subprojectLabel: 'Subproject {num}',
					subprojectPlaceholder: 'e.g. E{num}',
					buttonAddSubproject: 'Add subproject',
					saveEdit: 'Save changes',
					saveNew: 'Create project',
				}
			},
			projectList: {
				dropdowns: {
					filter: {
						allProjects: 'All projects',
						activeProjects: 'Active projects',
						archivedProjects: 'Archived projects',
					},
					viewMode: {
						tiles: 'Tile view ',
						list: 'List view',
					},
					sorting: {
						name: 'Name',
						nameAscending: 'Name ascending',
						nameDescending: 'Name descending',
						number: 'Project #',
						numberAscending: 'Project # ascending',
						numberDescending: 'Project # descending',
					},
					displayColumns: {
						display: 'Columns',
						displayProjectNumber: 'Project number',
						displayClients: 'Clients',
						displayProjectLength: 'Project length',
					},
					projectSettings: {
						projectCalendar: 'Project calendar',
						editProject: 'Edit project',
						activateProject: 'Activate project',
						archiveProject: 'Archive project',
						duplicateProject: 'Create copy',
						deleteProject: 'Delete project',
					}
				},
				headers: {
					number: 'Number',
					name: 'Name',
					clients: 'Clients',
					projectLength: 'Project length',
					options: 'Options',
				},
				content: {
					tooltipSubprojects: '{num} {{subproject|subprojects}}',
					numBookings: '{num} {{booking|bookings}} {duration|{null: , *: \-}} {duration?:string}',
					zeroDays: '0 days',
					earliestToLatestPeriod: '{date_earliest} to {date_latest}',
				},
				noProjects: {
					noActiveProjects: 'No active projects.',
					noArchivedProjects: 'No archived projects.',
					noProjects: 'No projects.',
					createNewProject: 'Create new project',
				}
			},
		},
		resources: {
			editNewForm: {
				titleEdit: 'Edit resource',
				titleNew: 'New resource',
				content: {
					name: 'Name',
					byline: 'Byline',
					bylineDescription: 'e.g. short description, tech specs',
					groups: 'Groups',
					groupsPlaceholder: '(no group association)',
					groupsNoOptions: 'No group found.',
					groupsNoOptionsCreateNew: 'Create group',
					number: 'Resource number',
					numberDescription: 'e.g. internal resource ID',
					email: 'E-mail address',
					emailDescription: 'if you have an internal e-mail address for this resource, add it here',
					color: 'Colour',
					image: 'Image',
					buttonSelectImage: 'Select image',
					buttonUploadNewImage: 'Upload image',
					buttonDeleteImage: 'Delete image',
					description: 'Description',
					descriptionDescription: 'A description of the room and its specifics might be helpful for co-workers.',
					cost: 'Internal cost',
					costUnit: 'Cost unit',
					carbon: 'Carbon footprint',
					carbonUnit: 'Carbon unit',
					omitFromCollision: 'Service resource',
					omitFromCollisionDescription: 'May be booked multiple times simultaneously',
					omitFromCollisionLabel: 'Hide collision warnings',
					publicHolidayRegion: 'Region',
					publicHolidayRegionDescription: 'The region determines the applicable public holidays.',
					saveEdit: 'Save changes',
					saveNew: 'Create resource',
				}
			}
		},
		shared: {
			activity: {
				activityLabel: {
					tooltip: 'Activity',
				},
			},
			relationSelectionModal: {
				index: {
					title: {
						staff: 'Select staff to add',
						resources: 'Select resources to add',
						suites: 'Select rooms to add',
						groups: 'Select groups to add',
					},
					loading: {
						staff: 'Loading staff...',
						resources: 'Loading resources...',
						suites: 'Loading rooms...',
						groups: 'Loading groups...',
					},
					content: {
						searchPlaceholder: 'Search...',
						noResults: 'No entries found.',
					},
					buttons: {
						cancel: 'Cancel',
						select: 'Select',
					}
				},
			},
			resourceList: {
				index: {
					loadingResources: 'Loading resource list...',
					noResourcesToShow: 'No resources created yet.',
					noResourcesToShowCreateNew: 'Add resource',
					searchResource: 'Search resources...',
					searchResourceClear: 'Clear search',
					dropdowns: {
						filter: {
							filter: 'Filter',
							groups: 'Groups',
							groupsPlaceholder: 'Select...',
						},
						export: {
							export: 'Export',
							exportAsExcel: 'Export as Excel',
							exportAsCsv: 'Export as CSV',
						}
					},
					tableHeaderName: 'Resource',
					tableHeaderStatus: 'Status',
					tableHeaderNumber: 'Number',
					tableHeaderGroups: 'Groups',
					tableHeaderOptions: 'Options',
					optionalSelectAllRows: '<strong class="font-semibold">{numItems}</strong> {{resource|resources}} selected. Select all <strong class="font-semibold">{numTotalItems}</strong> {{resource|resources}}?',
					selectedRows: '<strong class="font-semibold">{numItems}</strong> {{resource|resources}} selected.',
					selectAll: 'Select all',
					deselectAll: 'Deselect all',
					view: 'View',
					edit: 'Edit',
					duplicate: 'Duplicate',
					delete: 'Delete',
				}
			},
			roomList: {
				index: {
					tableHeaderRooms: 'Rooms',
					tableHeaderStatus: 'Status',
					tableHeaderCurrentBooking: 'Current booking',
					tableHeaderEdit: 'Edit',
					view: 'View',
					dropdown: {
						addBooking: 'Add booking',
						suiteCalendar: 'Suite calendar',
						editSuite: 'Edit suite',
						duplicateSuite: 'Duplicate',
						deleteSuite: 'Delete suite',
					},
				}
			},
			searchResult: {
				index: {
					searchPlaceholder: 'Search for bookings or resources...',
					searchLabel: 'Enter search terms',
					noSearchResults: 'No search results found.',
					tabAll: 'All',
					tabSites: 'Sites',
					tabSuites: 'Suites',
					tabProjects: 'Projects',
					tabBookings: 'Bookings',
					tabStaffs: 'Staff',
					tabResources: 'Resources',
					tabGroups: 'Groups',
					tabClients: 'Clients',
				},
				resultList: {
					countResults: '{numResults} of {numTotal} results'
				}
			},
			svelteSelect: {
				generic: {
					selectPlaceholder: 'Please select...',
					loading: 'Loading...',
					noOptions: 'No results.',
					ariaSelected: 'Option {value} selected.',
					ariaListSelected: 'Option {label} focused. There are {count} results available.',
					ariaFocused: 'Select focused, type to refine list, press down to open the menu.',
				},
				resourceCollisionText: 'Collision',
				resourceAbsenceText: 'Absence',
				resourceAbsenceHoliday: 'Holidays',
				resourceAbsenceHalfDayMorning: '(am)',
				resourceAbsenceHalfDayAfternoon: '(pm)',
				bookingModalHeader: {
					staff: 'Staff',
					resources: 'Resources',
				},
				absenceTypeSelection: {
					selectAbsenceType: 'Select absence type...',
					noOptions: '(no absence types created)',
				},
				activitySelection: {
					selectActivity: 'Select activity...',
					noOptions: '(no activities created)',
				},
				roleSelection: {
					selectRole: 'Select role...',
					noOptions: '(no roles created)',
				},
				projectSelection: {
					selectProject: 'Select project...',
					noOptions: '(no projects created)',
				},
				groupSelection: {
					selectGroup: 'Select group...',
					noOptions: '(no groups created)',
					createNew: 'Create new:',
				},
				inventoryItemSelection: {
					selectActivity: 'Select good/service...',
					noOptions: '(no items found)',
				},
				accountNumberSelection:{
					selectAccountNumber: 'Select account number...',
					noOptions: '(no account numbers created)',
				},
				orderSelection: {
					selectOrder: 'Select order...',
					createNew: 'Create new:',
					noOptions: '(no orders found)',
				},
				siteSelection: {
					selectSite: 'Select site...',
					noOptions: '(no sites created)',
				},
				suiteSelection: {
					selectSuite: 'Select room...',
					noOptions: '(no rooms created)',
				},
				staffSelection: {
					selectStaff: 'Select staff...',
					noOptions: '(no staff created)',
				},
				statusSelection: {
					selectStatus: '(Without status)',
					noOptions: 'No booking statuses found.',
				},
				resourceSelection: {
					selectResource: 'Select resource...',
					noOptions: '(no resources created)',
				},
				countrySelection: {
					selectCountry: 'Select country...',
					noOptions: '(no results)',
				},
				countySelection: {
					selectCounty: 'Select county...',
					noOptions: '(no county created)',
				},
				clientSelection: {
					selectClient: 'Select client...',
					noOptions: '(no clients)',
				},
				companySelection: {
					selectCompany: 'Select company...',
					noOptions: '(no companies)',
				},
				costCenterSelection: {
					selectCostCenter: 'Enter...',
					noOptions: '(none found)',
					createNew: 'Use:',
				},
			},
			entitiesSelection: {
				suites: 'Sites & rooms',
				staffs: 'Staff',
				resources: 'Resources',
				groups: 'Groups',
				allSuites: 'All rooms',
				allStaffs: 'All staff members',
				allResources: 'All resources',
				allGroups: 'All groups',
			},
			fileUploadBox: {
				title: 'Files',
				noFiles: 'No files added yet.',
				headerFilename: 'Filename',
				headerDate: 'Date',
				headerOptions: 'Options',
				dateBy: 'Uploaded:{dateTime}<br>by {name}',
				unknownUser: '(unknown user)',
				dropdown: {
					delete: 'Delete file',
				},
				buttons: {
					uploadFiles: 'Upload file(s)',
					dropFiles: 'Upload',
				},
			},
			userSelectionModal: {
				title: 'Select team member',
				content: {
					loading: 'Loading team members...',
					searchPlaceholder: 'Search...',
					noResults: 'No results.',
				},
				buttons: {
					cancel: 'Cancel',
					select: 'Select',
				},
			},
			modal: {
				buttons: {
					inlineModal: 'Move inline',
					popOutModal: 'Pop out',
				},
			},
			pagination: {
				showingResults: 'Showing <span class="font-medium">{from}</span> to <span class="font-medium">{to}</span> of <span class="font-medium">{total}</span> results',
				mobilePrevious: 'Previous',
				mobileNext: 'Next',
				ariaLabelPagination: 'Page navigation',
				ariaLabelPrevious: 'Previous',
				ariaLabelNext: 'Next',
				ariaLabelGoToPage: 'Go to page {page}',
			},
			wysiwyg: {
				buttonDescriptions: {
					bold: 'Bold',
					italic: 'Italic',
					link: 'Insert link',
					ul: 'Bullet list',
					ol: 'Ordered list',
				}
			},
		},
		sites: {
			editNewForm: {
				name: 'Name',
				description: 'Description',
				descriptionDescription: 'A description of the site and its specifics might be helpful for co-workers.',
				addressLine1: 'Address Line 1',
				addressLine1Placeholder: 'Street address, company name, c/o',
				addressLine2: 'Address Line 2',
				addressLine2Placeholder: 'Apartment, suite, unit, building, floor, etc.',
				addressLevel1: 'City',
				addressLevel2: 'State/Province/Region',
				postalCode: 'ZIP/Postal Code',
				country: 'Country',
				countryPlaceholder: 'Please select...',
				publicHolidayRegion: 'Region',
				publicHolidayRegionDescription: 'The region determines the applicable public holidays for the site and its suites.',
				saveEdit: 'Save changes',
				saveNew: 'Create site',
			}
		},
		staffs: {
			editNewModal: {
				title: {
					editStaff: 'Edit staff member',
					newStaff: 'Add staff member',
				},
				tabs: {
					name: {
						title: 'Name',
					},
					contact: {
						title: 'Contact',
					},
					addresses: {
						title: 'Addresses',
					},
					other: {
						title: 'Other fields',
					},
					internal: {
						title: 'Settings',
						headerAttachStaff: 'Attach to team member',
						selectStaff: 'Select team member',
						staffAttachementPersistentTimeTracking: 'The attached team member can no longer be changed because time tracking entries exist.',
						headerInternalDetails: 'Internal details',
						internalStaff: 'Internal staff',
						internalStaffDescription: 'Mark as internal',
						staffNumber: 'Staff number',
						staffTimeTracking: 'Time tracking',
						staffTimeTrackingEnabled: 'Enabled',
						internalCost: 'Internal cost',
						internalCostUnit: 'Cost unit',
						carbon: 'Carbon footprint',
						carbonUnit: 'Carbon unit',
					},
					additional: {
						title: 'Additional info',
					},
				},
				validation: {
					requiredFirstName: 'Please enter a first name.',
					requiredLastName: 'Please enter a last name.',
				},
				buttons: {
					cancel: 'Cancel',
					saveStaff: 'Save',
					addStaff: 'Create',
				}
			},
			groupSelectionModal: {
				title: 'Select groups',
				content: {
					loading: 'Loading groups...',
					searchPlaceholder: 'Search...',
					noResults: 'No results.',
				},
				buttons: {
					cancel: 'Cancel',
					select: 'Select',
				},
			},
			importVcardModal: {
				title: 'Import vCard',
				dragVCardHere: 'Drag your vCards here',
				vCardIdentified: 'vCard identified',
				buttonSelectContact: 'Select contact',
				descriptionUpdateContact: 'Update this staff member\'s contact details by importing a .vcf file.',
				descriptionUpdateContactDetails: 'The file may only contain one contact.',
				descriptionImportContacts: 'Use .vcf files to import.',
				descriptionImportContactsDetails: 'One file may contain multiple contacts.',
				descriptionUploadNow: 'Start the import by clicking <em>Import</em>.',
				buttons: {
					cancel: 'Cancel',
					import: 'Import',
				}
			},
			qrCodeModal: {
				title: 'QR code',
				loading: 'Loading...',
				buttons: {
					close: 'Close',
				}
			},
			workingHoursForm: {
				validFrom: 'Valid from',
				validFromDescription: 'Date from which the scheme applies',
				holidayRegion: 'Region',
				holidayRegionDescription: 'for public holidays',
				weekDays: 'Working days & times',
				weekDaysDescription: 'Times are for display purposes only and have no influence on calculations',
				automaticAssignment: 'Automatic distribution of hours',
				assignTheFollowing: 'Distribute',
				hoursIntoDays: 'weekly hours on to selected days below',
				buttonAssign: 'Distribute',
				weekDaysCalculated: 'Calculated weekly working hours',
				overtimeRule: 'Overtime regulation',
				overtimeRules: {
					all: 'Transfer all overtime',
					none: 'All settled - none carried over',
					compensated: 'Carry over anything above...',
					maxTransfer: 'Maximum hours to carry over',
					maximum: 'Limit maximum possible overtime',
				},
				rounding: 'Rounding of working hours',
				roundingDescription: 'e.g. round off 8:07 to 8:00',
				roundDown: 'Round off',
				roundDownDescription: 'Round down when exceeding the target working time by up to X minutes',
				roundUp: 'Round up',
				roundUpDescription: 'Round up to X minutes less than the target working time',
				minutes: 'mins.',
				setupTimes: 'Setup times',
				setupTimesDescription: 'Adding or subtracting daily working time (e.g. in the event of a delay until check-in)',
				setupTimesNone: 'None',
				setupTimesDeduct: 'Deduct working time',
				setupTimesIncrease: 'Increase working time',
				descriptionFormat: 'Format:',
				descriptionFormatWorkTime: '“<span class="font-mono">7h30m</span>” or “<span class="font-mono">7,5</span>”',
				buttons: {
					save: 'Save',
					cancel: 'Cancel',
				},
			},
		},
		suites: {
			editNewForm: {
				name: 'Name',
				byline: 'Byline',
				bylineDescription: 'e.g. system, tech specs, software',
				site: 'Site',
				sitePlaceholder: 'Please select...',
				roomNumber: 'Room number',
				cost: 'Internal cost',
				costUnit: 'Cost unit',
				carbon: 'Carbon footprint',
				carbonUnit: 'Carbon unit',
				color: 'Colour',
				description: 'Description',
				descriptionDescription: 'A description of the room and its specifics might be helpful for co-workers.',
				saveEdit: 'Save changes',
				saveNew: 'Create room',
			}
		},
		tables: {
			defaults: {
				search: 'Search...',
				searchClear: 'Clear search',
				show: 'Show',
				entries: 'entries',
				filter: 'Filter',
				rowCount: 'Showing {start} to {end} of {total} entries.',
				noRows: 'No results.',
				previous: 'Previous',
				next: 'Next'	
			},
			footerCalculation: {
				display: 'Display',
				menu: {
					sum: 'Sum',
					avg: 'Average',
					min: 'Minimum',
					max: 'Maximum',
					range: 'Range',
					count: 'Count',
					median: 'Median',
				},
				label: {
					sum: 'Sum',
					avg: 'Avg',
					min: 'Min',
					max: 'Max',
					range: 'Range',
					count: 'Count',
					median: 'Median',
				},
			},
			pagination: {
				showingResults: 'Showing <span class="font-medium">{from}</span> to <span class="font-medium">{to}</span> of <span class="font-medium">{total}</span> results',
				mobilePrevious: 'Previous',
				mobileNext: 'Next',
				ariaLabelPagination: 'Page navigation',
				ariaLabelPrevious: 'Previous',
				ariaLabelNext: 'Next',
				ariaLabelGoToPage: 'Go to page {page}',
			},
		},
		teams: {
			administration: {
				editNewSmtpServerForm: {
					content: {
						name: 'Name',
						nameDescription: 'Internal name',
						namePlaceholder: 'e.g. Microsoft 365',
						host: 'SMTP server host name',
						hostPlaceholder: 'e.g. smtp.office365.com',
						port: 'Port',
						encryption: 'Encryption',
						encryptionDescription: 'Activate if the connection is to be made via <code>ssl://</code>. Leave deactivated for (Start)TLS.',
						encryptionValue: 'SSL connection',
						username: 'User name',
						usernameDescription: 'Login name, usually an e-mail address',
						usernamePlaceholder: 'e.g. name@domain.com',
						password: 'Password',
						passwordDescription: 'Password, use an app password for MFA/2FA',
						outboundEmailAddress: 'E-mail address',
						outboundEmailAddressDescription: 'Usually the same address as the user name',
						outboundEmailAddressPlaceholder: 'e.g. name@domain.com',
						fallbackDisabled: 'Deactivate fallback',
						fallbackDisabledDescription: 'If the e-mail dispatch via SMTP fails three times in succession, we will send it via our own mail server instead. This can be deactivated on request.',
						fallbackDisabledDescriptionWarning: 'Deactivating this can lead to e-mail losses, especially during invoicing.',
						fallbackDisabledValue: 'Deactivate fallback',
						debugEnabled: 'Debugging mode',
						debugEnabledDescription: 'For troubleshooting we can log the SMTP interactions',
						debugEnabledValue: 'Enable debugging',
					},
					buttons: {
						save: 'Save',
						create: 'Add',
						cancel: 'Cancel',
					}
				},
				editNewTenantForm: {
					content: {
						connectionName: 'Connection name',
						connectionNameDescription: 'The name of the identity provider. This should be a name that your users recognise, as it is shown on the login.',
						connectionNamePlaceholder: 'e.g. Google',
						idpId: 'IdP Issuer ID',
						idpIdDescription: 'Identity Provider Issuer ID, often a URL',
						idpIdPlaceholder: 'e.g. https://accounts.google.com/o/saml2?xxyyzz',
						idpLoginUrl: 'Login URL (SSO endpoint)',
						idpLoginUrlDescription: 'URL to sign users in',
						idpLoginUrlPlaceholder: 'e.g. https://accounts.google.com/o/saml2/idp?idpid=xxyyzz',
						idpLogoutUrl: 'Logout URL (SLO endpoint)',
						idpLogoutUrlDescription: 'URL to log users out',
						idpLogoutUrlPlaceholder: '(if required/provided)',
						attributeNamespaceGivenName: 'Namespace definition for given names',
						attributeNamespaceGivenNameDescription: 'Namespace definition URL to retrieve the users\' given names',
						attributeNamespaceGivenNamePlaceholder: '(if required)',
						attributeNamespaceSurname: 'Namespace definition for surnames',
						attributeNamespaceSurnameDescription: 'Namespace definition URL to retrieve the users\' surnames',
						attributeNamespaceSurnamePlaceholder: '(if required)',
						idpCertificate: 'IdP X.509 Certificate',
						idpCertificateDescription: 'The authentication certificate issued by your Identity Provider',
						idpCertificatePlaceholder: 'Usually starts with ----BEGIN CERTIFICATE----',
					},
					buttons: {
						save: 'Save settings',
						cancel: 'Cancel',
					},
				},
				tenant: {
					content: {
						idpId: 'IdP Issuer ID',
						idpLoginUrl: 'Login URL (SSO endpoint)',
						idpLogoutUrl: 'Logout URL (SLO endpoint)',
						attributeNamespaceGivenName: 'Namespace for given names',
						attributeNamespaceSurname: 'Namespace for surnames',
						replyUrl: 'Reply URL / Assertion Consumer Service URL (ACS)',
						entityId: 'Identifier (Entity ID)',
					},
					buttons: {
						deactivate: 'Deactivate',
						activate: 'Activate',
						edit: 'Edit settings',
						copyUrl: 'Copy',
						downloadXml: 'Download XML',
					},
				}
			},
			createTeamModal: {
				title: 'Create new team',
				teamOwner: 'Team owner',
				teamName: 'Team name',
				teamNamePlaceholder: 'Company name',
				testData: 'Fill team with test data',
				testDataDescription: 'Creates multiple suites, projects and bookings',
				settings: 'Settings',
				language: 'Team language',
				locale: 'Locale',
				timezone: 'Main time zone',
				alerts: {
					teamCreated: 'The new team <i>{teamName}</i> has been created.'
				},
				buttons: {
					close: 'Close',
					cancel: 'Cancel',
					createTeam: 'Create team',
				}
			},
			joinTeamModal: {
				title: 'Join a team',
				askForInvite: 'Ask a member of an existing team to invite you by adding <span class="bg-gray-100 text-pink-700 px-2 py-0.5 rounded dark:bg-gray-600 dark:text-pink-200">{userEmail}</span> to their team.',
				description: 'If you have a team invite already, enter the invite code here.',
				inviteCode: 'Invite code',
				inviteCodePlaceholder: 'multiple-words-invite-code',
				alerts: {
					invalidCode: 'The invitation code is invalid or tied to a different e-mail address.',
					teamJoined: 'You successfully joined the team.'
				},
				buttons: {
					close: 'Close',
					cancel: 'Cancel',
					joinTeam: 'Join team',
					switchTeam: 'Switch to new team',
				}
			},
			members: {
				editRoleModal: {
					title: 'Manage role',
					selectUserRole: 'Select the desired role for user <span class="font-semibold">{memberName}</span> &lt;{memberEmail}&gt;.',
					selectInviteRole: 'Select the desired role for invitee <span class="font-semibold">{inviteeEmail}</span>.',
					buttons: {
						cancel: 'Cancel',
						save: 'Save',
					}
				},
				inviteMemberModal: {
					title: 'Invite new team members',
					description: 'Add a new team member to your team, allowing them to collaborate with you. They will receive an invitation by email.',
					email: 'Email address',
					emailPlaceholder: 'name@domain.com',
					role: 'Role',
					dropFiles: 'Drop files to attach, or <span class="text-blue-600 underline">browse</span>',
					buttons: {
						cancel: 'Cancel',
						inviteMembers: 'Invite',
					}
				},
				listRoles: {
					title: 'Team roles',
					roleName: 'Role name',
					permissions: 'Permissions',
					options: 'Options',
					defaultTooltip: 'Default role',
					dropdown: {
						editRole: 'Edit role',
						setDefault: 'Set as default',
						delete: 'Delete',
					},
					buttons: {
						add: 'Add role',
					}
				},
			},
			settings: {
				absenceTypes: {
					absenceType: {
						active: 'Currently active',
						inactive: 'Currently inactive',
						deletionProhibited: 'Deletion prohibited, as the absence type has been used already.',
						activate: 'Activate',
						deactivate: 'Deactivate',
					},
					editNewAbsenceTypeModal: {
						name: 'Name',
						namePlaceholder: 'e.g. Sabbatical',
						available: 'Available',
						availableLabel: 'Person is available/bookable',
						availableDescription: 'e.g. for home-office, make the person still available for bookings and assume working time still applies',
						buttons: {
							save: 'Save',
							cancel: 'Cancel',
						},
					},
					iconSelection: {
						icon: 'Icon',
						noIcon: 'No icon',
					},
					index: {
						title: 'Absence types',
						shortDescription: 'Absence types that are used for time tracking.',
						addAbsenceType: 'Add absence type',
					},
				},
				activities: {
					activity: {
						active: 'Currently active',
						inactive: 'Currently inactive',
						deletionProhibited: 'Deletion prohibited, as the activity has been used in records already.',
						activate: 'Activate',
						deactivate: 'Deactivate',
					},
					editNewActivityModal: {
						name: 'Name',
						namePlaceholder: 'e.g. Editing or Conforming',
						buttons: {
							save: 'Save',
							cancel: 'Cancel',
						},
					},
					index: {
						title: 'Activities',
						shortDescription: 'Activities are used for time tracking and bookings.',
						addActivity: 'Add activity',
					},
				},
				bookingStatus: {
					title: 'Booking statuses',
					shortDescription: 'Set up different statuses for bookings to keep track of your planning. You may, for example, keep track of confirmed bookings or bookings that may still need a staff member.',
					listOfStatuses: 'Created statuses',
					statusName: 'Name',
					statusNamePlaceholder: 'e.g. confirmed',
					description: 'Description',
					descriptionPlaceholder: '(optional)',
					color: 'Colour',
					icon: 'Icon',
					active: 'Enabled',
					yes: 'Yes',
					no: 'No',
					buttons: {
						noIcon: 'No icon',
						save: 'Save status',
						cancel: 'Cancel',
						newStatus: 'New status',
					},
					default: {
						statusSelection: 'Default booking status',
						statusPlaceholder: '(Without status)',
						statusNoOptions: 'No booking statuses found.',
						buttons: {
							save: 'Save',
						}
					},
				},
				editNewHolidayListForm: {
					year: 'Year',
					import: 'Import holidays',
					importRegion: 'Select region...',
					importButton: 'Import',
					date: 'Date',
					description: 'Description/Name',
					buttons: {
						addEntry: 'Add entry',
						save: 'Save',
						close: 'Close',
					}
				},
				editNewRegionModal: {
					titleAdd: 'Create new region',
					titleEdit: 'Edit region',
					content: {
						name: 'Name',
						namePlaceholder: 'e.g. England',
						default: 'Default region',
						defaultLabel: 'Set as default',
						defaultDescription: 'Applies to new resources',
					},
					buttons: {
						save: 'Save',
						add: 'Create',
						cancel: 'Cancel',
					}
				},
				companies: {
					editNewCompanyForm: {
						name: 'Name',
						namePlaceholder: 'Company Ltd.',
						description: 'Internal description',
						descriptionDescription: 'For internal use, e.g. as guidance for co-workers.',
						addressLine1: 'Address Line 1',
						addressLine1Placeholder: 'Street address, c/o',
						addressLine2: 'Address Line 2',
						addressLine2Placeholder: 'Apartment, suite, unit, building, floor, etc.',
						addressLevel1: 'City',
						addressLevel2: 'State/Province/Region',
						postalCode: 'ZIP/Postal Code',
						country: 'Country',
						vatId: 'VAT ID',
						vatIdPlaceholder: 'e.g. DE123456789',
						taxId: 'Tax ID',
						districtCourt: 'District court',
						districtCourtPlaceholder: 'e.g. Hamburg',
						registrationNumber: 'Company number',
						registrationNumberPlaceholder: 'e.g. HRB 123456',
						managingDirector: 'Managing Director(s)',
						iban: 'IBAN',
						ibanPlaceholder: 'e.g. DE12345678901234567890',
						bic: 'BIC / SWIFT',
						bicPlaceholder: 'e.g. ABCDDEFFXXX',
						vatCalculation: 'VAT calculation',
						defaultVatCalculation: 'Default',
						defaultVatCalculationDescription: 'VAT added',
						smallSettlement: 'Small settlement',
						smallSettlementDescription: 'No VAT added',
						taxRate: 'VAT rate',
						noTaxRate: 'No VAT',
						taxRateDescription: 'Default for invoices',
						currency: 'Currency',
						paymentMethod: 'Payment method',
						paymentMethodDescription: 'Default for invoices',
						image: 'Image / logo',
						imageDescription: 'Shown on invoices and other documents',
						buttonDeleteImage: 'Delete image',
						buttonSelectImage: 'Select image',
						primary: 'Primary company',
						primaryLabel: 'Mark as primary and default company',
						smtpServer: 'E-mail dispatch',
						smtpServerDescription: 'SMTP server & e-mail address for sending invoices and other documents',
						smtpServerNone: 'Sending via freispace mail server',
					},
				},
				genericTableEdit: {
					index: {
						create: 'Add new',
						table: {
							options: 'Options',
							filter: 'Filter',
							noRows: 'No results.',
							edit: 'Edit',
							delete: 'Delete',
						},
						modal: {
							titleNew: 'Add new',
							titleEdit: 'Edit',
							cancel: 'Cancel',
							save: 'Save',
						},
					}
				},
				numberSequences: {
					editNumberModal: {
						title: 'Edit {type} number sequence',
						automaticNumbering: 'Automatic numbering',
						activeToggle: 'Enabled',
						format: 'Format',
						nextNumeral: 'Next number',
						preview: 'Preview',
						availableVariables: 'The following variables are available:',
						variables: {
							required: 'mandatory',
							number: 'Next number',
							yyyy: 'Current year, long',
							yy: 'Current year, short',
							mm: 'Current month, double digits',
							m: 'Current month',
							dd: 'Current day, double digits',
							d: 'Current day',
						},
						buttons: {
							save: 'Save',
							cancel: 'Cancel',
						},
					},
					index: {
						title: 'Number sequences',
						description: 'Set up automatic number sequences for resources and projects as well as documents such as invoices.',
						labels: {
							type: 'Type',
							active: 'Enabled',
							format: 'Format',
							nextNumeral: 'Next number',
							nextNumber: 'Next sequence',
							options: 'Options',
						},
						activeRequired: 'Active (required)',
						active: 'Active',
						models: {
							group: 'Group',
							project: 'Project',
							staff: 'Staff',
							resource: 'Resource',
							client: 'Client',
							inventoryItem: 'Goods/Service',
							order: 'Order',
							invoice: 'Invoice',
							orderConfirmation: 'Order confirmation',
							offer: 'Quote',
							creditNote: 'Credit note',
							deliveryNote: 'Delivery note',
						}
					},
					numberSequenceSetting: {
						title: 'Number sequences',
						description: 'Settings for automatic numbering.',
						activeTag: 'Active',
						inactiveTag: 'Inactive',
						activeText: 'Numbers are automatically generated and cannot be changed manually.',
						activeTextRequired: 'Numbers are automatically generated and cannot be changed manually. The use of number sequences is mandatory.',
						inactiveText: 'Numbers are not generated automatically at the moment. Automatic numbering may be enabled and the number sequences adjusted.',
					},
				},
				templates: {
					editNewTemplateForm: {
						content: {
							name: 'Name',
							nameDescription: 'Name for internal use',
							namePlaceholder: 'e.g. Default',
							moduleEntities: 'Use for',
							entities: {
								invoicing: {
									creditNote: 'Credit note',
									deliveryNote: 'Delivery note',
									invoice: 'Invoice',
									offer: 'Quote',
									order: 'Order',
									orderConfirmation: 'Order confirmation',
									reminder: 'Reminder',
								}
							},
							image: 'Image',
							buttonDeleteImage: 'Delete image',
							buttonSelectImage: 'Select image',
							html: 'HTML code',
							htmlDescription: 'Template data as HTML code to be inserted within <code class="text-pink-500 dark:text-pink-300">&lt;body&gt;</code> tags',
							stylesheet: 'CSS code',
							stylesheetDescription: 'Optional style sheets, inserted in <code class="text-pink-500 dark:text-pink-300">&lt;header&gt;</code>',
							documentationLinkText: 'Documentation',
							status: 'Status',
							statusEnabled: 'Enabled',
						},
						buttons: {
							save: 'Save',
							cancel: 'Cancel',
						},
					},
					templateList: {
						noTemplates: 'No templates created.',
						modules: {
							booking: 'Booking documents',
							invoicing: 'Invoicing',
						},
						entities: {
							invoicing: {
								creditNote: 'Credit note',
								deliveryNote: 'Delivery note',
								invoice: 'Invoice',
								offer: 'Quote',
								order: 'Order',
								orderConfirmation: 'Order confirmation',
								reminder: 'Reminder',
							}
						},
						tableColumns: {
							name: 'Name',
							module: 'Module',
							status: 'Status',
							options: 'Options',
						},
						statusActive: 'Active',
						statusInactive: 'Inactive',
						dropdown: {
							edit: 'Edit',
							delete: 'Delete',
						},
						buttons: {
							create: 'Create template',
						},
					},
				},
				region: {
					numHolidayDays: '({num} {{holiday|holidays}})',
					buttons: {
						addYear: 'Add year'
					},
				},
			},
			integrations: {
				accessTokens: {
					accessTokenList: {
						noApiKeys: 'No API keys created yet.',
						expiresNever: '(never)',
						neverUsed: 'Not used yet.',
						tableColumns: {
							name: 'Name',
							token: 'Token',
							expires: 'Expires',
							lastUsed: 'Last used',
							created: 'Created',
							options: 'Options',
						},
						buttons: {
							viewPermissions: 'View permissions',
							delete: 'Delete',
						},
						permissionModal: {
							modalTitle: 'Permissions',
							description: 'Permissions for the API key <b class="font-semibold">{name}</b> <span class="text-xs font-gray-500">(<span class="font-mono">{token}</span>)</span>:',
							permissionScopes: {
								none: 'None',
								list: 'List',
								view: 'View',
								create: 'Create',
								update: 'Update',
								delete: 'Delete',
							},
							permissionModels: {
								bookings: 'Bookings',
								projects: 'Projects',
								sites: 'Sites',
								suites: 'Rooms',
								staffs: 'Staff',
								resources: 'Resources',
								groups: 'Groups',
								activities: 'Activities',
								absenceTypes: 'Absence types',
								bookingStatuses: 'Booking statuses',
								timeTracking: 'Time tracking',
								clients: 'Clients',
								inventoryItems: 'Goods & Services',
								invoicing: 'Billing',
								webhooks: 'Webhooks',
								storages: 'Storages',
								unknown: 'Unknown',
							},
							buttonClose: 'Close',
						},
					},
					editNewAccessTokenForm: {
						content: {
							name: 'Name',
							namePlaceholder: 'Descriptive name, e.g. service name',
							expiresAt: 'Expires',
							expiresAtDescription: 'The API key will be valid until the selected date. Leave empty for no expiration date.',
							permissions: 'Permissions',
							permissionsDescription: 'For security reasons, limit your API key\'s permissions to the required scope.',
							permissionScopes: {
								none: 'None',
								list: 'List',
								view: 'View',
								create: 'Create',
								update: 'Update',
								delete: 'Delete',
							},
							permissionModels: {
								bookings: 'Bookings',
								projects: 'Projects',
								sites: 'Sites',
								suites: 'Rooms',
								staffs: 'Staff',
								resources: 'Resources',
								groups: 'Groups',
								activities: 'Activities',
								absenceTypes: 'Absence types',
								bookingStatuses: 'Booking statuses',
								timeTracking: 'Time tracking',
								clients: 'Clients',
								inventoryItems: 'Goods & Services',
								invoicing: 'Billing',
								webhooks: 'Webhooks',
								storages: 'Storages',
							},
						},
						buttons: {
							create: 'Create API key',
							save: 'Save changes',
							cancel: 'Cancel',
						},
					},
				},
				screens: {
					editNewScreenForm: {
						content: {
							name: 'Name',
							nameDescription: 'Internal, descriptive name',
							namePlaceholder: 'e.g. 1st floor display',
							title: 'Title',
							titleDescription: 'Used on the screen, usually team or company name',
							titlePlaceholder: 'e.g. Company name',
							timeFrame: 'Time frame to display',
							timeFrameCurrent: 'Current bookings',
							timeFrameDay: 'Entire day',
							timeFrameWeek: 'Week',
							resources: 'Visible resources',
							refreshRate: 'Refresh rate',
							refreshRateDescription: 'How often the screen should refresh its content, e.g. every 5 minutes',
							refreshRateMinutes: 'min.',
							automaticScrolling: 'Automatic scrolling',
							automaticScrollingDescription: 'Automatically scroll through the content of the screen. The speed and delays can be adjusted.',
							automaticScrollingEnabled: 'Active',
							automaticScrollingSettings: 'Settings for automatic scrolling',
							automaticScrollingSpeed: 'Speeds',
							automaticScrollingSpeedDown: 'Down',
							automaticScrollingSpeedUp: 'Up',
							automaticScrollingDelays: 'Delays/timeouts',
							automaticScrollingDelayDown: 'Top/beginning',
							automaticScrollingDelayDownUnit: 'sec.',
							automaticScrollingDelayUp: 'Bottom/end',
							automaticScrollingDelayUpUnit: 'sec.',
							displaySettings: 'Detailed display settings',
							language: 'Display language',
							timezone: 'Time zone',
							image: 'Image / logo',
							buttonDeleteImage: 'Delete image',
							buttonSelectImage: 'Select image',
							colorBackground: 'Background colour',
							colorText: 'Text colour',
							colorMessageBackground: 'Background colour of message box',
							stylesheet: 'CSS code',
							stylesheetDescription: 'Override default styling with custom CSS code.',
							status: 'Status',
							statusEnabled: 'Active',
						},
						buttons: {
							save: 'Save screen',
							cancel: 'Cancel',
						},
					},
					screenList: {
						noScreens: 'No screens created yet.',
						tagActive: 'Active',
						tagDisabled: 'Disabled',	
						customTemplate: 'This screen uses a custom template',
						customTemplateContactSupport: 'Please contact freispace for changes to the design',
						timeFrames: {
							current: 'Current',
							day: 'Day',
							week: 'Week',
						},
						tableColumns: {
							name: 'Name',
							url: 'URL',
							timeFrame: 'Time frame',
							autoScroll: 'Scroll',
							message: 'Message',
							status: 'Status',
							options: 'Options',
						},
						dropdown: {
							editMessage: 'Edit message',
							edit: 'Edit',
							activate: 'Activate',
							deactivate: 'Disable',
							delete: 'Delete',
						},
						buttons: {
							view: 'Show details',
							preview: 'Preview',
						},
					},
					screenMessageModal: {
						title: 'Edit message',
						content: {
							message: 'Message',
							messageDescription: 'Leave empty to remove message',
						},
						buttons: {
							cancel: 'Cancel',
							save: 'Save',
						},
					},
				},
				webhooks:{
					editNewWebhookForm: {
						content: {
							url: 'Endpoint URL',
							urlPlaceholder: 'https://',
							description: 'Description',
							descriptionPlaceholder: 'An optional description what the webhook is used for.',
							status: 'Status',
							statusEnabled: 'Enabled',
							triggers: 'Trigger events',
							triggersDescription: 'Select the events that should be sent to the endpoint.',
							bookings: 'Bookings',
							bookingsTriggerDescription: {
								created: 'Occurs whenever a new booking is created.',
								updated: 'Occurs whenever any booking\'s information is updated.',
								deleted: 'Occurs whenever a booking is deleted.',
							},
							projects: 'Projects',
							projectsTriggerDescription: {
								created: 'Occurs whenever a new project is created.',
								updated: 'Occurs whenever a project\'s information has changed.',
								archived: 'Occurs whenever a project is archived.',
								unarchived: 'Occurs whenever a project is re-activated.',
								deleted: 'Occurs whenever a project is deleted.',
							},
						},
						buttons: {
							save: 'Save webhook',
							cancel: 'Cancel',
						},
					},
					viewWebhook: {
						content: {
							status: 'Status',
							statusActive: 'Active',
							statusDisabled: 'Disabled',
							watching: 'Watching',
							watchingNumEvents: '{num} trigger {{event|events}}',
							secret: 'Secret',
							noLogs: 'This webhook endpoint has not had any activity in the last 30 days.',
						},
						buttons: {
							close: 'Close',
							revealSecret: 'Display secret',
							hideSecret: 'Hide secret',
							regenerateSecret: 'Regenerate secret',
						},
					},
					viewWebhookLog: {
						content: {
							sendTime: 'Sent:',
							httpStatus: 'HTTP status:',
							attempt: 'Attempt:',
						},
					},
				}
			},
		},
		textTemplates: {
			general: {
				type: {
					document: 'Document',
					email: 'Email',
					letter: 'Letter',
				},
				model: {
					all: 'All',
					invoice: 'Invoice',
					partialInvoice: 'Progress invoice',
					finalInvoice: 'Final invoice',
					offer: 'Quote',
					reminder: 'Reminder',
					orderConfirmation: 'Order confirmation',
					creditNote: 'Credit note',
					deliveryNote: 'Delivery note',
					paymentConfirmation: 'Payment confirmation',
				},
				position: {
					header: 'Header',
					footer: 'Footer',
					subject: 'Subject',
					body: 'Body',
					signature: 'Signature',
				},
			},
			textTemplateEditNewModal: {
				titleNew: 'Create new template',
				titleEdit: 'Edit template',
				name: 'Name',
				type: 'Type',
				model: 'Used for',
				position: 'Position',
				language: 'Language',
				text: 'Template text',
				shared: 'Visible to all team members',
				default: 'Set as default',
				buttons: {
					save: 'Save',
					cancel: 'Cancel',
				},
			},
			textTemplateSetting: {
				title: 'Text templates',
				description: 'Create and manage text templates to be used in documents such as invoices.',
				noTemplates: 'No text templates.',
				table: {
					name: 'Name',
					language: 'Language',
					type: 'Type',
					preview: 'Preview',
					shared: 'Shared',
					default: 'Default',
					options: 'Options',
					filter: 'Filter...',
					filterName: 'Filter by name',
					filterLanguage: 'Filter by language',
					filterShared: 'Filter by shared',
					filterDefault: 'Filter by default',
					filterTrue: 'Yes',
					filterFalse: 'No',
					sharedTooltip: 'Shared team-wide',
					edit: 'Edit',
					delete: 'Delete',
				},
				buttons: {
					addTemplate: 'Create',
				},
			},
		},
		timezones: {
			formTimezoneTooltip: {
				timeZone: 'Time Zone',
				timeZoneDifferentFromSelection: 'Time zone differs from the selected one.',
				timeZoneDifferentFromUser: 'Time zone differs from your own.',
			},
		},
		toDoList: {
			toDoList: {
				title: 'To-dos',
				titlePersonal: 'Personal to-dos',
				titleUserLinked: 'Assigned to-dos',
				loading: 'Loading...',
				noItems: 'No tasks yet.',
				noSearchResults: 'No search results.',
				buttons: {
					add: 'Add task',
				},
				dueDateModal: {
					title: 'Set due date',
					labelDueDate: 'Due date',
					labelDueDateDescription: 'for <span class="font-medium">{taskName}</span>',
					save: 'Set date',
					cancel: 'Cancel',
				},
				dropdowns: {
					showCompleted: 'Show completed',
					subtasks: {
						title: 'Subtasks',
						collapseAll: 'Collapse all',
						expandAll: 'Expand all',
					},
					subtaskCounter: {
						title: 'Subtask counter',
						number: 'Numeric',
						percentage: 'Percentage',
					},
					projects: {
						project: 'Project',
						bookings: 'Bookings',
					},
				},
			},
			toDoTask: {
				dropdown: {
					addTaskBelow: 'Add task below',
					addSubtask: 'Add subtask',
					indent: 'Indent',
					unIndent: 'Unindent',
					addDescription: 'Add description',
					setDueDate: 'Set due date...',
					changePriority: 'Set priority',
					priorityLow: 'low',
					priorityMedium: 'medium',
					priorityHigh: 'high',
					priorityRemove: 'remove',
					assignStaff: 'Assign to...',
					tagInventoryItem: 'Tag Good/Service...',
					duplicate: 'Duplicate',
					copy: 'Copy',
					paste: 'Paste',
					deleteTask: 'Delete',
				},
				textPlaceholder: 'Enter new task...',
				descriptionPlaceholder: 'Enter description...',
				markAsDone: 'Mark as done',
				toggleSubtasks: 'Toggle subtasks',
			},
		},
		vCards: {
			formAdditional: {
				headerComment: 'Comment',
				comment: 'Comment',
				headerFields: 'Fields',
				type: 'Type',
				content: 'Content',
				types: {
					anniversary: 'Anniversary',
					bday: 'Birthday',
					gender: 'Gender',
					lang: 'Language',
					geo: 'Geo-coordinates',
					tz: 'Timezone',
					birthplace: 'Birthplace',
					expertise: 'Expertise',
					hobby: 'Hobby',
					interest: 'Interest',
					url: 'URL',
				},
			},
			formAddresses: {
				headerAddress: 'Address',
				type: 'Type',
				poBox: 'PO box',
				addressLine1: 'Address Line 1',
				addressLine1Placeholder: 'Street address, company name, c/o',
				addressLine2: 'Address Line 2',
				addressLine2Placeholder: 'Apartment, suite, unit, building, floor, etc.',
				addressLevel1: 'City',
				addressLevel2: 'State/Province/Region',
				postalCode: 'ZIP/Postal Code',
				country: 'Country',
				types: {
					work: 'Work',
					home: 'Private',
					intl: 'International',
					dom: 'Domestic',
					postal: 'Postal',
					parcel: 'Parcel',
					other: 'Other',
				},
			},
			formCompany: {
				headerCompanyDetails: 'Company details',
				companyName: 'Company name',
				companyNamePlaceholder: 'e.g. ACME Ltd.',
				workTitle: 'Work title',
				workTitlePlaceholder: 'e.g. Chief Editor',
			},
			formContactDetails: {
				headerEmailAddresses: 'E-mail addresses',
				type: 'Type',
				emailAddress: 'E-mail address',
				emailAddressPlaceholder: 'name@domain.com',
				headerPhoneNumbers: 'Phone numbers',
				number: 'Number',
				numberPlaceholder: '+44 123 456 789',
				types: {
					work: 'Work',
					home: 'Private',
					cell: 'Mobile',
					fax: 'Fax',
					pager: 'Pager',
					voice: 'Voice',
					pref: 'Preferred',
					car: 'Car',
					other: 'Other',
				},
			},
			formName: {
				headerDetailedName: 'Detailed name',
				prefix: 'Prefix',
				firstName: 'First name',
				middleName: 'Middle name',
				lastName: 'Last name',
				suffix: 'Suffix',
				nickname: 'Nickname',
			},
		},
		workflows: {
			settingsItems: {
				notificationRecipientSelection: {
					typeDepartment: 'All members of a department',
					typeRole: 'All people with a specific role',
					typeStaff: 'Selected people',
				},
				workflowRecipientSelection: {
					typeDepartment: 'Department',
					typeRole: 'Role',
					typeStaff: 'Selected people',
				},
				workflowSequence: {
					requiredClearance: 'Clearance required from:',
					requiredClearanceAll: 'All people',
					requiredClearanceAny: 'Any person',
					requiredClearanceSelected: 'Select recipient for clearance',
					recipientType: 'From the following group:',
					addSequence: 'Add sequence step',
					addNotification: 'Add notification',
					notification: 'Notification after clearance',
				},
			},
			departmentItem: {
				default: 'Default',
				buttons: {
					editWorkflows: 'Workflow settings',
					edit: 'Edit',
					duplicate: 'Duplicate',
					delete: 'Delete',
				},
			},
			editNewDepartmentModal: {
				title: {
					editDepartment: 'Edit department',
					newDepartment: 'Create department',
				},
				content: {
					name: 'Name',
					namePlaceholder: 'e.g. Marketing',
					number: 'Number',
					numberPlaceholder: 'e.g. DEP-001',
					description: 'Description',
					descriptionPlaceholder: 'Short internal description',
					parent: 'Parent department',
					parentPlaceholder: 'No parent',
					default: 'Default',
					defaultLabel: 'Set as default',
					defaultDescription: 'New internal staff will automatically be assigned to this department',
				},
				buttons: {
					cancel: 'Cancel',
					saveDepartment: 'Save',
					addDepartment: 'Create',
				}
			},
			editNewDepartmentRoleModal: {
				title: {
					editDepartmentRole: 'Edit role',
					newDepartmentRole: 'Create role',
				},
				content: {
					name: 'Name',
					namePlaceholder: 'e.g. Manager',
					description: 'Description',
					descriptionPlaceholder: 'Short internal description',
					parent: 'Parent role',
					parentPlaceholder: 'No parent',
				},
				buttons: {
					cancel: 'Abbrechen',
					saveDepartment: 'Speichern',
					addDepartment: 'Anlegen',
				}
			},
			editWorkflowSettingsModal: {
				title: 'Workflow settings',
				content: {
					vacationWorkflow: 'Holiday workflow',
					presenceWorkflow: 'Time entry workflow',
					absenceWorkflow: 'Absence workflow',
					vacationWorkflowRequest: 'Holiday request',
					vacationWorkflowDescription: 'Workflow for requesting holidays',
					vacationWorkflowCancellation: 'Holiday cancellation',
					vacationWorkflowCancellationDescription: 'Workflow for cancelling holiday days',
					presenceWorkflowRequest: 'Time entry request',
					presenceWorkflowDescription: 'Workflow for the approval of a time tracking entry',
					settings: 'Settings',
					maximumDuration: 'Timeout',
					maximumDurationDescription: 'Workflow will automatically cancel any request after period of inactivity',
					maximumDurationDays: 'days',
				},
				buttons: {
					cancel: 'Cancel',
					save: 'Save',
				}
			},
		},
		wysiwyg: {
			pasteVariableButton: {
				insert: 'Insert',
				replace: 'Replace content',
			},
			wysiwygInvoices: {
				buttonDescriptions: {
					underline: 'Underline',
					strike: 'Strikethrough',
					variables: 'Variables',
					variablesTooltip: 'Insert variables',
					snippets: 'Snippets',
					snippetsTooltip: 'Insert text snippet',
				},
				modal: {
					snippetsTitle: 'Insert text snippet',
					sharedTooltip: 'Shared snippet',
					variablesTitle: 'Insert variable',
					tabDates: 'Date & time',
					tabRecipient: 'Recipient',
					tabOffer: 'Quote',
					tabInvoice: 'Invoice',
					tabOrder: 'Order',
					addTemplate: 'Create template',
					edit: 'Edit',
					delete: 'Delete',
					additionalSnippets: 'Additional text snippets',
				},
				variables: {
					day: 'Day',
					weekday: 'Weekday',
					date: 'Date',
					weekNumber: 'Calendar week',
					month: 'Month (full name)',
					monthShort: 'Month (abbreviated)',
					monthNumber: 'Month (numeric)',
					monthDays: 'Number of days in the current month',
					year: 'Year',
					yearShort: 'Year (2-digit)',
					lastQuarter: 'Last quarter',
					quarter: 'Current quarter',
					nextQuarter: 'Next quarter',
					yesterday: 'Yesterday\'s date',
					yesterdayWeekday: 'Yesterday\'s weekday',
					lastMonth: 'Last month',
					lastMonthShort: 'Last month (abbreviated)',
					lastMonthNumber: 'Last month (numeric)',
					nextMonth: 'Next month',
					nextMonthShort: 'Next month (abbreviated)',
					nextMonthNumber: 'Next month (numeric)',
					lastYear: 'Last year',
					lastYearShort: 'Last year (2-digit)',
					nextYear: 'Next year',
					nextYearShort: 'Next year (2-digit)',
					companyName: 'Company name',
					clientNumber: 'Client number',
					clientName: 'Client full name',
					clientFirstName: 'Client first name',
					clientLastName: 'Client last name',
					offerNumber: 'Quote number',
					offerDate: 'Quote date',
					offerValidDate: 'Valid until date',
					offerServiceDate: 'Service date',
					offerServicePeriodEndDate: 'Service period end date',
					offerTotalNet: 'Quote total (net)',
					offerTotalGross: 'Quote total (gross)',
					offerTotalDiscounts: 'Total discounts',
					offerTotalSurcharges: 'Total surcharges',
					invoiceNumber: 'Invoice number',
					invoiceDate: 'Invoice date',
					invoiceDueDate: 'Due date',
					invoiceServiceDate: 'Service date',
					invoiceServicePeriodEndDate: 'Service period end date',
					invoiceTotalNet: 'Invoice total (net)',
					invoiceTotalGross: 'Invoice total (gross)',
					invoiceTotalDiscounts: 'Total discounts',
					invoiceTotalSurcharges: 'Total surcharges',
					contactPerson: 'Contact person',
					offerNumberInvoice: 'Quote number (if linked)',
					offerDateInvoice: 'Quote date (if linked)',
					orderNumber: 'Order number',
					projectNumber: 'Project number',
					projectName: 'Project name',
				},
				buttons: {
					close: 'Close',
				}
			},
		},
		accounting: {
			modals: {
				editNewModal: {
					title: {
						editAccountNumber: 'Edit account number',
						newAccountNumber: 'Create account number',
					},
					content: {
						number: 'Account number',
						numberPlaceholder: 'e.g. PO-001',
						budget: 'Budget',
						budgetPlaceholder: 'e.g. 500.00',
						accountableType: 'Resource type',
						accountableTypeList: {
							staff: 'Staff',
							suite: 'Room',
							group: 'Group',
							resource: 'Resource',
						},
						accountableTypePlaceholder: 'Please select...',
						accountable: 'Resource',
						accountablePlaceholder: 'Please select...',
					},
					buttons: {
						cancel: 'Cancel',
						saveAccountNumber: 'Save',
						addAccountNumber: 'Create',
					}
				},
			},
			accountNumbersList: {
				loadingAccountNumbers: 'Loading account numbers...',
				noAccountNumbers: 'No account numbers found.',
				searchAccountNumbers: 'Search...',
				searchAccountNumbersClear: 'Clear search',
				optionalSelectAllRows: '<strong class="font-semibold">{numItems}</strong> {{row|rows}} selected. Select all <strong class="font-semibold">{numTotalItems}</strong> {{row|rows}}?',
				selectAll: 'Select all',
				deselectAll: 'Deselect all',
				tableHeaderOptions: 'Options',
				dropdowns: {
					filter: {
						filter: 'Filter',
						accountableType:{
							label: 'Resource type',
							all: 'All',
							staff: 'Staff',
							suites: 'Rooms',
							groups: 'Groups',
							resources: 'Resources',
						},
					}
				},
				tableHeaders:{
					number: 'Account number',
					budget: 'Budget',
					resource: 'Resource',
				},
				buttons: {
					add: 'Add account number',
					edit: 'Edit',
					delete: 'Delete',
				},
			}
		},
		roles: {
			modals: {
				editNewModal: {
					header: {
						createRole: 'Create role',
						editRole: 'Edit role',
						changeUserPermissions: 'Edit user permissions',
						templateDropdown: {
							title: 'Use template',
							templateFreelancer: 'Freelancer with account',
							templatePlanners: 'Planning staff',
						},
					},
					buttons:{
						cancel: 'Cancel',
						save: 'Save',
					},
					content: {
						name: 'Name',
						namePlaceholder: 'e.g. Manager',
						color: 'Colour',
						colors: {
							blue: 'blue',
							indigo: 'indigo',
							purple: 'purple',
							pink: 'pink',
							red: 'red',
							yellow: 'yellow',
							green: 'green',
							gray: 'gray',
						},
						warnings: {
							templateFreelancer: 'Template selected.<br>Users with this template will have to be assigned to a person in order for them to see their linked bookings.',
							templatePlanners: 'Template selected.<br><span class="font-bold">Important:</span> Limit access to specific roles for invites. If not limited, users may be able to gain higher access rights!',
							outdatedRole: 'This role is outdated and not compatible with the current version. Please create a new role or update this one.',
						},
						selectAll: 'Select all',
						deSelectAll: 'Deselect all',
						headers : {
							permissions: 'Permissions',
							resource: 'Resource',
						},
						permissions: {
							bookings: {
								title: 'Bookings',
								description: 'If you limit the projects or resources available to this role, the list of bookings will also be restricted.',
								permissions: {
									viewAny: 'View bookings',
									viewLinkedOnly: '<span class="text-red-500 dark:text-red-400">Restrict</span> to linked bookings only<br><span class="font-normal">(person was booked)</span>',
									view: 'View details (open modal)',
									exportICAL: 'Export calendar feed',
									addStatus: 'Add booking status',
									deleteStatus: 'Delete booking status',
									updateStatus: 'Update booking status',
									updateOwn: 'Edit own only',
									update: 'Edit all',
									create: 'Create',
									delete: 'Delete all',
									deleteOwn: 'Delete own only',
									manageGlobalFields: 'Edit global fields',
								},
								warnings:{
									createBookingWithNoViewToAnyResourcesWarning: 'Creating bookings will not be possible without access to any resources (e.g. rooms, staff, resources).',
								},
							},
							projects: {
								title: 'Projects',
								select: {
									label: 'Individual project permissions'
								},
								permissions: {
									all: 'All & future projects',
									own: 'Own projects',
									viewAny: 'Access project list',
									manageGlobalFields: 'Edit global fields',
									create: 'Create new projects',
									view: 'View',
									update: 'Edit',
									archive: 'Archive',
									unarchive: 'Re-activate',
									delete: 'Delete',
									viewCostReport: 'Access<br>cost report',
									viewCostReportWarning: 'Users will be able to see all booked resource names and prices.',
									viewCarbonReport: 'CO<sub>2</sub>e<br>report',
									viewGantt: 'View project planning',
									UpdateGantt: 'Edit project planning',
								},
								selectedItem: {
									applySubprojects: 'Apply to subprojects',
								},
							},
							accountNumbers: {
								title: 'Account numbers',
								permissions: {
									viewAny: 'Access account numbers list',
									view: 'Access account number',
									create: 'Create',
									update: 'Edit all',
									updateOwn: 'Edit own only',
									delete: 'Delete all',
									deleteOwn: 'Delete own only',
								},
							},
							sites: {
								title: 'Sites',
								select: {
									label: 'Individual site permissions'
								},
								permissions: {
									all: 'All & future sites',
									own: 'Own sites',
									viewAny: 'Access list',
									create: 'Create new sites',
									view: 'View',
									update: 'Edit',
									delete: 'Delete',
								},
							},
							suites: {
								title: 'Rooms',
								select: {
									label: 'Individual room permissions'
								},
								permissions: {
									all: 'All & future rooms',
									own: 'Own rooms',
									create: 'Create new rooms',
									view: 'View',
									update: 'Edit',
									delete: 'Delete',
									manageGlobalFields: 'Edit global fields',
								},
							},
							staffs: {
								title: 'Staffs',
								select: {
									label: 'Individual staff permissions'
								},
								permissions: {
									all: 'All & future staff',
									own: 'Own staff',
									viewAny: 'Access list',
									create: 'Create new staff members',
									view: 'View',
									viewInternal: 'View<br>internal details',
									update: 'Edit',
									updateInternal: 'Edit<br>internal details',
									delete: 'Delete',
									manageGlobalFields: 'Edit global fields',
									viewTrackedTime: 'View<br>tracked times',
									createTrackedTime: 'Edit<br>tracked times',
									updateWorkingHours: 'Edit<br>working hours',
								},
							},
							resources: {
								title: 'Resources',
								select: {
									label: 'Individual resource permissions'
								},
								permissions: {
									all: 'All & future resources',
									own: 'Own resources',
									viewAny: 'Access list',
									create: 'Create new resources',
									view: 'View',
									update: 'Edit',
									delete: 'Delete',
									manageGlobalFields: 'Edit global fields',
								},
							},
							groups: {
								title: 'Groups',
								select: {
									label: 'Individual group permissions'
								},
								permissions: {
									all: 'All & future groups',
									own: 'Own groups',
									viewAny: 'Access list',
									create: 'Create new groups',
									view: 'View',
									update: 'Edit',
									delete: 'Delete',
									manageGlobalFields: 'Edit global fields',
								},
							},
							invoicing: {
								title: 'Invoicing',
								permissions: {
									viewAny: 'Access list',
									view: 'View',
									viewPurchasePrices: 'View margins &<br>purchase prices',
									create: 'Create',
									update: 'Edit',
									delete: 'Delete',
								},
								resources: {
									orders: 'Orders',
									offers: 'Quotes',
									invoices: 'Invoices',
									reminders: 'Reminders',
									orderConfirmations: 'Order confirmations',
									deliveryNotes: 'Delivery notes',
									paymentConfirmations: 'Payment confirmations',
									creditNotes: 'Credit notes',
									payments: 'Payments',
									inventoryItems: 'Goods & Services',
								},
							},
							clients: {
								title: 'Clients',
								select: {
									label: 'Individual client permissions'
								},
								permissions: {
									all: 'All & future clients',
									viewAny: 'Access list',
									create: 'Create new clients',
									view: 'View',
									update: 'Edit',
									delete: 'Delete',
									manageGlobalFields: 'Edit global fields',
								},
							},
							roles: {
								title: 'Roles',
								select: {
									label: 'Limit permissions to'
								},
								permissions: {
									all: 'All & future roles',
									view: 'View roles',
									viewAny: 'Access roles list',
									create: 'Create new role',
									update: 'Edit roles',
									delete: 'Delete roles',
								},
								warnings: {
									inviteTeamMemberWithNoLimitedRolesWarning: 'WARNING: Without limiting access to roles, users may be able to gain access to higher permissions.',
									inviteTeamMemberWithNoLimitedRolesWarningExplanation: 'Select roles and only assign them a view permission. This prevents users from gaining access to higher permissions.',
									createEditRoleWarning: 'WARNING: By editing or creating new roles, users can easily gain access to higher permissions.',
								},
							},
							analytics: {
								title: 'Analytics',
								permissions: {
									viewUsageAnalytics: 'Access usage analytics',
									viewCostReport: 'Access cost report',
									viewCostReportWarning: 'Users will be able to see <u>all</u> booked resource names and prices.',
									viewTimeTrackingAnalytics: 'Evaluation of working time recording',
								},
							},
							teams: {
								title: 'Teams',
								permissions: {
									invite: 'Invite team members',
									uninvite: 'Remove team invites',
									viewMembers: 'View team members',
									editMembers: 'Remove team members',
									editRoles: 'Edit team members\' roles',
									manageUserPermissions: 'Edit team members\' individual permissions',
									viewChangelog: 'Access change log',
									undoChangelog: 'Undo changes in change log',
									editSettings: 'Access and edit team settings',
									editAdministration: 'Edit administration settings',
									editIntegrations: 'Team integrations (API, Webhooks)',
									editIntegrationsWarning: 'Users will be able to programmatically access, alter and delete <u>all</u> content.',
									superAdminsOnly: 'Superadmins only',
									viewBilling: 'Access billing',
									editBilling: 'Edit billing',
									editPrivacy: 'Edit privacy settings',
									deleteTeam: 'Delete team',
								},
							},
							forceCheckedTooltip: 'Inherited from parent permission',
						},
					},
				},
			}
		},
	},
	helpers: {
		planning: {
			dayPilot: {
				init: {
					loadingMessage: 'Loading...',
				},
				headers: {
					rooms: 'Rooms',
					calendarWeek: 'Week',
					staff: 'Staff',
					resources: 'Resources',
					utilization: 'Utilisation',
					bookingName: 'Name',
					duration: 'Duration',
				},
				menus: {
					view: 'View...',
					viewUtilization: 'Utilization analytics',
					viewStaffs: 'View staff list',
					viewResources: 'View resource list',
					viewProjectOverview: 'Project details',
					viewProjectGantt: 'Single project planning',
					edit: 'Edit...',
					removeResource: 'Remove {name}',
					changeStatus: 'Set status',
					clearStatus: 'Clear status',
					removeOptional: 'Remove draft status',
					addOptional: 'Mark as draft/optional',
					duplicate: 'Duplicate',
					splitBooking: 'Split booking here',
					detachDay: 'Detach day',
					splitIntoDays: 'Split into days',
					removeDays: 'Remove days...',
					sendToInvoice: 'Create invoice',
					delete: 'Delete',
					deleteLink: 'Delete link',
					transferTrackedTime: 'Transfer to time tracking',
					editTransferTrackedTime: 'Edit for time tracking',
				},
				events: {
					group: '{numBookings} bookings'
				},
				bubbles: {
					vacation: 'Holidays',
				},
				buttons: {
					expandGroups: 'expand',
					collapseGroups: 'collapse',
					collapseGanttProjects: 'collapse everything',
					collapseGanttSubprojects: 'collapse subprojects and phases',
					collapseGanttGroupsOnly: 'collapse phases only',
				},
			}
		}
	},
	utils: {
		alerts: {
			confirmReloadApp: {
				title: 'New version available',
				content: 'freispace has just been updated. To continue using freispace, we recommend reloading the page.',
				confirmButton: 'Reload page',
				cancelButton: 'Cancel'
			},
			confirmSessionExpired: {
				title: 'Session expired',
				content: 'You have been logged out due to inactivity.',
				confirmButton: 'Login again',
				cancelButton: 'Cancel'
			},
			confirmBookingDeletion: {
				title: 'Confirm deletion',
				content: 'The booking <b>{bookingName}</b> {projectName:string} will be deleted.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmMultiBookingDeletion: {
				title: 'Confirm deletion',
				content: 'All selected bookings will be deleted.',
				confirmButton: 'Delete all',
				cancelButton: 'Cancel'
			},
			confirmBookingConversionToHourly: {
				title: 'Booking conversion',
				content: 'By splitting this booking, you will convert it from being an <strong>all-day</strong> booking into two <strong>hour-based</strong> bookings.<br>Please confirm this is intentional.',
				confirmButton: 'Confirm change',
				cancelButton: 'Cancel'
			},
			confirmProjectDeletion: {
				title: 'Confirm deletion',
				content: 'Please confirm that you want to delete the project <b>{projectName}</b>.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmSubprojectDeletion: {
				title: 'Confirm deletion',
				content: 'Please confirm the deletion of subproject <b>{projectName}</b>.<br>Booking will be associated to the main project.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmProjectDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate <b>{projectName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel',
				includeSubprojects: 'Duplicate subprojects as well',
				includeCostNumbers: 'Include account numbers',
				includePlanning: 'Include planning<br><span class="font-normal text-xs">(bookings on resources are not taken into account)</span>',
			},
			confirmProjectStatusToggle: {
				titleActivate: 'Confirm re-activation',
				titleArchive: 'Confirm archiving',
				contentActivate: 'Please confirm you want to re-activate project <b>{projectName}</b>.',
				contentArchive: 'Please confirm you want to archive project <b>{projectName}</b>.',
				confirmActivateButton: 'Re-activate',
				confirmArchiveButton: 'Archive',
				cancelButton: 'Cancel'
			},
			confirmResourceDeletion: {
				title: 'Confirm deletion',
				content: 'The resource <b>{resourceName}</b> will be deleted.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmMultiResourceDeletion: {
				title: 'Confirm deletion',
				content: 'All selected resources will be deleted.',
				confirmButton: 'Delete all',
				cancelButton: 'Cancel'
			},
			confirmResourceDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the resource <b>{resourceName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmSuiteDeletion: {
				title: 'Confirm deletion',
				content: 'Do you really wish to delete the room <b>{suiteName}</b>?<br><br><b>WARNING: All bookings at this room will also be deleted.</b>',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmSuiteDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the room <b>{suiteName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmStaffDeletion: {
				title: 'Confirm deletion',
				content: 'The staff member <b>{staffName}</b> will be deleted.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmMultiStaffDeletion: {
				title: 'Confirm deletion',
				content: 'All selected staff members will be deleted.',
				confirmButton: 'Delete all',
				cancelButton: 'Cancel'
			},
			confirmSiteDeletion: {
				title: 'Confirm deletion',
				content: 'Do you really wish to delete the site <b>{siteName}</b>?<br><br><b>WARNING: All rooms and associated bookings will also be deleted.</b>',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmLeavingTeam: {
				title: 'Confirm leaving team',
				content: 'Do you really wish to leave team <b>{teamName}</b>?',
				confirmButton: 'Leave',
				cancelButton: 'Cancel'
			},
			confirmRemovingTeamMember: {
				title: 'Confirm removing team member',
				content: 'Do you really want to remove <b>{memberName}</b> from team <b>{teamName}</b>?',
				confirmButton: 'Remove',
				cancelButton: 'Cancel'
			},
			confirmRemovingTeamInvite: {
				title: 'Confirm cancelling invitation',
				content: 'Do you really wish to cancel the invitation for <b>{memberName}</b> to join team <b>{teamName}</b>?',
				confirmButton: 'Cancel invite',
				cancelButton: 'Cancel'
			},
			infoNeedMoreTeamAdmins: {
				title: 'Can\'t leave team',
				content: 'You are the team\'s last superadmin. To leave the team, make another team member superadmin. To the delete the team instead, head over to <i>administration</i>.',
				cancelButton: 'OK'
			},
			confirmDeletingTeam: {
				title: 'Delete team {teamName}?',
				content: 'Do you really want to delete team {teamName}? <b>All associated data (e.g. rooms, bookings) will be deleted.</b><br><br>Confirm the deletion by typing <span class="bg-gray-100 text-pink-700 px-2 py-0.5 rounded dark:bg-gray-600 dark:text-pink-200">{teamName}</span> below.',
				inputPlaceholder: 'Enter team name to confirm',
				confirmButton: 'Delete team',
				cancelButton: 'Cancel',
				wrongInput: 'Team name does not match.',
			},
			infoActiveTeamDeleted: {
				title: 'Current team was deleted',
				content: 'The superadmin has deleted your currently selected team. The page will reload.',
				confirmButton: 'OK',
			},
			infoActiveTeamSwitched: {
				title: 'Switched active team',
				content: 'The currently selected team was switched. The page will reload.',
				confirmButton: 'OK',
			},
			errorTeamDeletion: {
				title: 'Error deleting team',
				content: 'There was an unknown error deleting the team. Please contact our support.',
				confirmButton: 'OK',
			},
			confirmDeletingUser: {
				title: 'Delete account?',
				content: 'Do you really want to <b>irreversibly delete</b> your user account?<br><br><b>Please confirm the account deletion</b> by entering <span class="bg-gray-100 text-pink-700 px-2 py-0.5 rounded dark:bg-gray-600 dark:text-pink-200">DELETE ACCOUNT</span> below.',
				confirmButton: 'Delete account',
				cancelButton: 'Cancel',
				inputPlaceholder: 'Enter confirmation here',
				expectedInput: 'DELETE ACCOUNT',
				wrongInput: 'Your input must match exactly.',
			},
			errorUserDeletion: {
				title: 'Error deleting account',
				content: 'You account could not be deleted. Please contact our support.',
				confirmButton: 'OK',
			},
			confirmGroupDeletion: {
				title: 'Confirm deletion',
				content: 'Please confirm that you want to delete the group <b>{groupName}</b>.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmGroupDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the group <b>{groupName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			conflictOnImportingVCards: {
				title: 'Import conflict',
				content: 'The provided vCard contains multiple contacts. To update this contact, a vCard containing a single contact is required.',
				cancelButton: 'OK'
			},
			confirmUndoTeamActivity: {
				title: 'Undo activity?',
				titleRestore: 'Undo deletion?',
				content: 'Are you sure you want to undo <b>{userName}</b>\'s changed on <b>{resourceName}</b>?',
				contentRestore: 'Do you want to restore <b>{resourceName}</b>?',
				confirmButton: 'Confirm undo',
				cancelButton: 'Cancel',
			},
			displayServerErrorMessage: {
				confirmButton: 'OK',
			},
			confirmPlannerViewDeletion: {
				title: 'Delete view?',
				titleSharedView: 'Delete shared view?',
				content: 'Do you want to delete the view <b>{viewName}</b>?',
				contentSharedView: 'Do you want to delete the shared view <b>{viewName}</b>?<br>Team members will no longer have access to this view.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			plannerViewUpdated: {
				title: 'Current view was updated',
				content: 'A team member has updated the currently selected team view. The view is being refreshed.',
				confirmButton: 'OK',
			},
			plannerViewDeleted: {
				title: 'Current view was deleted',
				content: 'A team member has deleted the currently selected team view. Switching back to the default view.',
				confirmButton: 'OK',
			},
			confirmTenantDeletion: {
				title: 'Delete tenant?',
				content: 'Do you want to delete the tenant <b>{tenantName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmTeamSlugDeletion: {
				title: 'Delete team URL?',
				content: 'Do you want to delete the team URL <b>{teamSlug}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmBookingStatusDeletion: {
				title: 'Delete status?',
				content: 'Do you want to delete the status <b>{statusName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmAccountNumberDeletion: {
				title: 'Delete account number?',
				content: 'Do you want to delete the account number <b>{accountNumber}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmMultiAccountNumbersDeletion: {
				title: 'Delete account numbers?',
				content: 'Do you want to delete the selected account numbers?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmRoleDeletion: {
				title: 'Delete role?',
				content: 'Do you want to delete the role <b>{role}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmSetRoleDefault: {
				title: 'Set as default role?',
				content: 'Do you want to set the role <b>{role}</b> as default? It will be pre-selected for new team member invites.',
				confirmButton: 'Set default',
				cancelButton: 'Cancel'
			},
			userRoleUpdated: {
				title: 'Reload required',
				content: 'Your account permissions have changed. A reload is required for your new permissions to be applied.',
				confirmButton: 'Reload page',
			},
			confirmGlobalFieldDeletion: {
				title: 'Delete field?',
				content: 'Do you want to delete the field <b>{fieldName}</b>?<br><br><b>WARNING: This also deletes all data entered into this field!</b>',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmDeleteWebhook: {
				title: 'Delete webhook?',
				content: 'Do you want to delete this webhook?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmRegenerateWebhookSecret: {
				title: 'Regenerate secret?',
				content: 'Generate a new secret for this webhook?<br>The previous secret will be invalidated. You might need to adjust your receiving application.',
				confirmButton: 'Regenerate',
				cancelButton: 'Cancel'
			},
			confirmDeleteFile: {
				title: 'Delete file?',
				content: 'Do you want to delete the file <b>{fileName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmDeleteAccessToken: {
				title: 'Delete API key?',
				content: 'Do you want to delete this API key?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			showPlainAccessToken: {
				title: 'API key created',
				content: 'New API key created. Please copy the access token below. It will <u>not</u> be shown again.<br><br><textarea type="text" class="input font-mono p-2 leading-5 break-all h-[5.5em]" readonly>{accessToken}</textarea>',
				confirmButton: 'Copy',
				cancelButton: 'Close'
			},
			warnOutdatedApp: {
				title: 'Refresh required',
				content: 'A new version is available. A refresh is required to continue using freispace.',
				confirmButton: 'Reload page',
			},
			confirmRegionDeletion: {
				title: 'Delete region?',
				content: 'Do you want to delete the region <b>{regionName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmTimeTrackingPresenceDeletion: {
				title: 'Delete entry?',
				content: 'Do you want to delete the recorded time on project <b>{projectName}</b>?',
				contentStartEnd: 'Do you want to delete the recorded times<br>from <b>{start} to {end}</b> on project <b>{projectName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmTimeTrackingPresenceItemDeletion: {
				title: 'Delete entry?',
				content: 'Delete the tagged item {quantity}&times; <b>{itemName}</b> on the time record dated {date}?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmTimeTrackingAbsenceDeletion: {
				title: 'Delete entry?',
				contentStart: 'Do you want to delete the absence <b>{absenceTypeName}</b> on <b>{start}</b>?',
				contentStartEnd: 'Do you want to delete the absence <b>{absenceTypeName}</b> from <b>{start}</b> to <b>{end}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmTimeTrackingVacationDeletion: {
				title: 'Delete holiday entry?',
				contentStart: 'Do you want to delete the holiday entry on <b>{start}</b>?',
				contentStartEnd: 'Do you want to delete the holiday entry from <b>{start}</b> to <b>{end}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmClientDeletion: {
				title: 'Confirm deletion',
				content: 'Do you want to delete the client <b>{clientName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmClientAddressDeletion: {
				title: 'Confirm deletion',
				content: 'Do you want to delete the address <b>{addressName}</b> on client <b>{clientName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmClientAddressDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the address <b>{addressName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmClientContactDeletion: {
				title: 'Confirm deletion',
				content: 'Do you want to delete the contact <b>{contactName}</b> on client <b>{clientName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmClientContactDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the contact <b>{contactName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmDeleteScreen: {
				title: 'Delete screen?',
				content: 'Do you want to delete the hallway screen <b>{screenName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			selectDaysToRemove: {
				title: 'Remove days',
				content: 'Which days should be removed from the booking?',
				contentMultiple: 'Which days should be removed from the {num} selected bookings?',
				confirmButton: 'Remove',
				cancelButton: 'Cancel',
				saturdays: 'Saturdays',
				sundays: 'Sundays',
				holidays: 'Public holidays',
				nonWorkingDays: 'Non-working days',
			},
			confirmCompanyDeletion: {
				title: 'Delete company?',
				content: 'Do you really want to delete the company <b>{companyName}</b>?<br><br><b>WARNING: This also deletes all associated invoices. The deletion might be illegal.</b>',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmGenericDeletion: {
				title: 'Really delete?',
				content: 'Are you sure you wish to delete this item?',
				contentName: 'Are you sure you wish to delete <b>{name}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmInventoryItemDeletion: {
				title: 'Really delete?',
				content: 'Do you want to delete the item <b>{itemName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmInventoryItemDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the item <b>{itemName}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmInvoiceDeletion: {
				title: 'Really delete?',
				content: 'Do you want to delete the invoice <b>{subject}</b>?',
				contentRecurring: 'No further invoices will be created automatically; invoices that have already been created will remain.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmInvoiceDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the invoice <b>{subject}</b>?',
				contentRecurring: 'The automatic generation of the new invoice is deactivated.',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			invoiceLocked: {
				title: 'Invoice locked',
				content: 'The invoice has already been locked and can no longer be edited or deleted.',
				confirmButton: 'Okay',
			},
			confirmInvoiceFinalize: {
				title: 'Invoice will be locked',
				content: 'Adhering to regulations, invoices will <b>no longer be editable</b> after finalizing them. The invoice will now be locked.',
				doNotShowAgain: 'Do not show again',
				confirmButton: 'Continue',
				cancelButton: 'Cancel'
			},
			confirmInvoiceCancellation: {
				title: 'Cancel invoice?',
				content: 'You are about to irreversibly cancel the Invoice no. <b>{number}</b> and create a cancellation invoice.',
				confirmButton: 'Confirm cancellation',
				cancelButton: 'Cancel'
			},
			enterpriseOnlyMessage: {
				title: 'Enterprise feature',
				content: 'This feature is only available to teams using the Enterprise plan.',
				confirmButton: 'Okay',
			},
			enterpriseOnlyLogRetention: {
				title: 'Extended log retention',
				content: 'We offer extended log retention within our Enterprise plan.<br><a href="mailto:support@freispace.com" class="text-blue-500 dark:text-blue-300 underline hover:no-underline">Contact us</a> to unlock longer log retention.',
				confirmButton: 'Okay',
			},
			confirmBookingSplitIntoDays: {
				title: 'Split booking into days',
				content: 'Are you sure you want to split the selected booking into days?',
				titleMultiple: 'Split bookings into days',
				contentMultiple: 'Are you sure you want to split the selected bookings into days?',
				confirmButton: 'Split',
				cancelButton: 'Cancel'
			},
			confirmDeleteTemplate: {
				title: 'Delete template?',
				content: 'Do you want to delete the template <b>{templateName}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmDeleteWorkingTimes: {
				title: 'Delete working times?',
				content: 'Are you sure you wish to delete the selected working time settings?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmSmtpServerDeletion: {
				title: 'Delete SMTP server?',
				content: 'Do you want to delete the server <b>{serverName}</b> with the hostname <em>{serverHost}</em>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmOfferDeletion: {
				title: 'Really delete?',
				content: 'Do you want to delete the quote <b>{subject}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmOfferDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the quote <b>{subject}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			offerLocked: {
				title: 'Quote locked',
				content: 'The quote has already been locked and can no longer be edited or deleted.',
				confirmButton: 'Okay',
			},
			confirmOfferFinalize: {
				title: 'Quote will be locked',
				content: 'Adhering to regulations, quotes will <b>no longer be editable</b> after finalizing them. The quote will now be locked.',
				doNotShowAgain: 'Do not show again',
				confirmButton: 'Continue',
				cancelButton: 'Cancel'
			},
			confirmSiteStatusToggle: {
				titleActivate: 'Confirm re-activation',
				titleArchive: 'Confirm archiving',
				contentActivate: 'Please confirm you want to re-activate the site <b>{siteName}</b>.',
				contentArchive: 'Please confirm you want to archive the site <b>{siteName}</b>.<br><br><b>All associated rooms will also be archived.</b>',
				confirmActivateButton: 'Re-activate',
				confirmArchiveButton: 'Archive',
				cancelButton: 'Cancel'
			},
			confirmSuiteStatusToggle: {
				titleActivate: 'Confirm re-activation',
				titleArchive: 'Confirm archiving',
				contentActivate: 'Please confirm you want to re-activate the room <b>{suiteName}</b>.',
				contentArchive: 'Please confirm you want to archive the room <b>{suiteName}</b>.',
				confirmActivateButton: 'Re-activate',
				confirmArchiveButton: 'Archive',
				cancelButton: 'Cancel'
			},
			confirmResourceStatusToggle: {
				titleActivate: 'Confirm re-activation',
				titleArchive: 'Confirm archiving',
				contentActivate: 'Please confirm you want to re-activate the resource <b>{resourceName}</b>.',
				contentArchive: 'Please confirm you want to archive the resource <b>{resourceName}</b>.',
				confirmActivateButton: 'Re-activate',
				confirmArchiveButton: 'Archive',
				cancelButton: 'Cancel'
			},
			confirmStaffStatusToggle: {
				titleActivate: 'Confirm re-activation',
				titleArchive: 'Confirm archiving',
				contentActivate: 'Please confirm you want to re-activate <b>{staffName}</b>.',
				contentArchive: 'Please confirm you want to archive <b>{staffName}</b>.',
				confirmActivateButton: 'Re-activate',
				confirmArchiveButton: 'Archive',
				cancelButton: 'Cancel'
			},
			confirmDepartmentDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the department <b>{name}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmDepartmentDeletion: {
				title: 'Really delete?',
				content: 'Delete department <b>{name}</b>?<br>Roles and workflows will also be deleted, and assigned staff will lose their assignment.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmDepartmentRoleDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the department role <b>{name}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
			confirmDepartmentRoleDeletion: {
				title: 'Really delete?',
				content: 'Delete department role <b>{name}</b>?<br>Workflows will also be deleted, and assigned staff will lose their assignment.',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmOrderDeletion: {
				title: 'Really delete?',
				content: 'Do you want to delete the order <b>{orderNumber}</b>?',
				confirmButton: 'Delete',
				cancelButton: 'Cancel'
			},
			confirmOrderDuplication: {
				title: 'Create copy?',
				content: 'Do you want to duplicate the order <b>{orderNumber}</b>?',
				confirmButton: 'Duplicate',
				cancelButton: 'Cancel'
			},
		},
		toasts: {
			general: {
				'loading': 'Loading...',
				'saving': 'Saving...',
				'creating': 'Creating...',
				'deleting': 'Deleting...',
				'generatingFile': 'Generating file...',
			},
			bookingCreationSuccessful: 'Booking created.',
			bookingCreationFailed: 'Booking creation failed.',
			bookingUpdateSuccessful: 'Booking updated.',
			bookingUpdateFailed: 'Error updating.',
			bookingDeletionSuccessful: 'Booking deleted.',
			bookingDeletionFailed: 'Error deleting.',
			bookingMovingSuccessful: 'Booking moved.',
			bookingMovingFailed: 'Error moving.',
			bookingsMovingSuccessful: 'Bookings moved.',
			bookingsMovingFailed: 'Error moving.',
			bookingMovingFailedAlreadyBooked: 'Already booked.',
			bookingResizingSuccessful: 'Booking length adjusted.',
			bookingResizingFailed: 'Error resizing.',
			bookingSplitSuccessful: 'Booking split.',
			bookingSplitFailed: 'Error splitting.',
			bookingSplitFailedTooShort: 'Not possible: Booking too short.',
			bookingSplitDaySuccessful: 'Detached day.',
			bookingSplitDayFailed: 'Error detaching.',
			bookingSplitDayFailedTooShort: 'Not possible: Booking too short.',
			bookingDuplicationSuccessful: 'Booking duplicated.',
			bookingDuplicationFailed: 'Error duplicating.',
			bookingDuplicationMultipleSuccessful: 'Bookings duplicated.',
			bookingDuplicationMultipleFailed: 'Error duplicating bookings.',
			bookingStatusUpdateSuccessful: 'Booking status updated.',
			bookingStatusUpdateFailed: 'Error updating status.',
			bookingStatusUpdateMultipleSuccessful: 'Booking statuses updated.',
			bookingStatusUpdateMultipleFailed: 'Error updating statuses.',
			bookingDraftUpdateSuccessful: 'Draft status updated.',
			bookingDraftUpdateFailed: 'Error updating.',
			bookingStatusCreationSuccessful: 'Booking status created.',
			bookingStatusCreationFailed: 'Booking status creation failed.',
			bookingStatusDeletionSuccessful: 'Booking status deleted.',
			bookingStatusDeletionFailed: 'Error deleting.',
			bookingStatusSetDefaultSuccessful: 'Booking status updated.',
			bookingStatusSetDefaultFailed: 'Error updating.',
			bookingSplitIntoDaysLoading: 'Splitting...',
			bookingSplitIntoDaysSuccessful: 'Split successful.',
			bookingSplitIntoDaysFailed: 'Error splitting.',
			copyTextToClipboardSuccessful: 'Text copied.',
			copyTextToClipboardFailed: 'Error copying text.',
			projectDeletionSuccessful: 'Project deleted.',
			projectDeletionFailed: 'Error deleting.',
			projectStatusToggleSuccessful: 'Project status updated.',
			projectStatusToggleFailed: 'Error changing status.',
			projectDuplicationSuccessful: 'Project copy created.',
			projectDuplicationFailed: 'Error duplicating project.',
			projectUpdateSuccessful: 'Project updated.',
			projectCreationSuccessful: 'Project created.',
			subprojectCreationSuccessful: 'Subproject created.',
			subprojectsCreationSuccessful: 'Subprojects created.',
			subprojectCreationFailed: 'Error creating.',
			subprojectDeletionSuccessful: 'Subproject deleted.',
			subprojectDeletionFailed: 'Error deleting.',
			resourceDeletionSuccessful: 'Resource deleted.',
			resourceDeletionFailed: 'Error deleting.',
			resourceUpdateSuccessful: 'Resource updated.',
			resourceCreationSuccessful: 'Resource created.',
			resourceDuplicationSuccessful: 'Resource copy created.',
			resourceDuplicationFailed: 'Error duplicating resource.',
			suiteDeletionSuccessful: 'Room deleted.',
			suiteDeletionFailed: 'Error deleting.',
			siteUpdateSuccessful: 'Site updated.',
			siteUpdateFailed: 'Error saving.',
			siteCreationSuccessful: 'Site created.',
			siteCreationFailed: 'Error saving.',
			siteDeletionSuccessful: 'Site deleted.',
			siteDeletionFailed: 'Error deleting.',
			staffUpdateSuccessful: 'Staff updated.',
			staffUpdateFailed: 'Error saving.',
			staffCreationSuccessful: 'Staff created.',
			staffCreationFailed: 'Error saving.',
			staffDeletionSuccessful: 'Staff deleted.',
			staffDeletionFailed: 'Error deleting.',
			suiteUpdateSuccessful: 'Room updated.',
			suiteUpdateFailed: 'Error saving.',
			suiteCreationSuccessful: 'Room created.',
			suiteCreationFailed: 'Error saving.',
			suiteDuplicationSuccessful: 'Room copy created.',
			suiteDuplicationFailed: 'Error duplicating room.',
			settingSavedSuccessful: 'Setting saved.',
			settingSavedFailed: 'Error saving.',
			profilePhotoUploadSuccessful: 'Upload successful.',
			profilePhotoUploadFailed: 'Upload error.',
			profilePhotoDeletionSuccessful: 'Profile picture deleted.',
			profilePhotoDeletionFailed: 'Error deleting.',
			profileUpdateSuccessful: 'Profile updated.',
			profileUpdateFailed: 'Error saving.',
			passwordUpdateSuccessful: 'Password changed.',
			passwordUpdateFailed: 'Error saving.',
			teamPhotoUploadSuccessful: 'Upload successful.',
			teamPhotoUploadFailed: 'Upload error.',
			teamPhotoDeletionSuccessful: 'Team picture deleted.',
			teamPhotoDeletionFailed: 'Error deleting.',
			teamSettingsUpdateSuccessful: 'Settings saved.',
			teamSettingsUpdateFailed: 'Error saving.',
			teamBusinessSettingsUpdateSuccessful: 'Settings saved.',
			teamBusinessSettingsUpdateFailed: 'Error saving.',
			teamMemberUpdateSuccessful: 'Role updated.',
			teamMemberUpdateFailed: 'Error saving.',
			leavingTeamSuccessful: 'Team left.',
			leavingTeamFailed: 'Error leaving team.',
			removingTeamMemberSuccessful: 'Removed team member.',
			removingTeamMemberFailed: 'Error removing team member.',
			invitationSentSuccessful: 'Invitation(s) sent.',
			invitationSentFailed: 'Error sending invitation(s).',
			removingInviteSuccessful: 'Team invite removed.',
			removingInviteFailed: 'Error cancelling team invite.',
			resendInviteSuccessful: 'Invite re-sent.',
			resendInviteFailed: 'Error sending invite.',
			dPAGenerationFailed: 'Error creating document.',
			exportTeamDataFailed: 'Error exporting team data.',
			acceptInviteSuccessful: 'Invitation accepted.',
			acceptInviteFailed: 'Error accepting invite.',
			denyInviteSuccessful: 'Invite denied.',
			denyInviteFailed: 'Error denying invite.',
			resourceRemovalSuccessful: 'Resource removed.',
			resourceRemovalFailed: 'Error removing.',
			itemsAddedToGroupSuccessful: 'Resource added.',
			itemsAddedToGroupFailed: 'Error adding resources.',
			groupCreationSuccessful: 'Group created.',
			groupCreationFailed: 'Error creating.',
			groupUpdateSuccessful: 'Group updated.',
			groupUpdateFailed: 'Error saving.',
			groupDeletionSuccessful: 'Group deleted.',
			groupDeletionFailed: 'Error deleting.',
			groupDuplicationSuccessful: 'Group copy created.',
			groupDuplicationFailed: 'Error duplicating group.',
			vCardImportSuccessful: 'Import successful.',
			vCardImportFailed: 'Import failed.',
			qrCodeGenerationFailed : 'Error generating QR code.',
			deletingStaffPictureSuccessful : 'Picture deleted.',
			deletingStaffPictureFailed : 'Error deleting picture.',
			updatingStaffInternalsSuccessful : 'Staff updated.',
			updatingStaffInternalsFailed : 'Error saving.',
			assigningStaffUserSuccessful : 'Team member assigned.',
			assigningStaffUserFailed : 'Error assigning team member.',
			unassigningStaffUserSuccessful : 'Team member unassigned.',
			unassigningStaffUserFailed : 'Error unassigning team member.',
			staffPictureUploadSuccessful : 'Image uploaded.',
			staffPictureUploadFailed : 'Error uploading.',
			assigningStaffGroupSuccessful : 'Groups saved.',
			assigningStaffGroupFailed : 'Error saving.',
			unassigningStaffGroupSuccessful : 'Group unassigned.',
			unassigningStaffGroupFailed : 'Error removing.',
			teamActivityUndoSuccessful : 'Change undone.',
			teamActivityUndoFailed : 'Error undoing change.',
			teamActivityUndoDeleteSuccessful : 'Restored.',
			teamActivityUndoDeleteFailed : 'Error restoring.',
			plannerViewSavedSuccessful : 'View created.',
			plannerViewSavedFailed : 'Error saving.',
			plannerViewUpdateSuccessful : 'View updated.',
			plannerViewUpdateFailed : 'Error saving.',
			plannerViewChangeFailed : 'Error loading view.',
			plannerViewDeletionSuccessful : 'View deleted.',
			plannerViewDeletionFailed : 'Error deleting.',
			tenantActivationFailed : 'Error activating tenant.',
			tenantActivationSuccessful : 'Tenant activated.',
			tenantDeactivationFailed : 'Error deactivating tenant.',
			tenantDeactivationSuccessful : 'Tenant deactivated.',
			tenantDeletionFailed : 'Error deleting tenant.',
			tenantDeletionSuccessful : 'Tenant deleted.',
			tenantUpdateFailed : 'Error updating tenant.',
			tenantUpdateSuccessful : 'Tenant updated.',
			tenantCreationFailed : 'Error creating tenant.',
			tenantCreationSuccessful : 'Tenant created',
			teamSlugUpdateSuccessful : 'Updated team login URL.',
			teamSlugUpdateFailed : 'Error updating URL.',
			accountNumberCreatedSuccessfully: 'Account number created.',
			accountNumberCreationFailed: 'Error creating number.',
			accountNumberUpdatedSuccessfully: 'Account number updated.',
			accountNumberUpdateFailed: 'Error updating number.',
			accountNumberDeletionSuccessful: 'Account number deleted.',
			accountNumberDeletionFailed: 'Error deleting number.',
			accountNumbersDeletionSuccessful: 'Account numbers deleted.',
			accountNumbersDeletionFailed: 'Error deleting numbers.',
			roleCreationSuccessful: 'Role created.',
			roleCreationFailed: 'Error creating role.',
			roleDeletionSuccessful: 'Role deleted.',
			roleDeletionFailed: 'Error deleting role.',
			roleUpdateSuccessful: 'Role updated.',
			roleUpdateFailed: 'Error updating role.',
			invalidImageFormat: 'Invalid image format.',
			customFieldSavedSuccessfully: 'Field saved.',
			customFieldSaveFailed: 'Error saving field.',
			customFieldCreatedSuccessfully: 'Field created.',
			customFieldCreationFailed: 'Error creating field.',
			customFieldDeletedSuccessfully: 'Field deleted.',
			customFieldDeletionFailed: 'Error deleting field.',
			customFieldOrderSavedSuccessfully: 'Sort order saved.',
			customFieldOrderSaveFailed: 'Error saving sort order.',
			customFieldGeneralException: 'Error on writing custom fields.',
			defaultRoleSetSuccessfully: 'Default role set.',
			defaultRoleSetFailed: 'Error setting default role.',
			assigningResourceGroupSuccessful: 'Resource group saved',
			assigningResourceGroupFailed: 'Error saving resource group',
			webhookCreatedSuccessfully: 'Webhook created.',
			webhookCreationFailed: 'Error creating webhook.',
			webhookUpdatedSuccessfully: 'Webhook updated.',
			webhookUpdateFailed: 'Error updating webhook.',
			webhookDeletedSuccessfully: 'Webhook deleted.',
			webhookDeletionFailed: 'Error deleting webhook.',
			projectGanttUpdateFailed: 'Error updating.',
			ganttTaskStatusUpdateSuccessful: 'Status updated.',
			ganttTaskStatusUpdateFailed: 'Error updating status.',
			ganttTaskDuplicationSuccessful: 'Task duplicated.',
			ganttTaskDuplicationFailed: 'Error duplicating task.',
			ganttTaskDeletionSuccessful: 'Deleted.',
			ganttTaskDeletionFailed: 'Error deleting.',
			fileDeletedSuccessfully: 'File deleted.',
			ganttTaskMoveSuccessful: 'Moved.',
			ganttTaskMoveFailed: 'Error moving.',
			fileDeletionFailed: 'Error deleting file.',
			fileUploadedSuccessfully: 'File uploaded.',
			filesUploadedSuccessfully: '{num} files uploaded.',
			fileUploadFailed: 'Error uploading.',
			fileDownloadFailed: 'Error downloading.',
			accessTokenDeletedSuccessfully: 'API key deleted.',
			accessTokenDeletionFailed: 'Error deleting API key.',
			accessTokenCreationFailed: 'Error creating API key.',
			ganttModalLoadingFailed: 'Error loading.',
			publicHolidaysRegionCreationSuccessful: 'Region created.',
			publicHolidaysRegionCreationFailed: 'Error creating region.',
			publicHolidaysRegionUpdateSuccessful: 'Region updated.',
			publicHolidaysRegionUpdateFailed: 'Error updating.',
			publicHolidaysRegionDeletionSuccessful: 'Region deleted.',
			publicHolidaysRegionDeletionFailed: 'Error deleting.',
			publicHolidaysCalendarCreationSuccessful: 'Public holidays created.',
			publicHolidaysCalendarCreationFailed: 'Error creating.',
			publicHolidaysCalendarUpdateSuccessful: 'Public holidays updated.',
			publicHolidaysCalendarUpdateFailed: 'Error updating.',
			publicHolidaysCalendarDeletionSuccessful: 'Public holidays deleted.',
			publicHolidaysCalendarDeletionFailed: 'Error deleting.',
			publicHolidaysCalendarImportSuccessful: 'Public holidays imported.',
			publicHolidaysCalendarImportFailed: 'Error importing.',
			timeTrackingRecordCreationSuccessful: 'Time saved.',
			timeTrackingRecordCreationFailed: 'Error saving.',
			timeTrackingRecordTimeUpdateSuccessful: 'Times adjusted.',
			timeTrackingRecordTimeUpdateFailed: 'Error saving.',
			timeTrackingRecordUpdateSuccessful: 'Entry updated.',
			timeTrackingRecordUpdateFailed: 'Error saving.',
			activityDeletionSuccessful: 'Activity deleted.',
			activityDeletionNotAllowed: 'Deletion not allowed.',
			activityDeletionFailed: 'Error deleting.',
			activityUpdateSuccessful: 'Activity updated.',
			activityUpdateFailed: 'Error updating.',
			activityToggleSuccessful: 'Activity updated.',
			activityToggleFailed: 'Error updating.',
			activityCreationSuccessful: 'Activity created.',
			activityCreationFailed: 'Error creating.',
			timeTrackingAbsenceRecordCreationSuccessful: 'Absence saved.',
			timeTrackingAbsenceRecordCreationInvalid: 'Not saved.',
			timeTrackingAbsenceRecordCreationFailed: 'Error saving.',
			timeTrackingAbsenceRecordUpdateSuccessful: 'Absence updated.',
			timeTrackingAbsenceRecordUpdateFailed: 'Error updating.',
			timeTrackingAbsenceRecordConflict: 'Absence already exists.',
			timeTrackingVacationRecordCreationSuccessful: 'Holiday saved.',
			timeTrackingVacationRecordCreationFailed: 'Error saving.',
			timeTrackingVacationRecordUpdateSuccessful: 'Holiday updated.',
			timeTrackingVacationRecordUpdateFailed: 'Error updating.',
			timeTrackingVacationRecordConflict: 'Holiday within time frame.',
			timeTrackingVacationRecordNoQuota: 'Not enough days left.',
			absenceTypeCreationSuccessful: 'Absence type created.',
			absenceTypeCreationFailed: 'Error creating.',
			absenceTypeUpdateSuccessful: 'Absence type updated.',
			absenceTypeUpdateFailed: 'Error updating.',
			absenceTypeToggleSuccessful: 'Absence type updated.',
			absenceTypeToggleFailed: 'Error updating.',
			timeTrackingRecordDeletionSuccessful: 'Entry deleted.',
			timeTrackingRecordDeletionFailed: 'Error deleting.',
			timeTrackingRecordsCopiedFromDaySuccessful: 'Transferred plan.',
			timeTrackingRecordsCopiedFromDayFailedMissingActivity: 'Booking without activity: Transfer not possible.',
			timeTrackingRecordsCopiedFromDayFailed: 'Error transferring.',
			timeTrackingItemRecordDeletionSuccessful: 'Entry deleted.',
			timeTrackingItemRecordDeletionFailed: 'Error deleting.',
			timeTrackingItemRecordStatusUpdateSuccessful: 'Status updated.',
			timeTrackingItemRecordStatusUpdateFailed: 'Error updating.',
			bookingPdfExportSuccessful: 'Download started.',
			bookingPdfExportFailed: 'Error generating.',
			bookingPrintSuccessful: 'Printing.',
			bookingPrintFailed: 'Error printing.',
			bookingIcalExportSuccessful: 'Download started.',
			bookingIcalExportFailed: 'Error generating.',
			timeTrackingPresencesExportSuccessful: 'Download started.',
			timeTrackingPresencesExportFailed: 'Error generating.',
			clientDeletionSuccessful: 'Client deleted.',
			clientDeletionFailed: 'Error deleting.',
			clientUpdateSuccessful: 'Client saved.',
			clientUpdateFailed: 'Error saving.',
			clientCreationSuccessful: 'Client created.',
			clientCreationFailed: 'Error creating.',
			clientAddressUpdateSuccessful: 'Address saved.',
			clientAddressUpdateFailed: 'Error saving.',
			clientAddressCreationSuccessful: 'Address created.',
			clientAddressCreationFailed: 'Error creating.',
			clientAddressDeletionSuccessful: 'Address deleted.',
			clientAddressDeletionFailed: 'Error deleting.',
			clientAddressDuplicationSuccessful: 'Address duplicated.',
			clientAddressDuplicationFailed: 'Error duplicating.',
			clientContactUpdateSuccessful: 'Contact saved.',
			clientContactUpdateFailed: 'Error saving.',
			clientContactCreationSuccessful: 'Contact created.',
			clientContactCreationFailed: 'Error creating.',
			clientContactDeletionSuccessful: 'Contact deleted.',
			clientContactDeletionFailed: 'Error deleting.',
			clientContactDuplicationSuccessful: 'Contact duplicated.',
			clientContactDuplicationFailed: 'Error duplicating.',
			screenCreatedSuccessfully: 'Screen created.',
			screenCreationFailed: 'Error creating screen.',
			screenUpdatedSuccessfully: 'Screen updated.',
			screenUpdateFailed: 'Error updating screen.',
			screenDeletedSuccessfully: 'Screen deleted.',
			screenDeletionFailed: 'Error deleting screen.',
			screenMessageUpdated: 'Message updated.',
			screenMessageUpdateFailed: 'Error saving.',
			bookingResourceRemovalSuccessful: 'Resource removed.',
			bookingResourceRemovalFailed: 'Error removing.',
			bookingResourceRemovalProhibited: 'Removal not allowed: Last resource.',
			bookingRemoveDaysSuccessful: 'Days removed.',
			bookingRemoveDaysFailed: 'Error removing days.',
			bookingRemoveDaysNothingChanged: 'No changes.',
			companyUpdateSuccessful: 'Company saved.',
			companyUpdateFailed: 'Error saving.',
			companyCreationSuccessful: 'Company created.',
			companyCreationFailed: 'Error creating.',
			companyDeletionSuccessful: 'Company deleted.',
			companyDeletionFailed: 'Error deleting.',
			genericDeletionSuccessful: 'Deleted.',
			genericDeletionFailed: 'Error deleting.',
			genericSaveSuccessful: 'Saved.',
			genericSaveFailed: 'Error saving.',
			inventoryItemDeletionSuccessful: 'Item deleted.',
			inventoryItemDeletionFailed: 'Error deleting.',
			inventoryItemDuplicationSuccessful: 'Contact duplicated.',
			inventoryItemDuplicationFailed: 'Error duplicating.',
			inventoryItemUpdateSuccessful: 'Item saved.',
			inventoryItemUpdateFailed: 'Error saving.',
			inventoryItemCreationSuccessful: 'Item created.',
			inventoryItemCreationFailed: 'Error creating.',
			invoiceSaveSuccessful: 'Invoice saved.',
			invoiceSaveFailed: 'Error saving.',
			invoiceFinalizeSuccessful: 'Invoice finalized.',
			invoiceFinalizeFailed: 'Error finalizing.',
			invoiceSchedulePreparationFailed: 'Error scheduling.',
			invoiceDeletionSuccessful: 'Invoice deleted.',
			invoiceDeletionFailed: 'Error deleting.',
			invoiceDuplicationSuccessful: 'Invoice copy created.',
			invoiceDuplicationFailed: 'Error duplicating.',
			invoiceCancellationSuccessful: 'Invoice canceled.',
			invoiceCancellationFailed: 'Error cancelling invoice.',
			invoiceCreationSuccessful: 'Invoice created.',
			invoiceCreationMultipleSuccessful: 'Invoices created.',
			invoiceCreationFailed: 'Error creating invoice.',
			paymentLoadingFailed: 'Error loading.',
			paymentCreationSuccessful: 'Payment created.',
			paymentCreationFailed: 'Error saving.',
			userRoleUpdateSuccessful: 'Permissions updated.',
			reportExportLoading: 'Creating report...',
			reportExportSuccessful: 'Download started.',
			reportExportFailed: 'Error creating report.',
			templateCreatedSuccessfully: 'Template created.',
			templateCreationFailed: 'Error creating template.',
			templateUpdatedSuccessfully: 'Template updated.',
			templateUpdateFailed: 'Error updating template.',
			templateDeletedSuccessfully: 'Template deleted.',
			templateDeletionFailed: 'Error deleting template.',
			templateLoadingFailed: 'Error loading template.',
			workingHoursUpdateSuccessful: 'Times saved.',
			workingHoursUpdateFailed: 'Error saving.',
			workingHoursCreationSuccessful: 'Times created.',
			workingHoursCreationFailed: 'Error creating.',
			workingHoursDeletionSuccessful: 'Times deleted.',
			workingHoursDeletionFailed: 'Error deleting.',
			smtpServerDeletionFailed: 'Error deleting SMTP server.',
			smtpServerDeletionSuccessful: 'SMTP server deleted.',
			smtpServerUpdateFailed: 'Error updating SMTP server.',
			smtpServerUpdateSuccessful: 'SMTP server updated.',
			smtpServerCreationFailed: 'Error creating SMTP server.',
			smtpServerCreationSuccessful: 'SMTP server created',
			smtpServerLoadFailed: 'Error loading data.',
			smtpServerTestSuccessful: 'Connection successful.',
			smtpServerTestFailed: 'Connection failed.',
			documentSendSuccessful: 'E-mail sent.',
			documentSendFailed: 'Error sending.',
			recurringInvoiceSettingsUpdateSuccessful: 'Settings saved.',
			recurringInvoiceSettingsUpdateFailed: 'Error saving.',
			recurringInvoiceActivated: 'Automatic generation activated.',
			recurringInvoiceDeactivated: 'Automatic generation deactivated.',
			recurringInvoiceEmailActivated: 'Automatic sending activated.',
			recurringInvoiceEmailDeactivated: 'Automatic sending deactivated.',
			offerSaveSuccessful: 'Quote saved.',
			offerSaveFailed: 'Error saving.',
			offerFinalizeSuccessful: 'Quote finalized.',
			offerFinalizeFailed: 'Error finalizing.',
			offerDeletionSuccessful: 'Quote deleted.',
			offerDeletionFailed: 'Error deleting.',
			offerDuplicationSuccessful: 'Quote copy created.',
			offerDuplicationFailed: 'Error duplicating.',
			offerStatusUpdateSuccessful: 'Status updated.',
			offerStatusUpdateFailed: 'Error setting status.',
			vacationDaysSaveSuccessful: 'Holiday days saved.',
			vacationDaysSaveFailed: 'Error saving.',
			archiveSuccessful: 'Archived.',
			archiveFailed: 'Error archiving.',
			unarchiveSuccessful: 'Re-activated.',
			unarchiveFailed: 'Error re-activating.',
			timeTrackingFavoriteProjectRemoved: 'Project bookmark removed.',
			timeTrackingFavoriteProjectAdded: 'Project bookmarked.',
			timeTrackingFavoriteActivityRemoved: 'Activity bookmark removed.',
			timeTrackingFavoriteActivityAdded: 'Activity bookmarked.',
			timeTrackingFavoriteAbsenceRemoved: 'Absence bookmark removed.',
			timeTrackingFavoriteAbsenceAdded: 'Absence bookmarked.',
			generalErrorLoading: 'Error loading.',
			generalErrorSaving: 'Error saving.',
			departmentCreationSuccessful: 'Department created.',
			departmentCreationFailed: 'Error creating.',
			departmentUpdateSuccessful: 'Department updated.',
			departmentUpdateFailed: 'Error saving.',
			departmentDuplicationSuccessful: 'Department copy created.',
			departmentDuplicationFailed: 'Error duplicating.',
			departmentDeletionSuccessful: 'Department deleted.',
			departmentDeletionFailed: 'Error deleting.',
			departmentRoleCreationSuccessful: 'Role created.',
			departmentRoleCreationFailed: 'Error creating.',
			departmentRoleUpdateSuccessful: 'Role updated.',
			departmentRoleUpdateFailed: 'Error saving.',
			departmentRoleDuplicationSuccessful: 'Role copy created.',
			departmentRoleDuplicationFailed: 'Error duplicating.',
			departmentRoleDeletionSuccessful: 'Role deleted.',
			departmentRoleDeletionFailed: 'Error deleting.',
			workflowUpdateSuccessful: 'Workflow saved.',
			workflowUpdateFailed: 'Error saving.',
			errorLoadingToDos: 'Error loading to-dos.',
			orderSaveSuccessful: 'Order saved.',
			orderSaveFailed: 'Error saving.',
			orderDeletionSuccessful: 'Order deleted.',
			orderDeletionFailed: 'Error deleting.',
			orderDuplicationSuccessful: 'Order copy created.',
			orderDuplicationFailed: 'Error duplicating.',
		},
		vCards: {
			types: {
				undefined: 'Undefined',
				contact: {
					work: 'Work',
					home: 'Private',
					cell: 'Mobile',
					fax: 'Fax',
					pager: 'Pager',
					voice: 'Voice',
					pref: 'Preferred',
					car: 'Car',
					other: 'Other',
				},
				address: {
					work: 'Work',
					home: 'Private',
					intl: 'International',
					dom: 'Domestic',
					postal: 'Postal',
					parcel: 'Parcel',
					other: 'Other',
				},
				field: {
					anniversary: 'Anniversary',
					bday: 'Birthday',
					gender: 'Gender',
					lang: 'Language',
					geo: 'Geo-coordinates',
					tz: 'Timezone',
					birthplace: 'Birthplace',
					expertise: 'Expertise',
					hobby: 'Hobby',
					interest: 'Interest',
					url: 'URL',
				},
			},
		},
	},
	error: {
		title: 'Error',
		status403: {
			title: '👀 No access.',
			description: 'You don\'t have permission to access this resource.',
			button: 'go back',
		},
		status404: {
			title: '👻 Not found.',
			description: 'We could not find the requested resource.',
			button: 'go back',
		},
		unknown: {
			title: '😥 Sorry, something went wrong.',
			description: 'Please try again or go back to the previous page.',
			buttons: {
				back: 'go back',
				retry: 'try again',
			},
		},
	}
}

export default en
